# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc


variables:
  CCACHE_DIR: $(Agent.BuildDirectory)/ccache
  PERL_CACHE: $(Agent.HomeDirectory)/perl5


trigger:
- master

pr:
  - master

pool:
  vmImage: 'Ubuntu 16.04'

steps:
- checkout: self
  submodules: true
#- task: Cache@1
#  inputs:
#    key: 'perl | "$(Agent.OS)"'
#    path: $(PERL_CACHE)
#  displayName: perlcache
- bash: |
     set +x
#     sudo apt-get install -y cpanminus liblocal-lib-perl
     echo PERL_CACHE=$PERL_CACHE
     echo PERL5LIB=$PERL5LIB
  displayName: "test 01"
#- bash: |
#     echo PERL_CACHE=$PERL_CACHE
#     echo PERL5LIB=$PERL5LIB
#     cpanm --local-lib=$PERL_CACHE Path::Tiny
#     perl -I $PERL_CACHE -Mlocal::lib
#     perl -MPath::Tiny -e 'print "Path::Tiny compiled\n"'
#  displayName: "test 02"
#- bash: |
#     sudo apt install -y dos2unix libboost-all-dev texinfo texi2html gdb curl cpanminus ccache libmodern-perl-perl libtemplate-perl libtemplate-plugin-yaml-perl ragel libyaml-perl liblocal-lib-perl
#     cpanm --local-lib=$(PERL_CACHE) App::Prove Modern::Perl Capture::Tiny Capture::Tiny::Extended Path::Tiny File::Path Template Template::Plugin::YAML Test::Differences Text::Table CPU::Z80::Assembler Test::Cmd::Common Test::HexDifferences Data::HexDump Object::Tiny::RW Regexp::Common List::Uniq Clone
#  displayName: "Install prerequisites"
#- task: Cache@2
#  inputs:
#    key: 'ccache | "$(Agent.OS)"'
#    path: $(CCACHE_DIR)
#  displayName: ccache
#- script: |
#    ./build.sh -P $(PERL_CACHE) -l
#  displayName: 'Build binaries'
#- script: |
#    ./build.sh -P $(PERL_CACHE) -b 
#  displayName: 'Build libraries'
#- script: |
#    ./build.sh -P $(PERL_CACHE) -b -l -e
#  displayName: 'Build examples'
#- script: |
#    ./build.sh -P $(PERL_CACHE) -b -l -t
#  displayName: 'Build and run tests'
