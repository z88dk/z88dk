
TPUT_STATUS := $(shell which tput > /dev/null; echo $$?)

ifeq ($(TPUT_STATUS),0)
GREEN := $(shell tput setaf 2)
RED := $(shell tput setaf 1)
MAGENTA := $(shell tput setaf 5)
RESET    := $(shell tput sgr0)
else
GREEN :=
MAGENTA :=
RESET :=
endif


# Rules for building suites
FRAMEWORK_DIR ?= ../../framework
SOURCES = $(wildcard $(FRAMEWORK_DIR)/*.c)
CFLAGS = -I$(FRAMEWORK_DIR)  -Wn9

MACHINE = $(EXEC_PREFIX)ticks$(EXESUFFIX) -w 30

define compile
	zcc +test -vn $(1) $(CFLAGS) $^ -o $@ -lndos $(2)
endef

define runtest
	@echo "$(GREEN)" `date +%H:%M:%S` " Starting test $(MAGENTA)"
	@$(MACHINE) $@ || { echo "$(RED)" `date +%H:%M:%S` " Test failure $(RESET)" ; exit 1; }
	@echo "$(GREEN)" `date +%H:%M:%S` " Test completed $(RESET)"
endef

define compile_rcm
	zcc +test -vn -clib=rabbit $(1) $(CFLAGS) $^ -o $@ -lndos $(2) -m
endef

define runtest_rcm
	@echo "$(GREEN)" `date +%H:%M:%S` " Starting Rabbit test $(MAGENTA)"
	@$(MACHINE) -mr2k $@ || { echo "$(RED)" `date +%H:%M:%S` " Test failure $(RESET)" ; exit 1; }
	@echo "$(GREEN)" `date +%H:%M:%S` " Rabbit test completed $(RESET)"
endef

