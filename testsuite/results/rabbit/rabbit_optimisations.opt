


	MODULE	rabbit_rabbit_optimisations


	INCLUDE "z80_crt0.hdr"


	SECTION	code_compiler


._getviapointer
	ld	hl,(sp + 2)
	ld	hl,(hl+0)
	ret



._mult
	add	sp,-4
	ld	hl,(sp + 2)
	push	hl
	ld	hl,(sp + 2)
	pop	de
	call	l_mult
	add	sp,4
	ret



._negate
	ld	hl,(sp + 2)
	call	l_neg
	ret



._or
	ld	hl,(sp + 4)
	push	hl
	ld	hl,(sp + 4)
	pop	de
	or	hl,de
	push	hl
	ld	hl,(sp + 6)
	ld	a,l
	or	255
	ld	l,a
	ld	(sp + 0),hl
	ld	hl,(sp + 6)
	ld	de,511
	or	hl,de
	add	sp,2
	ret



._and
	ld	hl,(sp + 4)
	push	hl
	ld	hl,(sp + 4)
	pop	de
	and	hl,de
	push	hl
	ld	hl,(sp + 6)
	ld	h,0
	ld	(sp + 0),hl
	ld	hl,(sp + 6)
	ld	de,511
	and	hl,de
	add	sp,2
	ret



._rshift
	ld	hl,(sp + 2)
	and	a
	rr	hl
	ret



._lshift
	ld	hl,(sp + 2)
	add	hl,hl
	ret



._lshift_long
	ld	hl,(sp + 2 + 2)
	ex	de,hl
	ld	hl,(sp + 2)
	add	hl,hl
	rl	e
	rl	d
	push	de
	push	hl
	bool	hl
	rr	hl
	add	hl,sp
	push	hl
	ld	hl,(sp + 8 + 2)
	ex	de,hl
	ld	hl,(sp + 8)
	add	hl,hl
	rl	de
	add	hl,hl
	rl	de
	pop	bc
	call	l_plong
	bool	hl
	rr	hl
	add	hl,sp
	push	hl
	ld	hl,(sp + 8 + 2)
	ex	de,hl
	ld	hl,(sp + 8)
	ld	a,3
	call	l_long_aslo
	pop	bc
	call	l_plong
	bool	hl
	rr	hl
	add	sp,4
	ret



._addition
	ld	hl,(sp + 2)
	ld	bc,10
	add	hl,bc
	push	hl
	call	_mult
	ld	hl,(sp + 0)
	add	sp,2
	ret



._subtract
	ld	hl,(sp + 2)
	ld	bc,-10
	add	hl,bc
	push	hl
	call	_mult
	ld	hl,(sp + 0)
	add	sp,2
	ret



._longops
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	call	l_inclong
	pop	bc
	call	l_plong
	call	l_declong
	ret



._longadd
	ld	hl,(sp + 2 + 2)
	ex	de,hl
	ld	hl,(sp + 2)
	push	de
	push	hl
	ld	hl,10	;const
	ld	de,0
	call	l_long_add
	ret



._pushinstr
	ld	hl,1	;const
	push	hl
	ld	hl,2	;const
	push	hl
	ld	hl,3	;const
	push	hl
	call	_anotherfunc
	add	sp,6
	ret





	SECTION	bss_compiler

	SECTION	code_compiler




	PUBLIC	_getviapointer
	PUBLIC	_mult
	PUBLIC	_negate
	PUBLIC	_or
	PUBLIC	_and
	PUBLIC	_rshift
	PUBLIC	_lshift
	PUBLIC	_lshift_long
	PUBLIC	_addition
	PUBLIC	_subtract
	PUBLIC	_longops
	PUBLIC	_longadd
	EXTERN	_anotherfunc
	PUBLIC	_pushinstr




