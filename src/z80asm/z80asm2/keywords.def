//-----------------------------------------------------------------------------
// Z80 assembler
// Copyright (C) Paulo Custodio, 2011-2025
// License: The Artistic License 2.0, http://www.perlfoundation.org/artistic_license_2_0
//-----------------------------------------------------------------------------

X(A, "A", IS_REGISTER)
X(AF, "AF", 0)
X(AF_, "AF'", 0)
X(AIX, "AIX", IS_REGISTER)
X(AIY, "AIY", IS_REGISTER)
X(ASMPC, "ASMPC", 0)
X(A_, "A'", IS_REGISTER)
X(B, "B", IS_REGISTER)
X(BC, "BC", IS_REGISTER)
X(BC_, "BC'", IS_REGISTER)
X(BINARY, "BINARY", IS_DIRECTIVE)
X(B_, "B'", IS_REGISTER)
X(C, "C", IS_REGISTER | IS_FLAG)
X(C_, "C'", IS_REGISTER)
X(C_LINE, "C_LINE", IS_DIRECTIVE)
X(D, "D", IS_REGISTER)
X(DE, "DE", IS_REGISTER)
X(DEFINE, "DEFINE", IS_DIRECTIVE | IS_NAME_DIRECTIVE)
X(DEFL, "DEFL", IS_DIRECTIVE | IS_NAME_DIRECTIVE)
X(DE_, "BC'", IS_REGISTER)
X(D_, "D'", IS_REGISTER)
X(E, "E", IS_REGISTER)
X(ELIF, "ELIF", IS_DIRECTIVE | IS_CONDITIONAL_DIRECTIVE)
X(ELIFDEF, "ELIFDEF", IS_DIRECTIVE | IS_CONDITIONAL_DIRECTIVE)
X(ELIFNDEF, "ELIFNDEF", IS_DIRECTIVE | IS_CONDITIONAL_DIRECTIVE)
X(ELSE, "ELSE", IS_DIRECTIVE | IS_CONDITIONAL_DIRECTIVE)
X(ENDIF, "ENDIF", IS_DIRECTIVE | IS_CONDITIONAL_DIRECTIVE)
X(ENDM, "ENDM", IS_DIRECTIVE)
X(ENDR, "ENDR", IS_DIRECTIVE)
X(EQU, "EQU", IS_NAME_DIRECTIVE)
X(EXITM, "EXITM", IS_DIRECTIVE)
X(E_, "E'", IS_REGISTER)
X(F, "F", IS_REGISTER)
X(F_, "F'", IS_REGISTER)
X(H, "H", IS_REGISTER)
X(HL, "HL", IS_REGISTER)
X(HL_, "BC'", IS_REGISTER)
X(H_, "H'", IS_REGISTER)
X(IF, "IF", IS_DIRECTIVE | IS_CONDITIONAL_DIRECTIVE)
X(IFDEF, "IFDEF", IS_DIRECTIVE | IS_CONDITIONAL_DIRECTIVE)
X(IFNDEF, "IFNDEF", IS_DIRECTIVE | IS_CONDITIONAL_DIRECTIVE)
X(INCBIN, "INCBIN", IS_DIRECTIVE)
X(INCLUDE, "INCLUDE", IS_DIRECTIVE)
X(IX, "IX", IS_REGISTER)
X(IXH, "IXH", IS_REGISTER)
X(IXL, "IXL", IS_REGISTER)
X(IY, "IY", IS_REGISTER)
X(IYH, "IYH", IS_REGISTER)
X(IYL, "IYL", IS_REGISTER)
X(L, "L", IS_REGISTER)
X(LD, "LD", 0)
X(LINE, "LINE", IS_DIRECTIVE)
X(LOCAL, "LOCAL", IS_DIRECTIVE)
X(L_, "L'", IS_REGISTER)
X(M, "M", IS_FLAG)
X(MACRO, "MACRO", IS_DIRECTIVE | IS_NAME_DIRECTIVE)
X(NC, "NC", IS_FLAG)
X(NZ, "NZ", IS_FLAG)
X(P, "P", IS_FLAG)
X(PE, "PE", IS_FLAG)
X(PIX, "PIX", IS_REGISTER)
X(PIY, "PIY", IS_REGISTER)
X(PO, "PO", IS_FLAG)
X(REPT, "REPT", IS_DIRECTIVE)
X(REPTC, "REPTC", IS_DIRECTIVE | IS_NAME_DIRECTIVE)
X(REPTI, "REPTI", IS_DIRECTIVE | IS_NAME_DIRECTIVE)
X(SP, "SP", IS_REGISTER)
X(UNDEF, "UNDEF", IS_DIRECTIVE | IS_NAME_DIRECTIVE)
X(UNDEFINE, "UNDEFINE", IS_DIRECTIVE | IS_NAME_DIRECTIVE)
X(XIX, "XIX", IS_REGISTER)
X(XIY, "XIY", IS_REGISTER)
X(YIX, "YIX", IS_REGISTER)
X(YIY, "YIY", IS_REGISTER)
X(Z, "Z", IS_FLAG)
X(ZIX, "ZIX", IS_REGISTER)
X(ZIY, "ZIY", IS_REGISTER)
X(ASSUME, "ASSUME", IS_OPCODE)
