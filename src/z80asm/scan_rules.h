static const short _lexer_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	215, 1, 216, 1, 217, 1, 218, 1, 
	219, 1, 220, 1, 221, 1, 222, 1, 
	223, 1, 224, 1, 225, 1, 226, 1, 
	227, 1, 228, 1, 229, 1, 230, 1, 
	231, 1, 232, 1, 233, 1, 234, 1, 
	235, 1, 236, 1, 237, 1, 238, 1, 
	239, 1, 240, 1, 241, 1, 242, 1, 
	243, 1, 244, 1, 245, 1, 246, 1, 
	247, 1, 248, 1, 249, 1, 250, 1, 
	251, 1, 252, 1, 253, 1, 254, 1, 
	255, 1, 256, 1, 257, 1, 258, 1, 
	259, 1, 260, 1, 261, 1, 262, 1, 
	263, 1, 264, 1, 265, 1, 266, 1, 
	267, 1, 268, 1, 269, 1, 270, 1, 
	271, 1, 272, 1, 273, 1, 274, 1, 
	275, 1, 276, 1, 277, 1, 278, 1, 
	279, 1, 280, 1, 281, 1, 282, 1, 
	283, 1, 284, 1, 285, 1, 286, 1, 
	287, 1, 288, 1, 289, 1, 290, 1, 
	291, 1, 292, 1, 293, 1, 294, 1, 
	295, 1, 296, 1, 297, 1, 298, 1, 
	299, 1, 300, 1, 301, 1, 302, 1, 
	303, 1, 304, 1, 305, 1, 306, 1, 
	307, 1, 308, 1, 309, 1, 310, 1, 
	311, 1, 312, 1, 313, 1, 314, 1, 
	315, 1, 316, 1, 317, 1, 318, 1, 
	319, 1, 320, 1, 321, 1, 322, 1, 
	323, 1, 324, 1, 325, 1, 326, 1, 
	327, 1, 328, 1, 329, 1, 330, 1, 
	331, 1, 332, 1, 333, 1, 334, 1, 
	335, 1, 336, 1, 337, 1, 338, 1, 
	339, 1, 340, 1, 341, 1, 342, 1, 
	343, 1, 344, 1, 345, 1, 346, 1, 
	347, 1, 348, 1, 349, 1, 350, 1, 
	351, 1, 352, 1, 353, 1, 354, 1, 
	355, 1, 356, 1, 357, 1, 358, 1, 
	359, 1, 360, 1, 361, 2, 2, 3, 
	2, 2, 4, 2, 2, 5, 2, 2, 
	6, 2, 2, 7, 2, 2, 8, 2, 
	2, 9, 2, 2, 10, 2, 2, 11, 
	2, 2, 12, 2, 2, 13, 2, 2, 
	14, 2, 2, 15, 2, 2, 16, 2, 
	2, 17, 2, 2, 18, 2, 2, 19, 
	2, 2, 20, 2, 2, 21, 2, 2, 
	22, 2, 2, 23, 2, 2, 24, 2, 
	2, 25, 2, 2, 26, 2, 2, 27, 
	2, 2, 28, 2, 2, 29, 2, 2, 
	30, 2, 2, 31, 2, 2, 32, 2, 
	2, 33, 2, 2, 34, 2, 2, 35, 
	2, 2, 36, 2, 2, 37, 2, 2, 
	38, 2, 2, 39, 2, 2, 40, 2, 
	2, 41, 2, 2, 42, 2, 2, 43, 
	2, 2, 44, 2, 2, 45, 2, 2, 
	46, 2, 2, 47, 2, 2, 48, 2, 
	2, 49, 2, 2, 50, 2, 2, 51, 
	2, 2, 52, 2, 2, 53, 2, 2, 
	54, 2, 2, 55, 2, 2, 56, 2, 
	2, 57, 2, 2, 58, 2, 2, 59, 
	2, 2, 60, 2, 2, 61, 2, 2, 
	62, 2, 2, 63, 2, 2, 64, 2, 
	2, 65, 2, 2, 66, 2, 2, 67, 
	2, 2, 68, 2, 2, 69, 2, 2, 
	70, 2, 2, 71, 2, 2, 72, 2, 
	2, 73, 2, 2, 74, 2, 2, 75, 
	2, 2, 76, 2, 2, 77, 2, 2, 
	78, 2, 2, 79, 2, 2, 80, 2, 
	2, 81, 2, 2, 82, 2, 2, 83, 
	2, 2, 84, 2, 2, 85, 2, 2, 
	86, 2, 2, 87, 2, 2, 88, 2, 
	2, 89, 2, 2, 90, 2, 2, 91, 
	2, 2, 92, 2, 2, 93, 2, 2, 
	94, 2, 2, 95, 2, 2, 96, 2, 
	2, 97, 2, 2, 98, 2, 2, 99, 
	2, 2, 100, 2, 2, 101, 2, 2, 
	102, 2, 2, 103, 2, 2, 104, 2, 
	2, 105, 2, 2, 106, 2, 2, 107, 
	2, 2, 108, 2, 2, 109, 2, 2, 
	110, 2, 2, 111, 2, 2, 112, 2, 
	2, 113, 2, 2, 114, 2, 2, 115, 
	2, 2, 116, 2, 2, 117, 2, 2, 
	118, 2, 2, 119, 2, 2, 120, 2, 
	2, 121, 2, 2, 122, 2, 2, 123, 
	2, 2, 124, 2, 2, 125, 2, 2, 
	126, 2, 2, 127, 2, 2, 128, 2, 
	2, 129, 2, 2, 130, 2, 2, 131, 
	2, 2, 132, 2, 2, 133, 2, 2, 
	134, 2, 2, 135, 2, 2, 136, 2, 
	2, 137, 2, 2, 138, 2, 2, 139, 
	2, 2, 140, 2, 2, 141, 2, 2, 
	142, 2, 2, 143, 2, 2, 144, 2, 
	2, 145, 2, 2, 146, 2, 2, 147, 
	2, 2, 148, 2, 2, 149, 2, 2, 
	150, 2, 2, 151, 2, 2, 152, 2, 
	2, 153, 2, 2, 154, 2, 2, 155, 
	2, 2, 156, 2, 2, 157, 2, 2, 
	158, 2, 2, 159, 2, 2, 160, 2, 
	2, 161, 2, 2, 162, 2, 2, 163, 
	2, 2, 164, 2, 2, 165, 2, 2, 
	166, 2, 2, 167, 2, 2, 168, 2, 
	2, 169, 2, 2, 170, 2, 2, 171, 
	2, 2, 172, 2, 2, 173, 2, 2, 
	174, 2, 2, 175, 2, 2, 176, 2, 
	2, 177, 2, 2, 178, 2, 2, 179, 
	2, 2, 180, 2, 2, 181, 2, 2, 
	182, 2, 2, 183, 2, 2, 184, 2, 
	2, 185, 2, 2, 186, 2, 2, 187, 
	2, 2, 188, 2, 2, 189, 2, 2, 
	190, 2, 2, 191, 2, 2, 192, 2, 
	2, 193, 2, 2, 194, 2, 2, 195, 
	2, 2, 196, 2, 2, 197, 2, 2, 
	198, 2, 2, 199, 2, 2, 200, 2, 
	2, 201, 2, 2, 202, 2, 2, 203, 
	2, 2, 204, 2, 2, 205, 2, 2, 
	206, 2, 2, 207, 2, 2, 208, 2, 
	2, 209, 2, 2, 210, 2, 2, 211, 
	2, 2, 212, 2, 2, 213, 2, 2, 
	214
};
static const short _lexer_cond_offsets[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	5, 8, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 17, 21, 28, 35, 
	42, 49, 56, 63, 70, 77, 84, 91, 
	98, 105, 112, 119, 126, 133, 140, 147, 
	154, 161, 168, 175, 182, 189, 196, 203, 
	210, 217, 224, 231, 238, 245, 252, 259, 
	266, 273, 280, 287, 294, 301, 308, 315, 
	322, 329, 336, 343, 350, 357, 364, 371, 
	378, 385, 392, 399, 406, 413, 420, 427, 
	434, 441, 448, 455, 462, 469, 476, 483, 
	490, 497, 504, 511, 518, 525, 532, 539, 
	546, 553, 560, 567, 574, 581, 588, 595, 
	602, 609, 616, 623, 630, 637, 644, 651, 
	658, 665, 672, 679, 686, 693, 700, 707, 
	714, 721, 728, 735, 742, 749, 756, 763, 
	770, 777, 784, 791, 798, 805, 812, 819, 
	826, 833, 840, 847, 854, 861, 868, 875, 
	882, 889, 896, 903, 910, 917, 924, 931, 
	938, 945, 952, 959, 966, 973, 980, 987, 
	994, 1001, 1008, 1015, 1022, 1029, 1036, 1043, 
	1050, 1057, 1064, 1071, 1078, 1085, 1092, 1099, 
	1106, 1113, 1120, 1127, 1134, 1141, 1148, 1155, 
	1162, 1169, 1176, 1183, 1190, 1197, 1204, 1211, 
	1218, 1225, 1232, 1239, 1246, 1253, 1260, 1267, 
	1274, 1281, 1288, 1295, 1302, 1309, 1316, 1323, 
	1330, 1337, 1344, 1351, 1358, 1365, 1372, 1379, 
	1386, 1393, 1400, 1407, 1414, 1421, 1428, 1435, 
	1442, 1449, 1456, 1463, 1470, 1477, 1484, 1491, 
	1498, 1505, 1512, 1519, 1526, 1533, 1540, 1547, 
	1554, 1561, 1568, 1575, 1582, 1589, 1596, 1603, 
	1610, 1617, 1624, 1631, 1638, 1645, 1652, 1659, 
	1666, 1673, 1680, 1687, 1694, 1701, 1708, 1715, 
	1722, 1729, 1736, 1743, 1750, 1757, 1764, 1771, 
	1778, 1785, 1792, 1799
};
static const char _lexer_cond_lengths[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 5, 
	3, 4, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 5, 4, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7
};
static const short _lexer_cond_keys[] = {
	9, 9, 32, 32, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 58, 58, 
	46, 46, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 65, 90, 95, 95, 
	97, 122, 48, 57, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 0
};
static const char _lexer_cond_spaces[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0
};
static const short _lexer_key_offsets[] = {
	0, 0, 2, 5, 19, 21, 26, 31, 
	33, 38, 40, 45, 49, 54, 59, 61, 
	66, 74, 80, 88, 90, 92, 94, 96, 
	98, 100, 102, 104, 106, 108, 110, 118, 
	125, 128, 266, 267, 273, 276, 278, 279, 
	293, 294, 308, 320, 328, 336, 346, 352, 
	353, 356, 357, 359, 360, 379, 386, 394, 
	405, 413, 424, 433, 442, 451, 460, 469, 
	478, 487, 501, 509, 520, 529, 538, 547, 
	556, 565, 581, 590, 599, 606, 617, 626, 
	635, 644, 653, 661, 674, 683, 692, 700, 
	709, 718, 727, 736, 754, 763, 779, 804, 
	813, 822, 831, 840, 849, 858, 867, 876, 
	885, 894, 903, 912, 921, 930, 939, 948, 
	956, 972, 981, 990, 999, 1008, 1017, 1026, 
	1037, 1046, 1055, 1064, 1076, 1085, 1094, 1103, 
	1112, 1121, 1130, 1139, 1148, 1157, 1166, 1178, 
	1187, 1196, 1204, 1229, 1238, 1247, 1258, 1267, 
	1276, 1285, 1294, 1303, 1312, 1328, 1337, 1346, 
	1355, 1364, 1373, 1382, 1391, 1400, 1409, 1420, 
	1431, 1440, 1449, 1458, 1467, 1478, 1489, 1500, 
	1518, 1531, 1544, 1553, 1562, 1575, 1586, 1595, 
	1604, 1613, 1622, 1631, 1640, 1649, 1658, 1669, 
	1678, 1691, 1702, 1711, 1722, 1731, 1740, 1751, 
	1760, 1777, 1786, 1795, 1804, 1813, 1822, 1831, 
	1846, 1855, 1864, 1873, 1882, 1891, 1908, 1919, 
	1928, 1937, 1946, 1955, 1964, 1977, 1986, 1997, 
	2008, 2017, 2028, 2037, 2046, 2058, 2067, 2076, 
	2093, 2102, 2111, 2120, 2129, 2138, 2147, 2158, 
	2167, 2176, 2185, 2194, 2205, 2214, 2223, 2232, 
	2241, 2258, 2267, 2276, 2285, 2294, 2305, 2316, 
	2329, 2337, 2346, 2354, 2367, 2375, 2384, 2392, 
	2401, 2426, 2435, 2444, 2452, 2463, 2472, 2481, 
	2490, 2499, 2510, 2519, 2528, 2537, 2552, 2563, 
	2574, 2583, 2592, 2601, 2610, 2619, 2628, 2637, 
	2646, 2655, 2664, 2673, 2682, 2693, 2702, 2711, 
	2720, 2729, 2738, 2749, 2760, 2769, 2778, 2787, 
	2796, 2805, 2814, 2831, 2840, 2849, 2858, 2867, 
	2876, 2885, 2894, 2903, 2910, 2917, 2957, 2974, 
	2993, 3018, 3036, 3061, 3082, 3103, 3124, 3145, 
	3166, 3187, 3208, 3238, 3256, 3281, 3302, 3323, 
	3344, 3365, 3386, 3420, 3441, 3462, 3479, 3504, 
	3525, 3546, 3567, 3588, 3606, 3635, 3656, 3677, 
	3695, 3716, 3737, 3758, 3779, 3817, 3838, 3872, 
	3925, 3946, 3967, 3988, 4009, 4030, 4051, 4072, 
	4093, 4114, 4135, 4156, 4177, 4198, 4219, 4240, 
	4261, 4279, 4313, 4334, 4355, 4376, 4397, 4418, 
	4439, 4464, 4485, 4506, 4527, 4553, 4574, 4595, 
	4616, 4637, 4658, 4679, 4700, 4721, 4742, 4763, 
	4789, 4810, 4831, 4849, 4902, 4923, 4944, 4969, 
	4990, 5011, 5032, 5053, 5074, 5095, 5130, 5151, 
	5172, 5193, 5214, 5235, 5256, 5277, 5298, 5319, 
	5344, 5369, 5390, 5411, 5432, 5453, 5478, 5503, 
	5528, 5566, 5595, 5624, 5645, 5666, 5695, 5720, 
	5741, 5762, 5783, 5804, 5825, 5846, 5867, 5888, 
	5913, 5934, 5963, 5988, 6009, 6034, 6055, 6076, 
	6101, 6122, 6159, 6180, 6201, 6222, 6243, 6264, 
	6285, 6318, 6339, 6360, 6381, 6402, 6423, 6460, 
	6485, 6506, 6527, 6548, 6569, 6590, 6619, 6640, 
	6665, 6690, 6711, 6736, 6757, 6778, 6805, 6826, 
	6847, 6884, 6905, 6926, 6947, 6968, 6989, 7010, 
	7035, 7056, 7077, 7098, 7119, 7144, 7165, 7186, 
	7207, 7228, 7265, 7286, 7307, 7328, 7349, 7374, 
	7399, 7428, 7446, 7467, 7485, 7514, 7532, 7553, 
	7571, 7592, 7645, 7666, 7687, 7705, 7730, 7751, 
	7772, 7793, 7814, 7839, 7860, 7881, 7902, 7935, 
	7960, 7985, 8006, 8027, 8048, 8069, 8090, 8111, 
	8132, 8153, 8174, 8195, 8216, 8237, 8262, 8283, 
	8304, 8325, 8346, 8367, 8392, 8417, 8438, 8459, 
	8480, 8501, 8522, 8543, 8580, 8601, 8622, 8643, 
	8664, 8685, 8706, 8727
};
static const short _lexer_trans_keys[] = {
	35, 45, 34, 35, 45, 9, 32, 66, 
	67, 68, 72, 73, 83, 98, 99, 100, 
	104, 105, 115, 67, 99, 9, 32, 41, 
	43, 45, 9, 32, 41, 43, 45, 69, 
	101, 9, 32, 41, 43, 45, 76, 108, 
	9, 32, 41, 43, 45, 88, 89, 120, 
	121, 9, 32, 41, 43, 45, 9, 32, 
	41, 43, 45, 80, 112, 9, 32, 41, 
	43, 45, 72, 104, 48, 57, 65, 70, 
	97, 102, 48, 57, 65, 70, 97, 102, 
	77, 78, 83, 87, 109, 110, 115, 119, 
	79, 111, 86, 118, 69, 101, 79, 111, 
	80, 112, 84, 116, 79, 111, 80, 112, 
	65, 97, 73, 105, 84, 116, 66, 80, 
	81, 87, 98, 112, 113, 119, 521, 544, 
	607, 577, 602, 609, 634, 521, 544, 570, 
	10, 33, 34, 35, 36, 37, 38, 39, 
	40, 41, 42, 43, 44, 45, 47, 48, 
	49, 58, 59, 60, 61, 62, 63, 64, 
	91, 92, 93, 94, 96, 123, 124, 125, 
	126, 127, 302, 321, 322, 323, 324, 325, 
	326, 327, 328, 329, 330, 332, 333, 334, 
	335, 336, 338, 339, 340, 341, 342, 344, 
	346, 351, 353, 354, 355, 356, 357, 358, 
	359, 360, 361, 362, 364, 365, 366, 367, 
	368, 370, 371, 372, 373, 374, 376, 378, 
	558, 577, 578, 579, 580, 581, 582, 583, 
	584, 585, 586, 588, 589, 590, 591, 592, 
	594, 595, 596, 597, 598, 600, 602, 607, 
	609, 610, 611, 612, 613, 614, 615, 616, 
	617, 618, 620, 621, 622, 623, 624, 626, 
	627, 628, 629, 630, 632, 634, -128, 32, 
	50, 57, 331, 345, 363, 377, 587, 601, 
	619, 633, 61, 48, 57, 65, 70, 97, 
	102, 34, 48, 49, 48, 49, 38, 9, 
	32, 66, 67, 68, 72, 73, 83, 98, 
	99, 100, 104, 105, 115, 42, 66, 72, 
	88, 98, 104, 120, 48, 49, 50, 57, 
	65, 70, 97, 102, 66, 72, 98, 104, 
	48, 49, 50, 57, 65, 70, 97, 102, 
	72, 104, 48, 57, 65, 70, 97, 102, 
	72, 104, 48, 57, 65, 70, 97, 102, 
	72, 104, 48, 49, 50, 57, 65, 70, 
	97, 102, 48, 57, 65, 70, 97, 102, 
	10, 60, 61, 62, 61, 61, 62, 124, 
	39, 51, 68, 70, 76, 78, 83, 95, 
	100, 102, 108, 110, 115, 48, 57, 65, 
	90, 97, 122, 95, 48, 57, 65, 90, 
	97, 122, 50, 95, 48, 57, 65, 90, 
	97, 122, 67, 68, 95, 99, 100, 48, 
	57, 65, 90, 97, 122, 39, 95, 48, 
	57, 65, 90, 97, 122, 73, 84, 95, 
	105, 116, 48, 57, 65, 90, 97, 122, 
	71, 95, 103, 48, 57, 65, 90, 97, 
	122, 78, 95, 110, 48, 57, 65, 90, 
	97, 122, 68, 95, 100, 48, 57, 65, 
	90, 97, 122, 68, 95, 100, 48, 57, 
	65, 90, 97, 122, 77, 95, 109, 48, 
	57, 65, 90, 97, 122, 80, 95, 112, 
	48, 57, 65, 90, 97, 122, 67, 95, 
	99, 48, 57, 65, 90, 97, 122, 39, 
	67, 73, 79, 95, 99, 105, 111, 48, 
	57, 65, 90, 97, 122, 39, 95, 48, 
	57, 65, 90, 97, 122, 78, 84, 95, 
	110, 116, 48, 57, 65, 90, 97, 122, 
	65, 95, 97, 48, 57, 66, 90, 98, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 89, 95, 121, 48, 57, 65, 
	90, 97, 122, 79, 95, 111, 48, 57, 
	65, 90, 97, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 39, 65, 67, 
	80, 85, 95, 97, 99, 112, 117, 48, 
	57, 66, 90, 98, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 95, 
	48, 57, 65, 90, 97, 122, 79, 80, 
	95, 111, 112, 48, 57, 65, 90, 97, 
	122, 90, 95, 122, 48, 57, 65, 89, 
	97, 121, 75, 95, 107, 48, 57, 65, 
	90, 97, 122, 71, 95, 103, 48, 57, 
	65, 90, 97, 122, 70, 95, 102, 48, 
	57, 65, 90, 97, 122, 39, 95, 48, 
	57, 65, 90, 97, 122, 68, 73, 76, 
	95, 100, 105, 108, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 46, 95, 48, 57, 
	65, 90, 97, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 73, 95, 105, 
	48, 57, 65, 90, 97, 122, 78, 95, 
	110, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	39, 65, 69, 73, 74, 83, 95, 97, 
	101, 105, 106, 115, 48, 57, 66, 90, 
	98, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 39, 67, 70, 72, 80, 
	95, 99, 102, 104, 112, 48, 57, 65, 
	90, 97, 122, 66, 67, 71, 73, 77, 
	81, 83, 86, 87, 95, 98, 99, 103, 
	105, 109, 113, 115, 118, 119, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 79, 95, 111, 
	48, 57, 65, 90, 97, 122, 85, 95, 
	117, 48, 57, 65, 90, 97, 122, 80, 
	95, 112, 48, 57, 65, 90, 97, 122, 
	78, 95, 110, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 83, 95, 115, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 72, 95, 
	104, 48, 57, 65, 90, 97, 122, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	83, 95, 115, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 78, 95, 110, 48, 57, 65, 
	90, 97, 122, 90, 95, 122, 48, 57, 
	65, 89, 97, 121, 46, 95, 48, 57, 
	65, 90, 97, 122, 39, 73, 76, 78, 
	88, 95, 105, 108, 110, 120, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 83, 95, 115, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 68, 
	95, 100, 48, 57, 65, 90, 97, 122, 
	73, 95, 105, 48, 57, 65, 90, 97, 
	122, 70, 95, 102, 48, 57, 65, 90, 
	97, 122, 84, 88, 95, 116, 120, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 78, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	39, 73, 80, 95, 105, 112, 48, 57, 
	65, 90, 97, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 68, 95, 
	100, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	80, 95, 112, 48, 57, 65, 90, 97, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 66, 95, 98, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 39, 65, 
	76, 95, 97, 108, 48, 57, 66, 90, 
	98, 122, 76, 95, 108, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 39, 95, 48, 57, 
	65, 90, 97, 122, 68, 70, 73, 77, 
	78, 79, 80, 88, 89, 95, 100, 102, 
	105, 109, 110, 111, 112, 120, 121, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 84, 95, 
	116, 48, 57, 65, 90, 97, 122, 68, 
	78, 95, 100, 110, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 70, 95, 102, 48, 57, 
	65, 90, 97, 122, 68, 95, 100, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 70, 95, 
	102, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	48, 67, 68, 73, 86, 95, 99, 100, 
	105, 118, 49, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 85, 95, 117, 48, 57, 65, 90, 
	97, 122, 68, 95, 100, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 82, 95, 114, 
	48, 57, 65, 90, 97, 122, 79, 95, 
	111, 48, 57, 65, 90, 97, 122, 75, 
	95, 107, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 69, 73, 95, 101, 105, 48, 57, 
	65, 90, 97, 122, 82, 83, 95, 114, 
	115, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	83, 95, 115, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 72, 76, 95, 104, 108, 
	48, 57, 65, 90, 97, 122, 72, 76, 
	95, 104, 108, 48, 57, 65, 90, 97, 
	122, 80, 82, 95, 112, 114, 48, 57, 
	65, 90, 97, 122, 39, 68, 73, 79, 
	83, 90, 95, 100, 105, 111, 115, 122, 
	48, 57, 65, 89, 97, 121, 68, 73, 
	80, 95, 100, 105, 112, 48, 57, 65, 
	90, 97, 122, 82, 83, 88, 95, 114, 
	115, 120, 48, 57, 65, 90, 97, 122, 
	88, 95, 120, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 82, 83, 88, 95, 114, 115, 
	120, 48, 57, 65, 90, 97, 122, 83, 
	88, 95, 115, 120, 48, 57, 65, 90, 
	97, 122, 67, 95, 99, 48, 57, 65, 
	90, 97, 122, 65, 95, 97, 48, 57, 
	66, 90, 98, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 73, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 88, 95, 120, 48, 57, 65, 90, 
	97, 122, 66, 78, 95, 98, 110, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 68, 73, 
	84, 95, 100, 105, 116, 48, 57, 65, 
	90, 97, 122, 68, 82, 95, 100, 114, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 68, 
	82, 95, 100, 114, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 79, 95, 111, 48, 57, 
	65, 90, 97, 122, 70, 78, 95, 102, 
	110, 48, 57, 65, 90, 97, 122, 70, 
	95, 102, 48, 57, 65, 90, 97, 122, 
	73, 76, 77, 79, 85, 95, 105, 108, 
	109, 111, 117, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 79, 95, 111, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 84, 95, 116, 
	48, 57, 65, 90, 97, 122, 85, 95, 
	117, 48, 57, 65, 90, 97, 122, 48, 
	49, 50, 51, 52, 53, 54, 55, 95, 
	56, 57, 65, 90, 97, 122, 68, 95, 
	100, 48, 57, 65, 90, 97, 122, 85, 
	95, 117, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 76, 95, 108, 48, 57, 65, 
	90, 97, 122, 67, 69, 79, 86, 90, 
	95, 99, 101, 111, 118, 122, 48, 57, 
	65, 89, 97, 121, 71, 88, 95, 103, 
	120, 48, 57, 65, 90, 97, 122, 84, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 71, 95, 103, 48, 57, 65, 
	90, 97, 122, 80, 95, 112, 48, 57, 
	65, 90, 97, 122, 82, 84, 85, 95, 
	114, 116, 117, 48, 57, 65, 90, 97, 
	122, 71, 95, 103, 48, 57, 65, 90, 
	97, 122, 68, 73, 95, 100, 105, 48, 
	57, 65, 90, 97, 122, 77, 82, 95, 
	109, 114, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 77, 82, 95, 109, 114, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 84, 95, 116, 
	48, 57, 65, 90, 97, 122, 48, 68, 
	73, 95, 100, 105, 49, 57, 65, 90, 
	97, 122, 78, 95, 110, 48, 57, 65, 
	90, 97, 122, 66, 95, 98, 48, 57, 
	65, 90, 97, 122, 69, 72, 73, 79, 
	85, 95, 101, 104, 105, 111, 117, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 83, 95, 
	115, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	88, 95, 120, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 76, 95, 108, 48, 57, 65, 
	90, 97, 122, 65, 68, 95, 97, 100, 
	48, 57, 66, 90, 98, 122, 68, 95, 
	100, 48, 57, 65, 90, 97, 122, 78, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	80, 95, 112, 48, 57, 65, 90, 97, 
	122, 88, 95, 120, 48, 57, 65, 90, 
	97, 122, 66, 83, 95, 98, 115, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 73, 95, 
	105, 48, 57, 65, 90, 97, 122, 67, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	72, 95, 104, 48, 57, 65, 90, 97, 
	122, 68, 69, 76, 82, 83, 95, 100, 
	101, 108, 114, 115, 48, 57, 65, 90, 
	97, 122, 77, 95, 109, 48, 57, 65, 
	90, 97, 122, 79, 95, 111, 48, 57, 
	65, 90, 97, 122, 68, 95, 100, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 83, 84, 
	95, 115, 116, 48, 57, 65, 90, 97, 
	122, 73, 78, 95, 105, 110, 48, 57, 
	65, 90, 97, 122, 65, 67, 68, 95, 
	97, 99, 100, 48, 57, 66, 90, 98, 
	122, 39, 95, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 39, 95, 48, 57, 65, 90, 
	97, 122, 65, 67, 68, 95, 97, 99, 
	100, 48, 57, 66, 90, 98, 122, 39, 
	95, 48, 57, 65, 90, 97, 122, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	39, 95, 48, 57, 65, 90, 97, 122, 
	84, 95, 116, 48, 57, 65, 90, 97, 
	122, 66, 67, 69, 76, 80, 82, 85, 
	87, 89, 95, 98, 99, 101, 108, 112, 
	114, 117, 119, 121, 48, 57, 65, 90, 
	97, 122, 67, 95, 99, 48, 57, 65, 
	90, 97, 122, 70, 95, 102, 48, 57, 
	65, 90, 97, 122, 39, 95, 48, 57, 
	65, 90, 97, 122, 67, 84, 95, 99, 
	116, 48, 57, 65, 90, 97, 122, 84, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	73, 95, 105, 48, 57, 65, 90, 97, 
	122, 79, 95, 111, 48, 57, 65, 90, 
	97, 122, 78, 95, 110, 48, 57, 65, 
	90, 97, 122, 65, 85, 95, 97, 117, 
	48, 57, 66, 90, 98, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 83, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 65, 73, 76, 80, 95, 97, 105, 
	108, 112, 48, 57, 66, 90, 98, 122, 
	65, 76, 95, 97, 108, 48, 57, 66, 
	90, 98, 122, 66, 82, 95, 98, 114, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 83, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	65, 95, 97, 48, 57, 66, 90, 98, 
	122, 80, 95, 112, 48, 57, 65, 90, 
	97, 122, 78, 95, 110, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 66, 95, 98, 48, 
	57, 65, 90, 97, 122, 83, 95, 115, 
	48, 57, 65, 90, 97, 122, 67, 95, 
	99, 48, 57, 65, 90, 97, 122, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 69, 83, 95, 101, 115, 48, 
	57, 65, 90, 97, 122, 83, 95, 115, 
	48, 57, 65, 90, 97, 122, 84, 95, 
	116, 48, 57, 65, 90, 97, 122, 84, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	73, 95, 105, 48, 57, 65, 90, 97, 
	122, 79, 95, 111, 48, 57, 65, 90, 
	97, 122, 77, 78, 95, 109, 110, 48, 
	57, 65, 90, 97, 122, 65, 83, 95, 
	97, 115, 48, 57, 66, 90, 98, 122, 
	68, 95, 100, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 70, 95, 102, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 78, 95, 110, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 68, 76, 
	79, 80, 82, 95, 100, 108, 111, 112, 
	114, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	70, 95, 102, 48, 57, 65, 90, 97, 
	122, 73, 95, 105, 48, 57, 65, 90, 
	97, 122, 66, 95, 98, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 67, 95, 99, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 70, 95, 
	102, 48, 57, 65, 90, 97, 122, 521, 
	544, 607, 577, 602, 609, 634, 607, 560, 
	569, 577, 602, 609, 634, 39, 307, 324, 
	326, 332, 334, 339, 351, 356, 358, 364, 
	366, 371, 521, 544, 563, 570, 580, 582, 
	588, 590, 595, 607, 612, 614, 620, 622, 
	627, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 351, 521, 544, 
	570, 607, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 306, 351, 
	521, 544, 562, 570, 607, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 323, 324, 351, 355, 356, 521, 544, 
	570, 579, 580, 607, 611, 612, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 39, 351, 521, 544, 570, 607, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 329, 340, 351, 361, 
	372, 521, 544, 570, 585, 596, 607, 617, 
	628, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 327, 351, 359, 
	521, 544, 570, 583, 607, 615, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 334, 351, 366, 521, 544, 570, 
	590, 607, 622, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 324, 
	351, 356, 521, 544, 570, 580, 607, 612, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 324, 351, 356, 521, 
	544, 570, 580, 607, 612, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 333, 351, 365, 521, 544, 570, 589, 
	607, 621, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 336, 351, 
	368, 521, 544, 570, 592, 607, 624, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 323, 351, 355, 521, 544, 
	570, 579, 607, 611, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	39, 323, 329, 335, 351, 355, 361, 367, 
	521, 544, 570, 579, 585, 591, 607, 611, 
	617, 623, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 39, 351, 
	521, 544, 570, 607, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	334, 340, 351, 366, 372, 521, 544, 570, 
	590, 596, 607, 622, 628, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 321, 351, 353, 521, 544, 570, 577, 
	607, 609, 304, 313, 322, 346, 354, 378, 
	560, 569, 578, 602, 610, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 345, 351, 377, 521, 544, 
	570, 601, 607, 633, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	335, 351, 367, 521, 544, 570, 591, 607, 
	623, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 39, 321, 323, 336, 341, 351, 
	353, 355, 368, 373, 521, 544, 570, 577, 
	579, 592, 597, 607, 609, 611, 624, 629, 
	304, 313, 322, 346, 354, 378, 560, 569, 
	578, 602, 610, 634, 332, 351, 364, 521, 
	544, 570, 588, 607, 620, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 332, 351, 364, 521, 544, 570, 588, 
	607, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 351, 521, 
	544, 570, 607, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 335, 
	336, 351, 367, 368, 521, 544, 570, 591, 
	592, 607, 623, 624, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	346, 351, 378, 521, 544, 570, 602, 607, 
	634, 304, 313, 321, 345, 353, 377, 560, 
	569, 577, 601, 609, 633, 331, 351, 363, 
	521, 544, 570, 587, 607, 619, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 327, 351, 359, 521, 544, 570, 
	583, 607, 615, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 326, 
	351, 358, 521, 544, 570, 582, 607, 614, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 39, 351, 521, 544, 
	570, 607, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 324, 329, 
	332, 351, 356, 361, 364, 521, 544, 570, 
	580, 585, 588, 607, 612, 617, 620, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 338, 351, 370, 521, 544, 
	570, 594, 607, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 351, 370, 521, 544, 570, 594, 607, 
	626, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 46, 351, 521, 
	544, 570, 607, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 332, 
	351, 364, 521, 544, 570, 588, 607, 620, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 329, 351, 361, 521, 
	544, 570, 585, 607, 617, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 334, 351, 366, 521, 544, 570, 590, 
	607, 622, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 39, 321, 325, 329, 330, 
	339, 351, 353, 357, 361, 362, 371, 521, 
	544, 570, 577, 581, 585, 586, 595, 607, 
	609, 613, 617, 618, 627, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 321, 351, 353, 521, 544, 570, 577, 
	607, 609, 304, 313, 322, 346, 354, 378, 
	560, 569, 578, 602, 610, 634, 39, 323, 
	326, 328, 336, 351, 355, 358, 360, 368, 
	521, 544, 570, 579, 582, 584, 592, 607, 
	611, 614, 616, 624, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	322, 323, 327, 329, 333, 337, 339, 342, 
	343, 351, 354, 355, 359, 361, 365, 369, 
	371, 374, 375, 521, 544, 570, 578, 579, 
	583, 585, 589, 593, 595, 598, 599, 607, 
	610, 611, 615, 617, 621, 625, 627, 630, 
	631, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 338, 351, 370, 
	521, 544, 570, 594, 607, 626, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 335, 351, 367, 521, 544, 570, 
	591, 607, 623, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 341, 
	351, 373, 521, 544, 570, 597, 607, 629, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 336, 351, 368, 521, 
	544, 570, 592, 607, 624, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 334, 351, 366, 521, 544, 570, 590, 
	607, 622, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 321, 351, 353, 521, 544, 
	570, 577, 607, 609, 304, 313, 322, 346, 
	354, 378, 560, 569, 578, 602, 610, 634, 
	338, 351, 370, 521, 544, 570, 594, 607, 
	626, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 339, 351, 371, 
	521, 544, 570, 595, 607, 627, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 332, 351, 364, 521, 544, 570, 
	588, 607, 620, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 328, 
	351, 360, 521, 544, 570, 584, 607, 616, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 321, 351, 353, 521, 
	544, 570, 577, 607, 609, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 339, 351, 371, 521, 544, 570, 595, 
	607, 627, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 334, 351, 366, 521, 544, 
	570, 590, 607, 622, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	346, 351, 378, 521, 544, 570, 602, 607, 
	634, 304, 313, 321, 345, 353, 377, 560, 
	569, 577, 601, 609, 633, 46, 351, 521, 
	544, 570, 607, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 39, 
	329, 332, 334, 344, 351, 361, 364, 366, 
	376, 521, 544, 570, 585, 588, 590, 600, 
	607, 617, 620, 622, 632, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 338, 351, 370, 521, 544, 570, 594, 
	607, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 339, 351, 
	371, 521, 544, 570, 595, 607, 627, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	324, 351, 356, 521, 544, 570, 580, 607, 
	612, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 329, 351, 361, 
	521, 544, 570, 585, 607, 617, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 326, 351, 358, 521, 544, 570, 
	582, 607, 614, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 340, 
	344, 351, 372, 376, 521, 544, 570, 596, 
	600, 607, 628, 632, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 338, 351, 370, 
	521, 544, 570, 594, 607, 626, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 334, 351, 366, 521, 544, 570, 
	590, 607, 622, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 39, 
	329, 336, 351, 361, 368, 521, 544, 570, 
	585, 592, 607, 617, 624, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 332, 351, 364, 521, 544, 570, 588, 
	607, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 332, 351, 
	364, 521, 544, 570, 588, 607, 620, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 324, 351, 356, 521, 544, 
	570, 580, 607, 612, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 336, 351, 368, 
	521, 544, 570, 592, 607, 624, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 332, 351, 364, 521, 544, 570, 
	588, 607, 620, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 335, 
	351, 367, 521, 544, 570, 591, 607, 623, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 322, 351, 354, 521, 
	544, 570, 578, 607, 610, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 321, 351, 353, 521, 544, 570, 577, 
	607, 609, 304, 313, 322, 346, 354, 378, 
	560, 569, 578, 602, 610, 634, 332, 351, 
	364, 521, 544, 570, 588, 607, 620, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 39, 321, 332, 351, 353, 
	364, 521, 544, 570, 577, 588, 607, 609, 
	620, 304, 313, 322, 346, 354, 378, 560, 
	569, 578, 602, 610, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 340, 351, 372, 521, 544, 570, 
	596, 607, 628, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 39, 
	351, 521, 544, 570, 607, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 324, 326, 329, 333, 334, 335, 336, 
	344, 345, 351, 356, 358, 361, 365, 366, 
	367, 368, 376, 377, 521, 544, 570, 580, 
	582, 585, 589, 590, 591, 592, 600, 601, 
	607, 612, 614, 617, 621, 622, 623, 624, 
	632, 633, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 340, 351, 372, 521, 544, 
	570, 596, 607, 628, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	324, 334, 351, 356, 366, 521, 544, 570, 
	580, 590, 607, 612, 622, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 326, 351, 
	358, 521, 544, 570, 582, 607, 614, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 324, 351, 356, 521, 544, 
	570, 580, 607, 612, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 326, 351, 358, 
	521, 544, 570, 582, 607, 614, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 304, 
	323, 324, 329, 342, 351, 355, 356, 361, 
	374, 521, 544, 560, 570, 579, 580, 585, 
	598, 607, 611, 612, 617, 630, 305, 313, 
	321, 346, 353, 378, 561, 569, 577, 602, 
	609, 634, 332, 351, 364, 521, 544, 570, 
	588, 607, 620, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 341, 
	351, 373, 521, 544, 570, 597, 607, 629, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 324, 351, 356, 521, 
	544, 570, 580, 607, 612, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 338, 351, 370, 521, 544, 
	570, 594, 607, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	335, 351, 367, 521, 544, 570, 591, 607, 
	623, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 331, 351, 363, 
	521, 544, 570, 587, 607, 619, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 325, 351, 357, 521, 544, 570, 
	581, 607, 613, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	329, 351, 357, 361, 521, 544, 570, 581, 
	585, 607, 613, 617, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 339, 351, 370, 371, 521, 544, 570, 
	594, 595, 607, 626, 627, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 339, 351, 
	371, 521, 544, 570, 595, 607, 627, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	340, 351, 372, 521, 544, 570, 596, 607, 
	628, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 328, 332, 351, 
	360, 364, 521, 544, 570, 584, 588, 607, 
	616, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 328, 332, 
	351, 360, 364, 521, 544, 570, 584, 588, 
	607, 616, 620, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 336, 
	338, 351, 368, 370, 521, 544, 570, 592, 
	594, 607, 624, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	39, 324, 329, 335, 339, 346, 351, 356, 
	361, 367, 371, 378, 521, 544, 570, 580, 
	585, 591, 595, 602, 607, 612, 617, 623, 
	627, 634, 304, 313, 321, 345, 353, 377, 
	560, 569, 577, 601, 609, 633, 324, 329, 
	336, 351, 356, 361, 368, 521, 544, 570, 
	580, 585, 592, 607, 612, 617, 624, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 338, 339, 344, 351, 370, 
	371, 376, 521, 544, 570, 594, 595, 600, 
	607, 626, 627, 632, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	344, 351, 376, 521, 544, 570, 600, 607, 
	632, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 338, 351, 370, 
	521, 544, 570, 594, 607, 626, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 339, 344, 351, 370, 371, 
	376, 521, 544, 570, 594, 595, 600, 607, 
	626, 627, 632, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 339, 
	344, 351, 371, 376, 521, 544, 570, 595, 
	600, 607, 627, 632, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	323, 351, 355, 521, 544, 570, 579, 607, 
	611, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 321, 351, 353, 
	521, 544, 570, 577, 607, 609, 304, 313, 
	322, 346, 354, 378, 560, 569, 578, 602, 
	610, 634, 332, 351, 364, 521, 544, 570, 
	588, 607, 620, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 329, 351, 361, 521, 544, 570, 585, 
	607, 617, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 344, 351, 376, 521, 544, 
	570, 600, 607, 632, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	322, 334, 351, 354, 366, 521, 544, 570, 
	578, 590, 607, 610, 622, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 324, 329, 
	340, 351, 356, 361, 372, 521, 544, 570, 
	580, 585, 596, 607, 612, 617, 628, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 324, 338, 351, 356, 370, 
	521, 544, 570, 580, 594, 607, 612, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 324, 338, 351, 356, 370, 521, 544, 
	570, 580, 594, 607, 612, 626, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 335, 
	351, 367, 521, 544, 570, 591, 607, 623, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 326, 334, 351, 358, 
	366, 521, 544, 570, 582, 590, 607, 614, 
	622, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 326, 351, 358, 
	521, 544, 570, 582, 607, 614, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 329, 332, 333, 335, 341, 351, 
	361, 364, 365, 367, 373, 521, 544, 570, 
	585, 588, 589, 591, 597, 607, 617, 620, 
	621, 623, 629, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 338, 
	351, 370, 521, 544, 570, 594, 607, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 335, 351, 367, 521, 544, 570, 591, 
	607, 623, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 340, 351, 372, 521, 544, 
	570, 596, 607, 628, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	341, 351, 373, 521, 544, 570, 597, 607, 
	629, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 304, 305, 306, 
	307, 308, 309, 310, 311, 351, 521, 544, 
	560, 561, 562, 563, 564, 565, 566, 567, 
	570, 607, 312, 313, 321, 346, 353, 378, 
	568, 569, 577, 602, 609, 634, 324, 351, 
	356, 521, 544, 570, 580, 607, 612, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 341, 351, 373, 521, 544, 
	570, 597, 607, 629, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	332, 351, 364, 521, 544, 570, 588, 607, 
	620, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 325, 351, 357, 
	521, 544, 570, 581, 607, 613, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 332, 351, 364, 521, 544, 570, 
	588, 607, 620, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 323, 
	325, 335, 342, 346, 351, 355, 357, 367, 
	374, 378, 521, 544, 570, 579, 581, 591, 
	598, 602, 607, 611, 613, 623, 630, 634, 
	304, 313, 321, 345, 353, 377, 560, 569, 
	577, 601, 609, 633, 327, 344, 351, 359, 
	376, 521, 544, 570, 583, 600, 607, 615, 
	632, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 340, 351, 372, 
	521, 544, 570, 596, 607, 628, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 327, 351, 359, 521, 
	544, 570, 583, 607, 615, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 336, 351, 368, 521, 544, 570, 592, 
	607, 624, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 340, 
	341, 351, 370, 372, 373, 521, 544, 570, 
	594, 596, 597, 607, 626, 628, 629, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 327, 351, 359, 521, 544, 
	570, 583, 607, 615, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	324, 329, 351, 356, 361, 521, 544, 570, 
	580, 585, 607, 612, 617, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 333, 338, 351, 365, 370, 521, 544, 
	570, 589, 594, 607, 621, 626, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 333, 
	338, 351, 365, 370, 521, 544, 570, 589, 
	594, 607, 621, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 351, 370, 521, 544, 570, 594, 607, 
	626, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 340, 351, 372, 
	521, 544, 570, 596, 607, 628, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 304, 324, 329, 351, 356, 361, 
	521, 544, 560, 570, 580, 585, 607, 612, 
	617, 305, 313, 321, 346, 353, 378, 561, 
	569, 577, 602, 609, 634, 334, 351, 366, 
	521, 544, 570, 590, 607, 622, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 322, 351, 354, 521, 544, 570, 
	578, 607, 610, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	328, 329, 335, 341, 351, 357, 360, 361, 
	367, 373, 521, 544, 570, 581, 584, 585, 
	591, 597, 607, 613, 616, 617, 623, 629, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 321, 351, 353, 521, 
	544, 570, 577, 607, 609, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 339, 351, 371, 521, 544, 570, 595, 
	607, 627, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 344, 351, 376, 521, 544, 
	570, 600, 607, 632, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 321, 324, 351, 353, 356, 521, 
	544, 570, 577, 580, 607, 609, 612, 304, 
	313, 322, 346, 354, 378, 560, 569, 578, 
	602, 610, 634, 324, 351, 356, 521, 544, 
	570, 580, 607, 612, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	334, 351, 366, 521, 544, 570, 590, 607, 
	622, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 336, 351, 368, 
	521, 544, 570, 592, 607, 624, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 344, 351, 376, 521, 544, 570, 
	600, 607, 632, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 322, 
	339, 351, 354, 371, 521, 544, 570, 578, 
	595, 607, 610, 627, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	332, 351, 364, 521, 544, 570, 588, 607, 
	620, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 329, 351, 361, 
	521, 544, 570, 585, 607, 617, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 323, 351, 355, 521, 544, 570, 
	579, 607, 611, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 328, 
	351, 360, 521, 544, 570, 584, 607, 616, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 324, 325, 332, 338, 
	339, 351, 356, 357, 364, 370, 371, 521, 
	544, 570, 580, 581, 588, 594, 595, 607, 
	612, 613, 620, 626, 627, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 333, 351, 365, 521, 544, 570, 589, 
	607, 621, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 335, 351, 
	367, 521, 544, 570, 591, 607, 623, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 324, 351, 356, 521, 544, 
	570, 580, 607, 612, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 339, 340, 351, 
	371, 372, 521, 544, 570, 595, 596, 607, 
	627, 628, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 329, 334, 
	351, 361, 366, 521, 544, 570, 585, 590, 
	607, 617, 622, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 321, 
	323, 324, 351, 353, 355, 356, 521, 544, 
	570, 577, 579, 580, 607, 609, 611, 612, 
	304, 313, 322, 346, 354, 378, 560, 569, 
	578, 602, 610, 634, 39, 351, 521, 544, 
	570, 607, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 321, 351, 
	353, 521, 544, 570, 577, 607, 609, 304, 
	313, 322, 346, 354, 378, 560, 569, 578, 
	602, 610, 634, 39, 351, 521, 544, 570, 
	607, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 321, 323, 324, 
	351, 353, 355, 356, 521, 544, 570, 577, 
	579, 580, 607, 609, 611, 612, 304, 313, 
	322, 346, 354, 378, 560, 569, 578, 602, 
	610, 634, 39, 351, 521, 544, 570, 607, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 321, 351, 353, 521, 
	544, 570, 577, 607, 609, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 39, 351, 521, 544, 570, 607, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 340, 351, 372, 521, 544, 
	570, 596, 607, 628, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	322, 323, 325, 332, 336, 338, 341, 343, 
	345, 351, 354, 355, 357, 364, 368, 370, 
	373, 375, 377, 521, 544, 570, 578, 579, 
	581, 588, 592, 594, 597, 599, 601, 607, 
	610, 611, 613, 620, 624, 626, 629, 631, 
	633, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 323, 351, 355, 
	521, 544, 570, 579, 607, 611, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 326, 351, 358, 521, 544, 570, 
	582, 607, 614, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 39, 
	351, 521, 544, 570, 607, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 323, 340, 351, 355, 372, 521, 544, 
	570, 579, 596, 607, 611, 628, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 340, 351, 372, 521, 544, 570, 
	596, 607, 628, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 329, 
	351, 361, 521, 544, 570, 585, 607, 617, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 335, 351, 367, 521, 
	544, 570, 591, 607, 623, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 334, 351, 366, 521, 544, 570, 590, 
	607, 622, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 321, 341, 
	351, 353, 373, 521, 544, 570, 577, 597, 
	607, 609, 629, 304, 313, 322, 346, 354, 
	378, 560, 569, 578, 602, 610, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 339, 351, 371, 521, 
	544, 570, 595, 607, 627, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 338, 351, 370, 521, 544, 570, 594, 
	607, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 321, 329, 
	332, 336, 351, 353, 361, 364, 368, 521, 
	544, 570, 577, 585, 588, 592, 607, 609, 
	617, 620, 624, 304, 313, 322, 346, 354, 
	378, 560, 569, 578, 602, 610, 634, 321, 
	332, 351, 353, 364, 521, 544, 570, 577, 
	588, 607, 609, 620, 304, 313, 322, 346, 
	354, 378, 560, 569, 578, 602, 610, 634, 
	322, 338, 351, 354, 370, 521, 544, 570, 
	578, 594, 607, 610, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 339, 351, 
	371, 521, 544, 570, 595, 607, 627, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 321, 351, 353, 521, 544, 
	570, 577, 607, 609, 304, 313, 322, 346, 
	354, 378, 560, 569, 578, 602, 610, 634, 
	336, 351, 368, 521, 544, 570, 592, 607, 
	624, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 334, 351, 366, 
	521, 544, 570, 590, 607, 622, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 329, 351, 361, 521, 544, 570, 
	585, 607, 617, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 322, 
	351, 354, 521, 544, 570, 578, 607, 610, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 339, 351, 371, 521, 
	544, 570, 595, 607, 627, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 323, 351, 355, 521, 544, 570, 579, 
	607, 611, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 321, 351, 
	353, 521, 544, 570, 577, 607, 609, 304, 
	313, 322, 346, 354, 378, 560, 569, 578, 
	602, 610, 634, 332, 351, 364, 521, 544, 
	570, 588, 607, 620, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	332, 351, 364, 521, 544, 570, 588, 607, 
	620, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 325, 339, 351, 
	357, 371, 521, 544, 570, 581, 595, 607, 
	613, 627, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 339, 351, 
	371, 521, 544, 570, 595, 607, 627, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 340, 351, 372, 521, 544, 
	570, 596, 607, 628, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	340, 351, 372, 521, 544, 570, 596, 607, 
	628, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 329, 351, 361, 
	521, 544, 570, 585, 607, 617, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 335, 351, 367, 521, 544, 570, 
	591, 607, 623, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 333, 
	334, 351, 365, 366, 521, 544, 570, 589, 
	590, 607, 621, 622, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	321, 339, 351, 353, 371, 521, 544, 570, 
	577, 595, 607, 609, 627, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 324, 351, 356, 521, 544, 570, 580, 
	607, 612, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 326, 351, 358, 521, 544, 
	570, 582, 607, 614, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	329, 351, 361, 521, 544, 570, 585, 607, 
	617, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 334, 351, 366, 
	521, 544, 570, 590, 607, 622, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 325, 351, 357, 521, 544, 570, 
	581, 607, 613, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 324, 
	332, 335, 336, 338, 351, 356, 364, 367, 
	368, 370, 521, 544, 570, 580, 588, 591, 
	592, 594, 607, 612, 620, 623, 624, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 325, 351, 357, 521, 
	544, 570, 581, 607, 613, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 326, 351, 358, 521, 544, 570, 582, 
	607, 614, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 329, 351, 
	361, 521, 544, 570, 585, 607, 617, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 322, 351, 354, 521, 544, 
	570, 578, 607, 610, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 351, 370, 521, 544, 570, 594, 607, 
	626, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 323, 351, 355, 
	521, 544, 570, 579, 607, 611, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 325, 351, 357, 521, 544, 570, 
	581, 607, 613, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 326, 
	351, 358, 521, 544, 570, 582, 607, 614, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 0
};
static const char _lexer_single_lengths[] = {
	0, 2, 3, 14, 2, 5, 5, 2, 
	5, 2, 5, 4, 5, 5, 2, 5, 
	2, 0, 8, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 8, 3, 
	3, 126, 1, 0, 1, 0, 1, 14, 
	1, 6, 4, 2, 2, 2, 0, 1, 
	3, 1, 2, 1, 13, 1, 2, 5, 
	2, 5, 3, 3, 3, 3, 3, 3, 
	3, 8, 2, 5, 3, 3, 3, 3, 
	3, 10, 3, 3, 1, 5, 3, 3, 
	3, 3, 2, 7, 3, 3, 2, 3, 
	3, 3, 3, 12, 3, 10, 19, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 2, 
	10, 3, 3, 3, 3, 3, 3, 5, 
	3, 3, 3, 6, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 6, 3, 
	3, 2, 19, 3, 3, 5, 3, 3, 
	3, 3, 3, 3, 10, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 5, 5, 
	3, 3, 3, 3, 5, 5, 5, 12, 
	7, 7, 3, 3, 7, 5, 3, 3, 
	3, 3, 3, 3, 3, 3, 5, 3, 
	7, 5, 3, 5, 3, 3, 5, 3, 
	11, 3, 3, 3, 3, 3, 3, 9, 
	3, 3, 3, 3, 3, 11, 5, 3, 
	3, 3, 3, 3, 7, 3, 5, 5, 
	3, 5, 3, 3, 6, 3, 3, 11, 
	3, 3, 3, 3, 3, 3, 5, 3, 
	3, 3, 3, 5, 3, 3, 3, 3, 
	11, 3, 3, 3, 3, 5, 5, 7, 
	2, 3, 2, 7, 2, 3, 2, 3, 
	19, 3, 3, 2, 5, 3, 3, 3, 
	3, 5, 3, 3, 3, 9, 5, 5, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 5, 3, 3, 3, 
	3, 3, 5, 5, 3, 3, 3, 3, 
	3, 3, 11, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 1, 28, 5, 7, 
	13, 6, 13, 9, 9, 9, 9, 9, 
	9, 9, 18, 6, 13, 9, 9, 9, 
	9, 9, 22, 9, 9, 5, 13, 9, 
	9, 9, 9, 6, 17, 9, 9, 6, 
	9, 9, 9, 9, 26, 9, 22, 41, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	6, 22, 9, 9, 9, 9, 9, 9, 
	13, 9, 9, 9, 14, 9, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 14, 
	9, 9, 6, 41, 9, 9, 13, 9, 
	9, 9, 9, 9, 9, 23, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 13, 
	13, 9, 9, 9, 9, 13, 13, 13, 
	26, 17, 17, 9, 9, 17, 13, 9, 
	9, 9, 9, 9, 9, 9, 9, 13, 
	9, 17, 13, 9, 13, 9, 9, 13, 
	9, 25, 9, 9, 9, 9, 9, 9, 
	21, 9, 9, 9, 9, 9, 25, 13, 
	9, 9, 9, 9, 9, 17, 9, 13, 
	13, 9, 13, 9, 9, 15, 9, 9, 
	25, 9, 9, 9, 9, 9, 9, 13, 
	9, 9, 9, 9, 13, 9, 9, 9, 
	9, 25, 9, 9, 9, 9, 13, 13, 
	17, 6, 9, 6, 17, 6, 9, 6, 
	9, 41, 9, 9, 6, 13, 9, 9, 
	9, 9, 13, 9, 9, 9, 21, 13, 
	13, 9, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 9, 9, 13, 9, 9, 
	9, 9, 9, 13, 13, 9, 9, 9, 
	9, 9, 9, 25, 9, 9, 9, 9, 
	9, 9, 9, 9
};
static const char _lexer_range_lengths[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	3, 3, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 2, 
	0, 6, 0, 3, 1, 1, 0, 0, 
	0, 4, 4, 3, 3, 4, 3, 0, 
	0, 0, 0, 0, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 2, 3, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6
};
static const short _lexer_index_offsets[] = {
	0, 0, 3, 7, 22, 25, 31, 37, 
	40, 46, 49, 55, 60, 66, 72, 75, 
	81, 87, 91, 100, 103, 106, 109, 112, 
	115, 118, 121, 124, 127, 130, 133, 142, 
	148, 152, 285, 287, 291, 294, 296, 298, 
	313, 315, 326, 335, 341, 347, 354, 358, 
	360, 364, 366, 369, 371, 388, 393, 399, 
	408, 414, 423, 430, 437, 444, 451, 458, 
	465, 472, 484, 490, 499, 506, 513, 520, 
	527, 534, 548, 555, 562, 567, 576, 583, 
	590, 597, 604, 610, 621, 628, 635, 641, 
	648, 655, 662, 669, 685, 692, 706, 729, 
	736, 743, 750, 757, 764, 771, 778, 785, 
	792, 799, 806, 813, 820, 827, 834, 841, 
	847, 861, 868, 875, 882, 889, 896, 903, 
	912, 919, 926, 933, 943, 950, 957, 964, 
	971, 978, 985, 992, 999, 1006, 1013, 1023, 
	1030, 1037, 1043, 1066, 1073, 1080, 1089, 1096, 
	1103, 1110, 1117, 1124, 1131, 1145, 1152, 1159, 
	1166, 1173, 1180, 1187, 1194, 1201, 1208, 1217, 
	1226, 1233, 1240, 1247, 1254, 1263, 1272, 1281, 
	1297, 1308, 1319, 1326, 1333, 1344, 1353, 1360, 
	1367, 1374, 1381, 1388, 1395, 1402, 1409, 1418, 
	1425, 1436, 1445, 1452, 1461, 1468, 1475, 1484, 
	1491, 1506, 1513, 1520, 1527, 1534, 1541, 1548, 
	1561, 1568, 1575, 1582, 1589, 1596, 1611, 1620, 
	1627, 1634, 1641, 1648, 1655, 1666, 1673, 1682, 
	1691, 1698, 1707, 1714, 1721, 1731, 1738, 1745, 
	1760, 1767, 1774, 1781, 1788, 1795, 1802, 1811, 
	1818, 1825, 1832, 1839, 1848, 1855, 1862, 1869, 
	1876, 1891, 1898, 1905, 1912, 1919, 1928, 1937, 
	1948, 1954, 1961, 1967, 1978, 1984, 1991, 1997, 
	2004, 2027, 2034, 2041, 2047, 2056, 2063, 2070, 
	2077, 2084, 2093, 2100, 2107, 2114, 2127, 2136, 
	2145, 2152, 2159, 2166, 2173, 2180, 2187, 2194, 
	2201, 2208, 2215, 2222, 2229, 2238, 2245, 2252, 
	2259, 2266, 2273, 2282, 2291, 2298, 2305, 2312, 
	2319, 2326, 2333, 2348, 2355, 2362, 2369, 2376, 
	2383, 2390, 2397, 2404, 2410, 2415, 2450, 2462, 
	2476, 2496, 2509, 2529, 2545, 2561, 2577, 2593, 
	2609, 2625, 2641, 2666, 2679, 2699, 2715, 2731, 
	2747, 2763, 2779, 2808, 2824, 2840, 2852, 2872, 
	2888, 2904, 2920, 2936, 2949, 2973, 2989, 3005, 
	3018, 3034, 3050, 3066, 3082, 3115, 3131, 3160, 
	3208, 3224, 3240, 3256, 3272, 3288, 3304, 3320, 
	3336, 3352, 3368, 3384, 3400, 3416, 3432, 3448, 
	3464, 3477, 3506, 3522, 3538, 3554, 3570, 3586, 
	3602, 3622, 3638, 3654, 3670, 3691, 3707, 3723, 
	3739, 3755, 3771, 3787, 3803, 3819, 3835, 3851, 
	3872, 3888, 3904, 3917, 3965, 3981, 3997, 4017, 
	4033, 4049, 4065, 4081, 4097, 4113, 4143, 4159, 
	4175, 4191, 4207, 4223, 4239, 4255, 4271, 4287, 
	4307, 4327, 4343, 4359, 4375, 4391, 4411, 4431, 
	4451, 4484, 4508, 4532, 4548, 4564, 4588, 4608, 
	4624, 4640, 4656, 4672, 4688, 4704, 4720, 4736, 
	4756, 4772, 4796, 4816, 4832, 4852, 4868, 4884, 
	4904, 4920, 4952, 4968, 4984, 5000, 5016, 5032, 
	5048, 5076, 5092, 5108, 5124, 5140, 5156, 5188, 
	5208, 5224, 5240, 5256, 5272, 5288, 5312, 5328, 
	5348, 5368, 5384, 5404, 5420, 5436, 5458, 5474, 
	5490, 5522, 5538, 5554, 5570, 5586, 5602, 5618, 
	5638, 5654, 5670, 5686, 5702, 5722, 5738, 5754, 
	5770, 5786, 5818, 5834, 5850, 5866, 5882, 5902, 
	5922, 5946, 5959, 5975, 5988, 6012, 6025, 6041, 
	6054, 6070, 6118, 6134, 6150, 6163, 6183, 6199, 
	6215, 6231, 6247, 6267, 6283, 6299, 6315, 6343, 
	6363, 6383, 6399, 6415, 6431, 6447, 6463, 6479, 
	6495, 6511, 6527, 6543, 6559, 6575, 6595, 6611, 
	6627, 6643, 6659, 6675, 6695, 6715, 6731, 6747, 
	6763, 6779, 6795, 6811, 6843, 6859, 6875, 6891, 
	6907, 6923, 6939, 6955
};
static const short _lexer_indicies[] = {
	1, 1, 0, 2, 1, 1, 0, 4, 
	4, 5, 6, 7, 8, 9, 10, 5, 
	6, 7, 8, 9, 10, 3, 11, 11, 
	3, 11, 11, 12, 12, 12, 3, 6, 
	6, 13, 13, 13, 3, 14, 14, 3, 
	14, 14, 15, 15, 15, 3, 16, 16, 
	3, 16, 16, 17, 17, 17, 3, 18, 
	19, 18, 19, 3, 18, 18, 20, 20, 
	20, 3, 19, 19, 21, 21, 21, 3, 
	22, 22, 3, 22, 22, 23, 23, 23, 
	3, 25, 25, 24, 24, 24, 0, 27, 
	27, 27, 26, 29, 30, 31, 32, 29, 
	30, 31, 32, 28, 33, 33, 28, 34, 
	34, 28, 35, 35, 28, 36, 36, 28, 
	37, 37, 28, 38, 38, 28, 39, 39, 
	28, 40, 40, 28, 41, 41, 28, 42, 
	42, 28, 43, 43, 28, 44, 45, 46, 
	47, 44, 45, 46, 47, 28, 49, 49, 
	50, 50, 50, 48, 51, 51, 52, 0, 
	54, 55, 56, 57, 58, 59, 60, 61, 
	62, 63, 64, 65, 66, 67, 68, 70, 
	71, 73, 74, 75, 76, 77, 78, 79, 
	80, 81, 82, 83, 81, 84, 85, 86, 
	87, 53, 88, 89, 90, 91, 92, 93, 
	94, 95, 96, 97, 98, 100, 101, 102, 
	103, 104, 105, 106, 107, 108, 109, 110, 
	111, 99, 89, 90, 91, 92, 93, 94, 
	95, 96, 97, 98, 100, 101, 102, 103, 
	104, 105, 106, 107, 108, 109, 110, 111, 
	112, 113, 114, 115, 116, 117, 118, 119, 
	120, 121, 122, 124, 125, 126, 127, 128, 
	129, 130, 131, 132, 133, 134, 135, 123, 
	113, 114, 115, 116, 117, 118, 119, 120, 
	121, 122, 124, 125, 126, 127, 128, 129, 
	130, 131, 132, 133, 134, 135, 53, 72, 
	99, 99, 123, 123, 69, 137, 136, 138, 
	138, 138, 0, 139, 140, 0, 140, 141, 
	143, 142, 4, 4, 5, 6, 7, 8, 
	9, 10, 5, 6, 7, 8, 9, 10, 
	144, 146, 145, 148, 25, 149, 148, 25, 
	149, 71, 72, 24, 24, 147, 150, 25, 
	150, 25, 71, 72, 24, 24, 147, 25, 
	25, 72, 24, 24, 147, 25, 25, 24, 
	24, 24, 151, 25, 25, 152, 24, 24, 
	24, 0, 27, 27, 27, 153, 154, 74, 
	156, 157, 158, 155, 160, 159, 162, 163, 
	161, 165, 164, 167, 168, 169, 170, 171, 
	172, 173, 99, 169, 170, 171, 172, 173, 
	99, 99, 99, 166, 99, 99, 99, 99, 
	0, 175, 99, 99, 99, 99, 174, 176, 
	177, 99, 176, 177, 99, 99, 99, 174, 
	179, 99, 99, 99, 99, 178, 180, 181, 
	99, 180, 181, 99, 99, 99, 174, 182, 
	99, 182, 99, 99, 99, 174, 183, 99, 
	183, 99, 99, 99, 174, 184, 99, 184, 
	99, 99, 99, 174, 185, 99, 185, 99, 
	99, 99, 174, 186, 99, 186, 99, 99, 
	99, 174, 187, 99, 187, 99, 99, 99, 
	174, 188, 99, 188, 99, 99, 99, 174, 
	190, 191, 192, 193, 99, 191, 192, 193, 
	99, 99, 99, 189, 195, 99, 99, 99, 
	99, 194, 196, 197, 99, 196, 197, 99, 
	99, 99, 174, 198, 99, 198, 99, 99, 
	99, 174, 199, 99, 199, 99, 99, 99, 
	174, 200, 99, 200, 99, 99, 99, 174, 
	201, 99, 201, 99, 99, 99, 174, 202, 
	99, 202, 99, 99, 99, 174, 204, 205, 
	206, 207, 208, 209, 205, 206, 207, 208, 
	99, 99, 99, 203, 210, 99, 210, 99, 
	99, 99, 174, 211, 99, 211, 99, 99, 
	99, 174, 213, 99, 99, 99, 212, 214, 
	215, 99, 214, 215, 99, 99, 99, 174, 
	216, 99, 216, 99, 99, 99, 174, 217, 
	99, 217, 99, 99, 99, 174, 218, 99, 
	218, 99, 99, 99, 174, 219, 99, 219, 
	99, 99, 99, 174, 221, 99, 99, 99, 
	99, 220, 223, 224, 225, 99, 223, 224, 
	225, 99, 99, 99, 222, 227, 99, 227, 
	99, 99, 99, 226, 229, 99, 229, 99, 
	99, 99, 228, 230, 99, 99, 99, 99, 
	174, 231, 99, 231, 99, 99, 99, 174, 
	232, 99, 232, 99, 99, 99, 174, 233, 
	99, 233, 99, 99, 99, 174, 234, 99, 
	234, 99, 99, 99, 174, 236, 237, 238, 
	239, 240, 241, 99, 237, 238, 239, 240, 
	241, 99, 99, 99, 235, 242, 99, 242, 
	99, 99, 99, 174, 244, 245, 246, 247, 
	248, 99, 245, 246, 247, 248, 99, 99, 
	99, 243, 249, 250, 251, 252, 253, 254, 
	255, 256, 257, 99, 249, 250, 251, 252, 
	253, 254, 255, 256, 257, 99, 99, 99, 
	174, 258, 99, 258, 99, 99, 99, 174, 
	259, 99, 259, 99, 99, 99, 174, 260, 
	99, 260, 99, 99, 99, 174, 261, 99, 
	261, 99, 99, 99, 174, 262, 99, 262, 
	99, 99, 99, 174, 263, 99, 263, 99, 
	99, 99, 174, 264, 99, 264, 99, 99, 
	99, 174, 265, 99, 265, 99, 99, 99, 
	174, 266, 99, 266, 99, 99, 99, 174, 
	267, 99, 267, 99, 99, 99, 174, 268, 
	99, 268, 99, 99, 99, 174, 269, 99, 
	269, 99, 99, 99, 174, 270, 99, 270, 
	99, 99, 99, 174, 271, 99, 271, 99, 
	99, 99, 174, 272, 99, 272, 99, 99, 
	99, 174, 273, 99, 273, 99, 99, 99, 
	174, 274, 99, 99, 99, 99, 174, 276, 
	277, 278, 279, 280, 99, 277, 278, 279, 
	280, 99, 99, 99, 275, 282, 99, 282, 
	99, 99, 99, 281, 283, 99, 283, 99, 
	99, 99, 174, 284, 99, 284, 99, 99, 
	99, 174, 285, 99, 285, 99, 99, 99, 
	174, 286, 99, 286, 99, 99, 99, 174, 
	287, 99, 287, 99, 99, 99, 174, 289, 
	290, 99, 289, 290, 99, 99, 99, 288, 
	291, 99, 291, 99, 99, 99, 174, 292, 
	99, 292, 99, 99, 99, 174, 293, 99, 
	293, 99, 99, 99, 174, 295, 296, 297, 
	99, 296, 297, 99, 99, 99, 294, 298, 
	99, 298, 99, 99, 99, 174, 299, 99, 
	299, 99, 99, 99, 174, 301, 99, 301, 
	99, 99, 99, 300, 302, 99, 302, 99, 
	99, 99, 174, 303, 99, 303, 99, 99, 
	99, 174, 304, 99, 304, 99, 99, 99, 
	174, 305, 99, 305, 99, 99, 99, 174, 
	306, 99, 306, 99, 99, 99, 174, 307, 
	99, 307, 99, 99, 99, 174, 308, 99, 
	308, 99, 99, 99, 174, 310, 311, 312, 
	99, 311, 312, 99, 99, 99, 309, 313, 
	99, 313, 99, 99, 99, 174, 314, 99, 
	314, 99, 99, 99, 174, 316, 99, 99, 
	99, 99, 315, 318, 319, 320, 321, 322, 
	323, 324, 325, 326, 99, 318, 319, 320, 
	321, 322, 323, 324, 325, 326, 99, 99, 
	99, 317, 327, 99, 327, 99, 99, 99, 
	174, 328, 99, 328, 99, 99, 99, 174, 
	330, 331, 99, 330, 331, 99, 99, 99, 
	329, 332, 99, 332, 99, 99, 99, 174, 
	333, 99, 333, 99, 99, 99, 174, 334, 
	99, 334, 99, 99, 99, 174, 335, 99, 
	335, 99, 99, 99, 174, 336, 99, 336, 
	99, 99, 99, 174, 337, 99, 337, 99, 
	99, 99, 174, 339, 340, 341, 342, 343, 
	99, 340, 341, 342, 343, 99, 99, 99, 
	338, 345, 99, 345, 99, 99, 99, 344, 
	346, 99, 346, 99, 99, 99, 174, 347, 
	99, 347, 99, 99, 99, 174, 348, 99, 
	348, 99, 99, 99, 174, 350, 99, 350, 
	99, 99, 99, 349, 352, 99, 352, 99, 
	99, 99, 351, 353, 99, 353, 99, 99, 
	99, 174, 354, 99, 354, 99, 99, 99, 
	174, 355, 99, 355, 99, 99, 99, 174, 
	356, 357, 99, 356, 357, 99, 99, 99, 
	174, 359, 360, 99, 359, 360, 99, 99, 
	99, 358, 361, 99, 361, 99, 99, 99, 
	174, 362, 99, 362, 99, 99, 99, 174, 
	363, 99, 363, 99, 99, 99, 174, 364, 
	99, 364, 99, 99, 99, 174, 366, 367, 
	99, 366, 367, 99, 99, 99, 365, 369, 
	370, 99, 369, 370, 99, 99, 99, 368, 
	371, 372, 99, 371, 372, 99, 99, 99, 
	174, 374, 375, 376, 377, 378, 379, 99, 
	375, 376, 377, 378, 379, 99, 99, 99, 
	373, 381, 382, 383, 99, 381, 382, 383, 
	99, 99, 99, 380, 385, 386, 387, 99, 
	385, 386, 387, 99, 99, 99, 384, 389, 
	99, 389, 99, 99, 99, 388, 390, 99, 
	390, 99, 99, 99, 174, 392, 393, 394, 
	99, 392, 393, 394, 99, 99, 99, 391, 
	396, 397, 99, 396, 397, 99, 99, 99, 
	395, 398, 99, 398, 99, 99, 99, 174, 
	399, 99, 399, 99, 99, 99, 174, 400, 
	99, 400, 99, 99, 99, 174, 401, 99, 
	401, 99, 99, 99, 174, 402, 99, 402, 
	99, 99, 99, 174, 404, 99, 404, 99, 
	99, 99, 403, 405, 99, 405, 99, 99, 
	99, 174, 406, 99, 406, 99, 99, 99, 
	174, 407, 408, 99, 407, 408, 99, 99, 
	99, 174, 409, 99, 409, 99, 99, 99, 
	174, 410, 411, 412, 99, 410, 411, 412, 
	99, 99, 99, 174, 413, 414, 99, 413, 
	414, 99, 99, 99, 174, 415, 99, 415, 
	99, 99, 99, 174, 416, 417, 99, 416, 
	417, 99, 99, 99, 174, 418, 99, 418, 
	99, 99, 99, 174, 419, 99, 419, 99, 
	99, 99, 174, 420, 421, 99, 420, 421, 
	99, 99, 99, 174, 422, 99, 422, 99, 
	99, 99, 174, 424, 425, 426, 427, 428, 
	99, 424, 425, 426, 427, 428, 99, 99, 
	99, 423, 429, 99, 429, 99, 99, 99, 
	174, 430, 99, 430, 99, 99, 99, 174, 
	431, 99, 431, 99, 99, 99, 174, 432, 
	99, 432, 99, 99, 99, 174, 433, 99, 
	433, 99, 99, 99, 174, 434, 99, 434, 
	99, 99, 99, 174, 436, 437, 438, 439, 
	440, 441, 442, 443, 99, 99, 99, 99, 
	435, 444, 99, 444, 99, 99, 99, 174, 
	445, 99, 445, 99, 99, 99, 174, 446, 
	99, 446, 99, 99, 99, 174, 447, 99, 
	447, 99, 99, 99, 174, 448, 99, 448, 
	99, 99, 99, 174, 449, 450, 451, 452, 
	453, 99, 449, 450, 451, 452, 453, 99, 
	99, 99, 174, 454, 455, 99, 454, 455, 
	99, 99, 99, 174, 456, 99, 456, 99, 
	99, 99, 174, 457, 99, 457, 99, 99, 
	99, 174, 458, 99, 458, 99, 99, 99, 
	174, 459, 99, 459, 99, 99, 99, 174, 
	460, 99, 460, 99, 99, 99, 174, 461, 
	462, 463, 99, 461, 462, 463, 99, 99, 
	99, 174, 465, 99, 465, 99, 99, 99, 
	464, 466, 467, 99, 466, 467, 99, 99, 
	99, 174, 468, 469, 99, 468, 469, 99, 
	99, 99, 174, 471, 99, 471, 99, 99, 
	99, 470, 472, 473, 99, 472, 473, 99, 
	99, 99, 174, 475, 99, 475, 99, 99, 
	99, 474, 476, 99, 476, 99, 99, 99, 
	174, 478, 479, 480, 99, 479, 480, 99, 
	99, 99, 477, 482, 99, 482, 99, 99, 
	99, 481, 483, 99, 483, 99, 99, 99, 
	174, 485, 486, 487, 488, 489, 99, 485, 
	486, 487, 488, 489, 99, 99, 99, 484, 
	490, 99, 490, 99, 99, 99, 174, 491, 
	99, 491, 99, 99, 99, 174, 492, 99, 
	492, 99, 99, 99, 174, 493, 99, 493, 
	99, 99, 99, 174, 494, 99, 494, 99, 
	99, 99, 174, 495, 99, 495, 99, 99, 
	99, 174, 496, 497, 99, 496, 497, 99, 
	99, 99, 174, 498, 99, 498, 99, 99, 
	99, 174, 499, 99, 499, 99, 99, 99, 
	174, 501, 99, 501, 99, 99, 99, 500, 
	503, 99, 503, 99, 99, 99, 502, 504, 
	505, 99, 504, 505, 99, 99, 99, 174, 
	506, 99, 506, 99, 99, 99, 174, 507, 
	99, 507, 99, 99, 99, 174, 508, 99, 
	508, 99, 99, 99, 174, 509, 99, 509, 
	99, 99, 99, 174, 511, 512, 513, 514, 
	515, 99, 511, 512, 513, 514, 515, 99, 
	99, 99, 510, 516, 99, 516, 99, 99, 
	99, 174, 517, 99, 517, 99, 99, 99, 
	174, 518, 99, 518, 99, 99, 99, 174, 
	519, 99, 519, 99, 99, 99, 174, 520, 
	521, 99, 520, 521, 99, 99, 99, 174, 
	523, 524, 99, 523, 524, 99, 99, 99, 
	522, 526, 527, 528, 99, 526, 527, 528, 
	99, 99, 99, 525, 530, 99, 99, 99, 
	99, 529, 532, 99, 532, 99, 99, 99, 
	531, 534, 99, 99, 99, 99, 533, 536, 
	537, 538, 99, 536, 537, 538, 99, 99, 
	99, 535, 540, 99, 99, 99, 99, 539, 
	542, 99, 542, 99, 99, 99, 541, 544, 
	99, 99, 99, 99, 543, 545, 99, 545, 
	99, 99, 99, 174, 546, 547, 548, 549, 
	550, 551, 552, 553, 554, 99, 546, 547, 
	548, 549, 550, 551, 552, 553, 554, 99, 
	99, 99, 174, 555, 99, 555, 99, 99, 
	99, 174, 556, 99, 556, 99, 99, 99, 
	174, 558, 99, 99, 99, 99, 557, 559, 
	560, 99, 559, 560, 99, 99, 99, 174, 
	561, 99, 561, 99, 99, 99, 174, 562, 
	99, 562, 99, 99, 99, 174, 563, 99, 
	563, 99, 99, 99, 174, 564, 99, 564, 
	99, 99, 99, 174, 566, 567, 99, 566, 
	567, 99, 99, 99, 565, 568, 99, 568, 
	99, 99, 99, 174, 569, 99, 569, 99, 
	99, 99, 174, 570, 99, 570, 99, 99, 
	99, 174, 571, 572, 573, 574, 99, 571, 
	572, 573, 574, 99, 99, 99, 174, 575, 
	576, 99, 575, 576, 99, 99, 99, 174, 
	578, 579, 99, 578, 579, 99, 99, 99, 
	577, 580, 99, 580, 99, 99, 99, 174, 
	581, 99, 581, 99, 99, 99, 174, 582, 
	99, 582, 99, 99, 99, 174, 583, 99, 
	583, 99, 99, 99, 174, 585, 99, 585, 
	99, 99, 99, 584, 586, 99, 586, 99, 
	99, 99, 174, 587, 99, 587, 99, 99, 
	99, 174, 588, 99, 588, 99, 99, 99, 
	174, 589, 99, 589, 99, 99, 99, 174, 
	590, 99, 590, 99, 99, 99, 174, 591, 
	99, 591, 99, 99, 99, 174, 592, 99, 
	592, 99, 99, 99, 174, 593, 594, 99, 
	593, 594, 99, 99, 99, 174, 595, 99, 
	595, 99, 99, 99, 174, 596, 99, 596, 
	99, 99, 99, 174, 597, 99, 597, 99, 
	99, 99, 174, 599, 99, 599, 99, 99, 
	99, 598, 600, 99, 600, 99, 99, 99, 
	174, 601, 602, 99, 601, 602, 99, 99, 
	99, 174, 603, 604, 99, 603, 604, 99, 
	99, 99, 174, 605, 99, 605, 99, 99, 
	99, 174, 606, 99, 606, 99, 99, 99, 
	174, 607, 99, 607, 99, 99, 99, 174, 
	608, 99, 608, 99, 99, 99, 174, 609, 
	99, 609, 99, 99, 99, 174, 610, 99, 
	610, 99, 99, 99, 174, 611, 612, 613, 
	614, 615, 99, 611, 612, 613, 614, 615, 
	99, 99, 99, 174, 616, 99, 616, 99, 
	99, 99, 174, 617, 99, 617, 99, 99, 
	99, 174, 618, 99, 618, 99, 99, 99, 
	174, 619, 99, 619, 99, 99, 99, 174, 
	620, 99, 620, 99, 99, 99, 174, 621, 
	99, 621, 99, 99, 99, 174, 622, 99, 
	622, 99, 99, 99, 174, 623, 99, 623, 
	99, 99, 99, 174, 49, 49, 50, 50, 
	50, 624, 50, 50, 50, 50, 625, 167, 
	168, 169, 170, 171, 172, 173, 99, 169, 
	170, 171, 172, 173, 51, 51, 626, 52, 
	627, 628, 629, 630, 631, 123, 627, 628, 
	629, 630, 631, 99, 99, 99, 123, 123, 
	123, 166, 99, 51, 51, 52, 123, 99, 
	99, 99, 123, 123, 123, 0, 175, 99, 
	51, 51, 632, 52, 123, 99, 99, 99, 
	123, 123, 123, 174, 176, 177, 99, 176, 
	177, 51, 51, 52, 633, 634, 123, 633, 
	634, 99, 99, 99, 123, 123, 123, 174, 
	179, 99, 51, 51, 52, 123, 99, 99, 
	99, 123, 123, 123, 178, 180, 181, 99, 
	180, 181, 51, 51, 52, 635, 636, 123, 
	635, 636, 99, 99, 99, 123, 123, 123, 
	174, 182, 99, 182, 51, 51, 52, 637, 
	123, 637, 99, 99, 99, 123, 123, 123, 
	174, 183, 99, 183, 51, 51, 52, 638, 
	123, 638, 99, 99, 99, 123, 123, 123, 
	174, 184, 99, 184, 51, 51, 52, 639, 
	123, 639, 99, 99, 99, 123, 123, 123, 
	174, 185, 99, 185, 51, 51, 52, 640, 
	123, 640, 99, 99, 99, 123, 123, 123, 
	174, 186, 99, 186, 51, 51, 52, 641, 
	123, 641, 99, 99, 99, 123, 123, 123, 
	174, 187, 99, 187, 51, 51, 52, 642, 
	123, 642, 99, 99, 99, 123, 123, 123, 
	174, 188, 99, 188, 51, 51, 52, 643, 
	123, 643, 99, 99, 99, 123, 123, 123, 
	174, 190, 191, 192, 193, 99, 191, 192, 
	193, 51, 51, 52, 644, 645, 646, 123, 
	644, 645, 646, 99, 99, 99, 123, 123, 
	123, 189, 195, 99, 51, 51, 52, 123, 
	99, 99, 99, 123, 123, 123, 194, 196, 
	197, 99, 196, 197, 51, 51, 52, 647, 
	648, 123, 647, 648, 99, 99, 99, 123, 
	123, 123, 174, 198, 99, 198, 51, 51, 
	52, 649, 123, 649, 99, 99, 99, 123, 
	123, 123, 174, 199, 99, 199, 51, 51, 
	52, 650, 123, 650, 99, 99, 99, 123, 
	123, 123, 174, 200, 99, 200, 51, 51, 
	52, 651, 123, 651, 99, 99, 99, 123, 
	123, 123, 174, 201, 99, 201, 51, 51, 
	52, 652, 123, 652, 99, 99, 99, 123, 
	123, 123, 174, 202, 99, 202, 51, 51, 
	52, 653, 123, 653, 99, 99, 99, 123, 
	123, 123, 174, 204, 205, 206, 207, 208, 
	209, 205, 206, 207, 208, 51, 51, 52, 
	654, 655, 656, 657, 658, 654, 655, 656, 
	657, 99, 99, 99, 123, 123, 123, 203, 
	210, 99, 210, 51, 51, 52, 659, 123, 
	659, 99, 99, 99, 123, 123, 123, 174, 
	211, 99, 211, 51, 51, 52, 660, 123, 
	660, 99, 99, 99, 123, 123, 123, 174, 
	213, 51, 51, 52, 661, 99, 99, 99, 
	123, 123, 123, 212, 214, 215, 99, 214, 
	215, 51, 51, 52, 662, 663, 123, 662, 
	663, 99, 99, 99, 123, 123, 123, 174, 
	216, 99, 216, 51, 51, 52, 664, 123, 
	664, 99, 99, 99, 123, 123, 123, 174, 
	217, 99, 217, 51, 51, 52, 665, 123, 
	665, 99, 99, 99, 123, 123, 123, 174, 
	218, 99, 218, 51, 51, 52, 666, 123, 
	666, 99, 99, 99, 123, 123, 123, 174, 
	219, 99, 219, 51, 51, 52, 667, 123, 
	667, 99, 99, 99, 123, 123, 123, 174, 
	221, 99, 51, 51, 52, 123, 99, 99, 
	99, 123, 123, 123, 220, 223, 224, 225, 
	99, 223, 224, 225, 51, 51, 52, 668, 
	669, 670, 123, 668, 669, 670, 99, 99, 
	99, 123, 123, 123, 222, 227, 99, 227, 
	51, 51, 52, 671, 123, 671, 99, 99, 
	99, 123, 123, 123, 226, 229, 99, 229, 
	51, 51, 52, 672, 123, 672, 99, 99, 
	99, 123, 123, 123, 228, 230, 99, 51, 
	51, 52, 123, 99, 99, 99, 123, 123, 
	123, 174, 231, 99, 231, 51, 51, 52, 
	673, 123, 673, 99, 99, 99, 123, 123, 
	123, 174, 232, 99, 232, 51, 51, 52, 
	674, 123, 674, 99, 99, 99, 123, 123, 
	123, 174, 233, 99, 233, 51, 51, 52, 
	675, 123, 675, 99, 99, 99, 123, 123, 
	123, 174, 234, 99, 234, 51, 51, 52, 
	676, 123, 676, 99, 99, 99, 123, 123, 
	123, 174, 236, 237, 238, 239, 240, 241, 
	99, 237, 238, 239, 240, 241, 51, 51, 
	52, 677, 678, 679, 680, 681, 123, 677, 
	678, 679, 680, 681, 99, 99, 99, 123, 
	123, 123, 235, 242, 99, 242, 51, 51, 
	52, 682, 123, 682, 99, 99, 99, 123, 
	123, 123, 174, 244, 245, 246, 247, 248, 
	99, 245, 246, 247, 248, 51, 51, 52, 
	683, 684, 685, 686, 123, 683, 684, 685, 
	686, 99, 99, 99, 123, 123, 123, 243, 
	249, 250, 251, 252, 253, 254, 255, 256, 
	257, 99, 249, 250, 251, 252, 253, 254, 
	255, 256, 257, 51, 51, 52, 687, 688, 
	689, 690, 691, 692, 693, 694, 695, 123, 
	687, 688, 689, 690, 691, 692, 693, 694, 
	695, 99, 99, 99, 123, 123, 123, 174, 
	258, 99, 258, 51, 51, 52, 696, 123, 
	696, 99, 99, 99, 123, 123, 123, 174, 
	259, 99, 259, 51, 51, 52, 697, 123, 
	697, 99, 99, 99, 123, 123, 123, 174, 
	260, 99, 260, 51, 51, 52, 698, 123, 
	698, 99, 99, 99, 123, 123, 123, 174, 
	261, 99, 261, 51, 51, 52, 699, 123, 
	699, 99, 99, 99, 123, 123, 123, 174, 
	262, 99, 262, 51, 51, 52, 700, 123, 
	700, 99, 99, 99, 123, 123, 123, 174, 
	263, 99, 263, 51, 51, 52, 701, 123, 
	701, 99, 99, 99, 123, 123, 123, 174, 
	264, 99, 264, 51, 51, 52, 702, 123, 
	702, 99, 99, 99, 123, 123, 123, 174, 
	265, 99, 265, 51, 51, 52, 703, 123, 
	703, 99, 99, 99, 123, 123, 123, 174, 
	266, 99, 266, 51, 51, 52, 704, 123, 
	704, 99, 99, 99, 123, 123, 123, 174, 
	267, 99, 267, 51, 51, 52, 705, 123, 
	705, 99, 99, 99, 123, 123, 123, 174, 
	268, 99, 268, 51, 51, 52, 706, 123, 
	706, 99, 99, 99, 123, 123, 123, 174, 
	269, 99, 269, 51, 51, 52, 707, 123, 
	707, 99, 99, 99, 123, 123, 123, 174, 
	270, 99, 270, 51, 51, 52, 708, 123, 
	708, 99, 99, 99, 123, 123, 123, 174, 
	271, 99, 271, 51, 51, 52, 709, 123, 
	709, 99, 99, 99, 123, 123, 123, 174, 
	272, 99, 272, 51, 51, 52, 710, 123, 
	710, 99, 99, 99, 123, 123, 123, 174, 
	273, 99, 273, 51, 51, 52, 711, 123, 
	711, 99, 99, 99, 123, 123, 123, 174, 
	274, 99, 51, 51, 52, 123, 99, 99, 
	99, 123, 123, 123, 174, 276, 277, 278, 
	279, 280, 99, 277, 278, 279, 280, 51, 
	51, 52, 712, 713, 714, 715, 123, 712, 
	713, 714, 715, 99, 99, 99, 123, 123, 
	123, 275, 282, 99, 282, 51, 51, 52, 
	716, 123, 716, 99, 99, 99, 123, 123, 
	123, 281, 283, 99, 283, 51, 51, 52, 
	717, 123, 717, 99, 99, 99, 123, 123, 
	123, 174, 284, 99, 284, 51, 51, 52, 
	718, 123, 718, 99, 99, 99, 123, 123, 
	123, 174, 285, 99, 285, 51, 51, 52, 
	719, 123, 719, 99, 99, 99, 123, 123, 
	123, 174, 286, 99, 286, 51, 51, 52, 
	720, 123, 720, 99, 99, 99, 123, 123, 
	123, 174, 287, 99, 287, 51, 51, 52, 
	721, 123, 721, 99, 99, 99, 123, 123, 
	123, 174, 289, 290, 99, 289, 290, 51, 
	51, 52, 722, 723, 123, 722, 723, 99, 
	99, 99, 123, 123, 123, 288, 291, 99, 
	291, 51, 51, 52, 724, 123, 724, 99, 
	99, 99, 123, 123, 123, 174, 292, 99, 
	292, 51, 51, 52, 725, 123, 725, 99, 
	99, 99, 123, 123, 123, 174, 293, 99, 
	293, 51, 51, 52, 726, 123, 726, 99, 
	99, 99, 123, 123, 123, 174, 295, 296, 
	297, 99, 296, 297, 51, 51, 52, 727, 
	728, 123, 727, 728, 99, 99, 99, 123, 
	123, 123, 294, 298, 99, 298, 51, 51, 
	52, 729, 123, 729, 99, 99, 99, 123, 
	123, 123, 174, 299, 99, 299, 51, 51, 
	52, 730, 123, 730, 99, 99, 99, 123, 
	123, 123, 174, 301, 99, 301, 51, 51, 
	52, 731, 123, 731, 99, 99, 99, 123, 
	123, 123, 300, 302, 99, 302, 51, 51, 
	52, 732, 123, 732, 99, 99, 99, 123, 
	123, 123, 174, 303, 99, 303, 51, 51, 
	52, 733, 123, 733, 99, 99, 99, 123, 
	123, 123, 174, 304, 99, 304, 51, 51, 
	52, 734, 123, 734, 99, 99, 99, 123, 
	123, 123, 174, 305, 99, 305, 51, 51, 
	52, 735, 123, 735, 99, 99, 99, 123, 
	123, 123, 174, 306, 99, 306, 51, 51, 
	52, 736, 123, 736, 99, 99, 99, 123, 
	123, 123, 174, 307, 99, 307, 51, 51, 
	52, 737, 123, 737, 99, 99, 99, 123, 
	123, 123, 174, 308, 99, 308, 51, 51, 
	52, 738, 123, 738, 99, 99, 99, 123, 
	123, 123, 174, 310, 311, 312, 99, 311, 
	312, 51, 51, 52, 739, 740, 123, 739, 
	740, 99, 99, 99, 123, 123, 123, 309, 
	313, 99, 313, 51, 51, 52, 741, 123, 
	741, 99, 99, 99, 123, 123, 123, 174, 
	314, 99, 314, 51, 51, 52, 742, 123, 
	742, 99, 99, 99, 123, 123, 123, 174, 
	316, 99, 51, 51, 52, 123, 99, 99, 
	99, 123, 123, 123, 315, 318, 319, 320, 
	321, 322, 323, 324, 325, 326, 99, 318, 
	319, 320, 321, 322, 323, 324, 325, 326, 
	51, 51, 52, 743, 744, 745, 746, 747, 
	748, 749, 750, 751, 123, 743, 744, 745, 
	746, 747, 748, 749, 750, 751, 99, 99, 
	99, 123, 123, 123, 317, 327, 99, 327, 
	51, 51, 52, 752, 123, 752, 99, 99, 
	99, 123, 123, 123, 174, 328, 99, 328, 
	51, 51, 52, 753, 123, 753, 99, 99, 
	99, 123, 123, 123, 174, 330, 331, 99, 
	330, 331, 51, 51, 52, 754, 755, 123, 
	754, 755, 99, 99, 99, 123, 123, 123, 
	329, 332, 99, 332, 51, 51, 52, 756, 
	123, 756, 99, 99, 99, 123, 123, 123, 
	174, 333, 99, 333, 51, 51, 52, 757, 
	123, 757, 99, 99, 99, 123, 123, 123, 
	174, 334, 99, 334, 51, 51, 52, 758, 
	123, 758, 99, 99, 99, 123, 123, 123, 
	174, 335, 99, 335, 51, 51, 52, 759, 
	123, 759, 99, 99, 99, 123, 123, 123, 
	174, 336, 99, 336, 51, 51, 52, 760, 
	123, 760, 99, 99, 99, 123, 123, 123, 
	174, 337, 99, 337, 51, 51, 52, 761, 
	123, 761, 99, 99, 99, 123, 123, 123, 
	174, 339, 340, 341, 342, 343, 99, 340, 
	341, 342, 343, 51, 51, 762, 52, 763, 
	764, 765, 766, 123, 763, 764, 765, 766, 
	99, 99, 99, 123, 123, 123, 338, 345, 
	99, 345, 51, 51, 52, 767, 123, 767, 
	99, 99, 99, 123, 123, 123, 344, 346, 
	99, 346, 51, 51, 52, 768, 123, 768, 
	99, 99, 99, 123, 123, 123, 174, 347, 
	99, 347, 51, 51, 52, 769, 123, 769, 
	99, 99, 99, 123, 123, 123, 174, 348, 
	99, 348, 51, 51, 52, 770, 123, 770, 
	99, 99, 99, 123, 123, 123, 174, 350, 
	99, 350, 51, 51, 52, 771, 123, 771, 
	99, 99, 99, 123, 123, 123, 349, 352, 
	99, 352, 51, 51, 52, 772, 123, 772, 
	99, 99, 99, 123, 123, 123, 351, 353, 
	99, 353, 51, 51, 52, 773, 123, 773, 
	99, 99, 99, 123, 123, 123, 174, 354, 
	99, 354, 51, 51, 52, 774, 123, 774, 
	99, 99, 99, 123, 123, 123, 174, 355, 
	99, 355, 51, 51, 52, 775, 123, 775, 
	99, 99, 99, 123, 123, 123, 174, 356, 
	357, 99, 356, 357, 51, 51, 52, 776, 
	777, 123, 776, 777, 99, 99, 99, 123, 
	123, 123, 174, 359, 360, 99, 359, 360, 
	51, 51, 52, 778, 779, 123, 778, 779, 
	99, 99, 99, 123, 123, 123, 358, 361, 
	99, 361, 51, 51, 52, 780, 123, 780, 
	99, 99, 99, 123, 123, 123, 174, 362, 
	99, 362, 51, 51, 52, 781, 123, 781, 
	99, 99, 99, 123, 123, 123, 174, 363, 
	99, 363, 51, 51, 52, 782, 123, 782, 
	99, 99, 99, 123, 123, 123, 174, 364, 
	99, 364, 51, 51, 52, 783, 123, 783, 
	99, 99, 99, 123, 123, 123, 174, 366, 
	367, 99, 366, 367, 51, 51, 52, 784, 
	785, 123, 784, 785, 99, 99, 99, 123, 
	123, 123, 365, 369, 370, 99, 369, 370, 
	51, 51, 52, 786, 787, 123, 786, 787, 
	99, 99, 99, 123, 123, 123, 368, 371, 
	372, 99, 371, 372, 51, 51, 52, 788, 
	789, 123, 788, 789, 99, 99, 99, 123, 
	123, 123, 174, 374, 375, 376, 377, 378, 
	379, 99, 375, 376, 377, 378, 379, 51, 
	51, 52, 790, 791, 792, 793, 794, 123, 
	790, 791, 792, 793, 794, 99, 99, 99, 
	123, 123, 123, 373, 381, 382, 383, 99, 
	381, 382, 383, 51, 51, 52, 795, 796, 
	797, 123, 795, 796, 797, 99, 99, 99, 
	123, 123, 123, 380, 385, 386, 387, 99, 
	385, 386, 387, 51, 51, 52, 798, 799, 
	800, 123, 798, 799, 800, 99, 99, 99, 
	123, 123, 123, 384, 389, 99, 389, 51, 
	51, 52, 801, 123, 801, 99, 99, 99, 
	123, 123, 123, 388, 390, 99, 390, 51, 
	51, 52, 802, 123, 802, 99, 99, 99, 
	123, 123, 123, 174, 392, 393, 394, 99, 
	392, 393, 394, 51, 51, 52, 803, 804, 
	805, 123, 803, 804, 805, 99, 99, 99, 
	123, 123, 123, 391, 396, 397, 99, 396, 
	397, 51, 51, 52, 806, 807, 123, 806, 
	807, 99, 99, 99, 123, 123, 123, 395, 
	398, 99, 398, 51, 51, 52, 808, 123, 
	808, 99, 99, 99, 123, 123, 123, 174, 
	399, 99, 399, 51, 51, 52, 809, 123, 
	809, 99, 99, 99, 123, 123, 123, 174, 
	400, 99, 400, 51, 51, 52, 810, 123, 
	810, 99, 99, 99, 123, 123, 123, 174, 
	401, 99, 401, 51, 51, 52, 811, 123, 
	811, 99, 99, 99, 123, 123, 123, 174, 
	402, 99, 402, 51, 51, 52, 812, 123, 
	812, 99, 99, 99, 123, 123, 123, 174, 
	404, 99, 404, 51, 51, 52, 813, 123, 
	813, 99, 99, 99, 123, 123, 123, 403, 
	405, 99, 405, 51, 51, 52, 814, 123, 
	814, 99, 99, 99, 123, 123, 123, 174, 
	406, 99, 406, 51, 51, 52, 815, 123, 
	815, 99, 99, 99, 123, 123, 123, 174, 
	407, 408, 99, 407, 408, 51, 51, 52, 
	816, 817, 123, 816, 817, 99, 99, 99, 
	123, 123, 123, 174, 409, 99, 409, 51, 
	51, 52, 818, 123, 818, 99, 99, 99, 
	123, 123, 123, 174, 410, 411, 412, 99, 
	410, 411, 412, 51, 51, 52, 819, 820, 
	821, 123, 819, 820, 821, 99, 99, 99, 
	123, 123, 123, 174, 413, 414, 99, 413, 
	414, 51, 51, 52, 822, 823, 123, 822, 
	823, 99, 99, 99, 123, 123, 123, 174, 
	415, 99, 415, 51, 51, 52, 824, 123, 
	824, 99, 99, 99, 123, 123, 123, 174, 
	416, 417, 99, 416, 417, 51, 51, 52, 
	825, 826, 123, 825, 826, 99, 99, 99, 
	123, 123, 123, 174, 418, 99, 418, 51, 
	51, 52, 827, 123, 827, 99, 99, 99, 
	123, 123, 123, 174, 419, 99, 419, 51, 
	51, 52, 828, 123, 828, 99, 99, 99, 
	123, 123, 123, 174, 420, 421, 99, 420, 
	421, 51, 51, 52, 829, 830, 123, 829, 
	830, 99, 99, 99, 123, 123, 123, 174, 
	422, 99, 422, 51, 51, 52, 831, 123, 
	831, 99, 99, 99, 123, 123, 123, 174, 
	424, 425, 426, 427, 428, 99, 424, 425, 
	426, 427, 428, 51, 51, 52, 832, 833, 
	834, 835, 836, 123, 832, 833, 834, 835, 
	836, 99, 99, 99, 123, 123, 123, 423, 
	429, 99, 429, 51, 51, 52, 837, 123, 
	837, 99, 99, 99, 123, 123, 123, 174, 
	430, 99, 430, 51, 51, 52, 838, 123, 
	838, 99, 99, 99, 123, 123, 123, 174, 
	431, 99, 431, 51, 51, 52, 839, 123, 
	839, 99, 99, 99, 123, 123, 123, 174, 
	432, 99, 432, 51, 51, 52, 840, 123, 
	840, 99, 99, 99, 123, 123, 123, 174, 
	433, 99, 433, 51, 51, 52, 841, 123, 
	841, 99, 99, 99, 123, 123, 123, 174, 
	434, 99, 434, 51, 51, 52, 842, 123, 
	842, 99, 99, 99, 123, 123, 123, 174, 
	436, 437, 438, 439, 440, 441, 442, 443, 
	99, 51, 51, 843, 844, 845, 846, 847, 
	848, 849, 850, 52, 123, 99, 99, 99, 
	123, 123, 123, 435, 444, 99, 444, 51, 
	51, 52, 851, 123, 851, 99, 99, 99, 
	123, 123, 123, 174, 445, 99, 445, 51, 
	51, 52, 852, 123, 852, 99, 99, 99, 
	123, 123, 123, 174, 446, 99, 446, 51, 
	51, 52, 853, 123, 853, 99, 99, 99, 
	123, 123, 123, 174, 447, 99, 447, 51, 
	51, 52, 854, 123, 854, 99, 99, 99, 
	123, 123, 123, 174, 448, 99, 448, 51, 
	51, 52, 855, 123, 855, 99, 99, 99, 
	123, 123, 123, 174, 449, 450, 451, 452, 
	453, 99, 449, 450, 451, 452, 453, 51, 
	51, 52, 856, 857, 858, 859, 860, 123, 
	856, 857, 858, 859, 860, 99, 99, 99, 
	123, 123, 123, 174, 454, 455, 99, 454, 
	455, 51, 51, 52, 861, 862, 123, 861, 
	862, 99, 99, 99, 123, 123, 123, 174, 
	456, 99, 456, 51, 51, 52, 863, 123, 
	863, 99, 99, 99, 123, 123, 123, 174, 
	457, 99, 457, 51, 51, 52, 864, 123, 
	864, 99, 99, 99, 123, 123, 123, 174, 
	458, 99, 458, 51, 51, 52, 865, 123, 
	865, 99, 99, 99, 123, 123, 123, 174, 
	459, 99, 459, 51, 51, 52, 866, 123, 
	866, 99, 99, 99, 123, 123, 123, 174, 
	460, 99, 460, 51, 51, 52, 867, 123, 
	867, 99, 99, 99, 123, 123, 123, 174, 
	461, 462, 463, 99, 461, 462, 463, 51, 
	51, 52, 868, 869, 870, 123, 868, 869, 
	870, 99, 99, 99, 123, 123, 123, 174, 
	465, 99, 465, 51, 51, 52, 871, 123, 
	871, 99, 99, 99, 123, 123, 123, 464, 
	466, 467, 99, 466, 467, 51, 51, 52, 
	872, 873, 123, 872, 873, 99, 99, 99, 
	123, 123, 123, 174, 468, 469, 99, 468, 
	469, 51, 51, 52, 874, 875, 123, 874, 
	875, 99, 99, 99, 123, 123, 123, 174, 
	471, 99, 471, 51, 51, 52, 876, 123, 
	876, 99, 99, 99, 123, 123, 123, 470, 
	472, 473, 99, 472, 473, 51, 51, 52, 
	877, 878, 123, 877, 878, 99, 99, 99, 
	123, 123, 123, 174, 475, 99, 475, 51, 
	51, 52, 879, 123, 879, 99, 99, 99, 
	123, 123, 123, 474, 476, 99, 476, 51, 
	51, 52, 880, 123, 880, 99, 99, 99, 
	123, 123, 123, 174, 478, 479, 480, 99, 
	479, 480, 51, 51, 881, 52, 882, 883, 
	123, 882, 883, 99, 99, 99, 123, 123, 
	123, 477, 482, 99, 482, 51, 51, 52, 
	884, 123, 884, 99, 99, 99, 123, 123, 
	123, 481, 483, 99, 483, 51, 51, 52, 
	885, 123, 885, 99, 99, 99, 123, 123, 
	123, 174, 485, 486, 487, 488, 489, 99, 
	485, 486, 487, 488, 489, 51, 51, 52, 
	886, 887, 888, 889, 890, 123, 886, 887, 
	888, 889, 890, 99, 99, 99, 123, 123, 
	123, 484, 490, 99, 490, 51, 51, 52, 
	891, 123, 891, 99, 99, 99, 123, 123, 
	123, 174, 491, 99, 491, 51, 51, 52, 
	892, 123, 892, 99, 99, 99, 123, 123, 
	123, 174, 492, 99, 492, 51, 51, 52, 
	893, 123, 893, 99, 99, 99, 123, 123, 
	123, 174, 493, 99, 493, 51, 51, 52, 
	894, 123, 894, 99, 99, 99, 123, 123, 
	123, 174, 494, 99, 494, 51, 51, 52, 
	895, 123, 895, 99, 99, 99, 123, 123, 
	123, 174, 495, 99, 495, 51, 51, 52, 
	896, 123, 896, 99, 99, 99, 123, 123, 
	123, 174, 496, 497, 99, 496, 497, 51, 
	51, 52, 897, 898, 123, 897, 898, 99, 
	99, 99, 123, 123, 123, 174, 498, 99, 
	498, 51, 51, 52, 899, 123, 899, 99, 
	99, 99, 123, 123, 123, 174, 499, 99, 
	499, 51, 51, 52, 900, 123, 900, 99, 
	99, 99, 123, 123, 123, 174, 501, 99, 
	501, 51, 51, 52, 901, 123, 901, 99, 
	99, 99, 123, 123, 123, 500, 503, 99, 
	503, 51, 51, 52, 902, 123, 902, 99, 
	99, 99, 123, 123, 123, 502, 504, 505, 
	99, 504, 505, 51, 51, 52, 903, 904, 
	123, 903, 904, 99, 99, 99, 123, 123, 
	123, 174, 506, 99, 506, 51, 51, 52, 
	905, 123, 905, 99, 99, 99, 123, 123, 
	123, 174, 507, 99, 507, 51, 51, 52, 
	906, 123, 906, 99, 99, 99, 123, 123, 
	123, 174, 508, 99, 508, 51, 51, 52, 
	907, 123, 907, 99, 99, 99, 123, 123, 
	123, 174, 509, 99, 509, 51, 51, 52, 
	908, 123, 908, 99, 99, 99, 123, 123, 
	123, 174, 511, 512, 513, 514, 515, 99, 
	511, 512, 513, 514, 515, 51, 51, 52, 
	909, 910, 911, 912, 913, 123, 909, 910, 
	911, 912, 913, 99, 99, 99, 123, 123, 
	123, 510, 516, 99, 516, 51, 51, 52, 
	914, 123, 914, 99, 99, 99, 123, 123, 
	123, 174, 517, 99, 517, 51, 51, 52, 
	915, 123, 915, 99, 99, 99, 123, 123, 
	123, 174, 518, 99, 518, 51, 51, 52, 
	916, 123, 916, 99, 99, 99, 123, 123, 
	123, 174, 519, 99, 519, 51, 51, 52, 
	917, 123, 917, 99, 99, 99, 123, 123, 
	123, 174, 520, 521, 99, 520, 521, 51, 
	51, 52, 918, 919, 123, 918, 919, 99, 
	99, 99, 123, 123, 123, 174, 523, 524, 
	99, 523, 524, 51, 51, 52, 920, 921, 
	123, 920, 921, 99, 99, 99, 123, 123, 
	123, 522, 526, 527, 528, 99, 526, 527, 
	528, 51, 51, 52, 922, 923, 924, 123, 
	922, 923, 924, 99, 99, 99, 123, 123, 
	123, 525, 530, 99, 51, 51, 52, 123, 
	99, 99, 99, 123, 123, 123, 529, 532, 
	99, 532, 51, 51, 52, 925, 123, 925, 
	99, 99, 99, 123, 123, 123, 531, 534, 
	99, 51, 51, 52, 123, 99, 99, 99, 
	123, 123, 123, 533, 536, 537, 538, 99, 
	536, 537, 538, 51, 51, 52, 926, 927, 
	928, 123, 926, 927, 928, 99, 99, 99, 
	123, 123, 123, 535, 540, 99, 51, 51, 
	52, 123, 99, 99, 99, 123, 123, 123, 
	539, 542, 99, 542, 51, 51, 52, 929, 
	123, 929, 99, 99, 99, 123, 123, 123, 
	541, 544, 99, 51, 51, 52, 123, 99, 
	99, 99, 123, 123, 123, 543, 545, 99, 
	545, 51, 51, 52, 930, 123, 930, 99, 
	99, 99, 123, 123, 123, 174, 546, 547, 
	548, 549, 550, 551, 552, 553, 554, 99, 
	546, 547, 548, 549, 550, 551, 552, 553, 
	554, 51, 51, 52, 931, 932, 933, 934, 
	935, 936, 937, 938, 939, 123, 931, 932, 
	933, 934, 935, 936, 937, 938, 939, 99, 
	99, 99, 123, 123, 123, 174, 555, 99, 
	555, 51, 51, 52, 940, 123, 940, 99, 
	99, 99, 123, 123, 123, 174, 556, 99, 
	556, 51, 51, 52, 941, 123, 941, 99, 
	99, 99, 123, 123, 123, 174, 558, 99, 
	51, 51, 52, 123, 99, 99, 99, 123, 
	123, 123, 557, 559, 560, 99, 559, 560, 
	51, 51, 52, 942, 943, 123, 942, 943, 
	99, 99, 99, 123, 123, 123, 174, 561, 
	99, 561, 51, 51, 52, 944, 123, 944, 
	99, 99, 99, 123, 123, 123, 174, 562, 
	99, 562, 51, 51, 52, 945, 123, 945, 
	99, 99, 99, 123, 123, 123, 174, 563, 
	99, 563, 51, 51, 52, 946, 123, 946, 
	99, 99, 99, 123, 123, 123, 174, 564, 
	99, 564, 51, 51, 52, 947, 123, 947, 
	99, 99, 99, 123, 123, 123, 174, 566, 
	567, 99, 566, 567, 51, 51, 52, 948, 
	949, 123, 948, 949, 99, 99, 99, 123, 
	123, 123, 565, 568, 99, 568, 51, 51, 
	52, 950, 123, 950, 99, 99, 99, 123, 
	123, 123, 174, 569, 99, 569, 51, 51, 
	52, 951, 123, 951, 99, 99, 99, 123, 
	123, 123, 174, 570, 99, 570, 51, 51, 
	52, 952, 123, 952, 99, 99, 99, 123, 
	123, 123, 174, 571, 572, 573, 574, 99, 
	571, 572, 573, 574, 51, 51, 52, 953, 
	954, 955, 956, 123, 953, 954, 955, 956, 
	99, 99, 99, 123, 123, 123, 174, 575, 
	576, 99, 575, 576, 51, 51, 52, 957, 
	958, 123, 957, 958, 99, 99, 99, 123, 
	123, 123, 174, 578, 579, 99, 578, 579, 
	51, 51, 52, 959, 960, 123, 959, 960, 
	99, 99, 99, 123, 123, 123, 577, 580, 
	99, 580, 51, 51, 52, 961, 123, 961, 
	99, 99, 99, 123, 123, 123, 174, 581, 
	99, 581, 51, 51, 52, 962, 123, 962, 
	99, 99, 99, 123, 123, 123, 174, 582, 
	99, 582, 51, 51, 52, 963, 123, 963, 
	99, 99, 99, 123, 123, 123, 174, 583, 
	99, 583, 51, 51, 52, 964, 123, 964, 
	99, 99, 99, 123, 123, 123, 174, 585, 
	99, 585, 51, 51, 52, 965, 123, 965, 
	99, 99, 99, 123, 123, 123, 584, 586, 
	99, 586, 51, 51, 52, 966, 123, 966, 
	99, 99, 99, 123, 123, 123, 174, 587, 
	99, 587, 51, 51, 52, 967, 123, 967, 
	99, 99, 99, 123, 123, 123, 174, 588, 
	99, 588, 51, 51, 52, 968, 123, 968, 
	99, 99, 99, 123, 123, 123, 174, 589, 
	99, 589, 51, 51, 52, 969, 123, 969, 
	99, 99, 99, 123, 123, 123, 174, 590, 
	99, 590, 51, 51, 52, 970, 123, 970, 
	99, 99, 99, 123, 123, 123, 174, 591, 
	99, 591, 51, 51, 52, 971, 123, 971, 
	99, 99, 99, 123, 123, 123, 174, 592, 
	99, 592, 51, 51, 52, 972, 123, 972, 
	99, 99, 99, 123, 123, 123, 174, 593, 
	594, 99, 593, 594, 51, 51, 52, 973, 
	974, 123, 973, 974, 99, 99, 99, 123, 
	123, 123, 174, 595, 99, 595, 51, 51, 
	52, 975, 123, 975, 99, 99, 99, 123, 
	123, 123, 174, 596, 99, 596, 51, 51, 
	52, 976, 123, 976, 99, 99, 99, 123, 
	123, 123, 174, 597, 99, 597, 51, 51, 
	52, 977, 123, 977, 99, 99, 99, 123, 
	123, 123, 174, 599, 99, 599, 51, 51, 
	52, 978, 123, 978, 99, 99, 99, 123, 
	123, 123, 598, 600, 99, 600, 51, 51, 
	52, 979, 123, 979, 99, 99, 99, 123, 
	123, 123, 174, 601, 602, 99, 601, 602, 
	51, 51, 52, 980, 981, 123, 980, 981, 
	99, 99, 99, 123, 123, 123, 174, 603, 
	604, 99, 603, 604, 51, 51, 52, 982, 
	983, 123, 982, 983, 99, 99, 99, 123, 
	123, 123, 174, 605, 99, 605, 51, 51, 
	52, 984, 123, 984, 99, 99, 99, 123, 
	123, 123, 174, 606, 99, 606, 51, 51, 
	52, 985, 123, 985, 99, 99, 99, 123, 
	123, 123, 174, 607, 99, 607, 51, 51, 
	52, 986, 123, 986, 99, 99, 99, 123, 
	123, 123, 174, 608, 99, 608, 51, 51, 
	52, 987, 123, 987, 99, 99, 99, 123, 
	123, 123, 174, 609, 99, 609, 51, 51, 
	52, 988, 123, 988, 99, 99, 99, 123, 
	123, 123, 174, 610, 99, 610, 51, 51, 
	52, 989, 123, 989, 99, 99, 99, 123, 
	123, 123, 174, 611, 612, 613, 614, 615, 
	99, 611, 612, 613, 614, 615, 51, 51, 
	52, 990, 991, 992, 993, 994, 123, 990, 
	991, 992, 993, 994, 99, 99, 99, 123, 
	123, 123, 174, 616, 99, 616, 51, 51, 
	52, 995, 123, 995, 99, 99, 99, 123, 
	123, 123, 174, 617, 99, 617, 51, 51, 
	52, 996, 123, 996, 99, 99, 99, 123, 
	123, 123, 174, 618, 99, 618, 51, 51, 
	52, 997, 123, 997, 99, 99, 99, 123, 
	123, 123, 174, 619, 99, 619, 51, 51, 
	52, 998, 123, 998, 99, 99, 99, 123, 
	123, 123, 174, 620, 99, 620, 51, 51, 
	52, 999, 123, 999, 99, 99, 99, 123, 
	123, 123, 174, 621, 99, 621, 51, 51, 
	52, 1000, 123, 1000, 99, 99, 99, 123, 
	123, 123, 174, 622, 99, 622, 51, 51, 
	52, 1001, 123, 1001, 99, 99, 99, 123, 
	123, 123, 174, 623, 99, 623, 51, 51, 
	52, 1002, 123, 1002, 99, 99, 99, 123, 
	123, 123, 174, 0
};
static const short _lexer_trans_targs[] = {
	33, 2, 33, 33, 3, 4, 6, 7, 
	9, 11, 14, 5, 33, 33, 8, 33, 
	10, 33, 12, 13, 33, 33, 15, 33, 
	16, 33, 33, 46, 33, 19, 22, 24, 
	27, 20, 21, 33, 23, 33, 25, 26, 
	33, 28, 29, 33, 33, 33, 33, 33, 
	33, 31, 308, 32, 33, 33, 33, 34, 
	33, 33, 35, 36, 38, 33, 39, 33, 
	40, 33, 33, 33, 33, 0, 41, 42, 
	43, 33, 47, 48, 49, 50, 33, 36, 
	33, 33, 33, 33, 33, 51, 33, 33, 
	33, 52, 65, 73, 91, 112, 123, 129, 
	134, 138, 166, 53, 167, 192, 205, 212, 
	223, 240, 256, 284, 290, 53, 298, 53, 
	307, 309, 322, 330, 348, 369, 380, 386, 
	391, 395, 423, 310, 424, 449, 462, 469, 
	480, 497, 513, 541, 547, 310, 555, 310, 
	33, 33, 35, 1, 37, 33, 33, 33, 
	33, 33, 33, 33, 45, 17, 44, 33, 
	45, 33, 33, 33, 33, 33, 33, 33, 
	33, 33, 33, 33, 33, 33, 33, 33, 
	54, 55, 56, 57, 61, 62, 33, 53, 
	53, 53, 33, 33, 58, 60, 59, 53, 
	53, 53, 63, 64, 53, 33, 33, 66, 
	67, 71, 33, 33, 68, 53, 69, 70, 
	53, 72, 53, 33, 33, 74, 81, 83, 
	86, 87, 75, 76, 33, 77, 78, 79, 
	53, 80, 53, 82, 33, 33, 33, 84, 
	85, 53, 33, 53, 33, 53, 18, 88, 
	89, 90, 53, 33, 33, 92, 93, 53, 
	109, 111, 53, 33, 33, 53, 94, 104, 
	105, 53, 53, 95, 99, 53, 53, 53, 
	101, 53, 96, 97, 98, 53, 100, 53, 
	102, 103, 53, 53, 106, 107, 108, 53, 
	110, 53, 30, 33, 33, 113, 114, 116, 
	119, 33, 53, 115, 53, 117, 118, 53, 
	33, 120, 53, 121, 122, 53, 33, 33, 
	124, 128, 125, 126, 33, 127, 53, 53, 
	130, 131, 132, 133, 53, 33, 33, 135, 
	137, 136, 53, 33, 33, 33, 139, 141, 
	147, 53, 148, 158, 159, 164, 165, 140, 
	53, 33, 142, 144, 143, 53, 145, 146, 
	53, 53, 33, 53, 149, 153, 154, 155, 
	33, 150, 151, 152, 53, 33, 53, 33, 
	53, 156, 157, 53, 53, 53, 33, 160, 
	162, 161, 53, 163, 53, 33, 53, 53, 
	33, 53, 53, 53, 53, 33, 33, 168, 
	182, 53, 184, 53, 33, 169, 172, 179, 
	33, 170, 171, 53, 33, 53, 53, 33, 
	173, 178, 53, 33, 174, 53, 175, 176, 
	177, 53, 53, 33, 180, 181, 53, 53, 
	183, 53, 185, 187, 189, 186, 53, 53, 
	188, 53, 53, 190, 191, 53, 53, 33, 
	193, 197, 198, 200, 204, 194, 195, 196, 
	53, 53, 199, 33, 53, 53, 53, 53, 
	53, 53, 53, 53, 201, 202, 203, 53, 
	53, 53, 206, 211, 53, 53, 53, 207, 
	208, 209, 210, 53, 53, 213, 214, 219, 
	33, 53, 215, 217, 216, 53, 33, 53, 
	218, 53, 33, 53, 220, 33, 53, 53, 
	221, 33, 222, 53, 33, 53, 224, 227, 
	233, 235, 225, 226, 53, 228, 229, 230, 
	231, 232, 53, 53, 33, 234, 33, 53, 
	236, 239, 237, 238, 53, 53, 33, 241, 
	245, 247, 251, 255, 242, 243, 244, 53, 
	53, 246, 33, 53, 53, 33, 248, 249, 
	53, 33, 33, 33, 250, 33, 33, 33, 
	252, 253, 53, 33, 33, 33, 254, 33, 
	33, 53, 257, 258, 260, 269, 53, 270, 
	271, 274, 279, 53, 259, 33, 33, 261, 
	265, 262, 263, 264, 53, 33, 266, 267, 
	53, 268, 53, 53, 53, 53, 53, 53, 
	53, 33, 53, 272, 273, 53, 275, 276, 
	33, 277, 278, 53, 280, 281, 282, 283, 
	53, 285, 287, 286, 53, 288, 33, 289, 
	53, 291, 292, 53, 53, 293, 294, 295, 
	296, 297, 53, 299, 301, 303, 304, 305, 
	300, 53, 302, 53, 53, 53, 306, 53, 
	33, 33, 311, 312, 313, 314, 318, 319, 
	310, 310, 310, 315, 317, 316, 310, 310, 
	310, 320, 321, 310, 323, 324, 328, 325, 
	310, 326, 327, 310, 329, 310, 331, 338, 
	340, 343, 344, 332, 333, 334, 335, 336, 
	310, 337, 310, 339, 341, 342, 310, 310, 
	310, 345, 346, 347, 310, 349, 350, 310, 
	366, 368, 310, 310, 351, 361, 362, 310, 
	310, 352, 356, 310, 310, 310, 358, 310, 
	353, 354, 355, 310, 357, 310, 359, 360, 
	310, 310, 363, 364, 365, 310, 367, 310, 
	370, 371, 373, 376, 310, 372, 310, 374, 
	375, 310, 377, 310, 378, 379, 310, 381, 
	385, 382, 383, 384, 310, 310, 387, 388, 
	389, 390, 310, 392, 394, 393, 310, 396, 
	398, 404, 310, 405, 415, 416, 421, 422, 
	397, 310, 399, 401, 400, 310, 402, 403, 
	310, 310, 310, 406, 410, 411, 412, 407, 
	408, 409, 310, 310, 310, 413, 414, 310, 
	310, 310, 417, 419, 418, 310, 420, 310, 
	310, 310, 310, 310, 310, 310, 425, 439, 
	310, 441, 310, 426, 429, 436, 427, 428, 
	310, 310, 310, 430, 435, 310, 431, 310, 
	432, 433, 434, 310, 310, 437, 438, 310, 
	310, 440, 310, 442, 444, 446, 443, 310, 
	310, 445, 310, 310, 447, 448, 310, 310, 
	450, 454, 455, 457, 461, 451, 452, 453, 
	310, 310, 456, 310, 310, 310, 310, 310, 
	310, 310, 310, 458, 459, 460, 310, 310, 
	310, 463, 468, 310, 310, 310, 464, 465, 
	466, 467, 310, 310, 470, 471, 476, 310, 
	472, 474, 473, 310, 310, 475, 310, 310, 
	477, 310, 310, 478, 479, 310, 310, 481, 
	484, 490, 492, 482, 483, 310, 485, 486, 
	487, 488, 489, 310, 310, 491, 310, 493, 
	496, 494, 495, 310, 310, 498, 502, 504, 
	508, 512, 499, 500, 501, 310, 310, 503, 
	310, 310, 505, 506, 310, 507, 509, 510, 
	310, 511, 310, 514, 515, 517, 526, 310, 
	527, 528, 531, 536, 310, 516, 518, 522, 
	519, 520, 521, 310, 523, 524, 310, 525, 
	310, 310, 310, 310, 310, 310, 310, 310, 
	529, 530, 310, 532, 533, 534, 535, 310, 
	537, 538, 539, 540, 310, 542, 544, 543, 
	310, 545, 546, 310, 548, 549, 310, 310, 
	550, 551, 552, 553, 554, 310, 556, 558, 
	560, 561, 562, 557, 310, 559, 310, 310, 
	310, 563, 310
};
static const short _lexer_trans_actions[] = {
	299, 0, 131, 291, 0, 0, 0, 0, 
	0, 0, 0, 0, 83, 95, 0, 85, 
	0, 91, 0, 0, 87, 89, 0, 93, 
	0, 129, 297, 0, 295, 0, 0, 0, 
	0, 0, 0, 119, 0, 123, 0, 0, 
	121, 0, 0, 117, 97, 101, 103, 99, 
	293, 0, 0, 0, 127, 125, 7, 0, 
	135, 9, 934, 304, 0, 133, 5, 13, 
	0, 15, 17, 19, 23, 0, 922, 922, 
	922, 25, 0, 0, 0, 0, 41, 934, 
	43, 137, 45, 47, 51, 0, 55, 57, 
	21, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 919, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 340, 0, 310, 
	5, 370, 343, 316, 346, 349, 373, 919, 
	352, 376, 919, 919, 361, 328, 919, 919, 
	325, 382, 919, 919, 919, 340, 919, 310, 
	139, 33, 925, 0, 0, 289, 141, 11, 
	143, 145, 49, 283, 928, 0, 928, 287, 
	931, 285, 277, 149, 27, 29, 31, 151, 
	35, 153, 39, 37, 155, 53, 175, 71, 
	0, 0, 0, 0, 0, 0, 279, 418, 
	526, 529, 193, 81, 0, 0, 0, 424, 
	844, 532, 0, 0, 301, 165, 59, 0, 
	0, 0, 183, 75, 0, 535, 0, 0, 
	427, 0, 847, 157, 61, 0, 0, 0, 
	5, 0, 0, 0, 201, 0, 0, 0, 
	907, 0, 910, 0, 203, 105, 205, 0, 
	0, 559, 207, 550, 209, 556, 0, 0, 
	0, 0, 430, 167, 63, 0, 0, 568, 
	0, 5, 562, 185, 77, 565, 0, 0, 
	0, 433, 436, 0, 0, 445, 448, 451, 
	0, 457, 0, 0, 0, 439, 0, 442, 
	0, 0, 454, 421, 0, 0, 0, 460, 
	0, 571, 0, 169, 65, 0, 0, 0, 
	0, 211, 385, 0, 463, 0, 0, 466, 
	213, 0, 580, 0, 0, 469, 177, 73, 
	0, 0, 0, 0, 265, 0, 763, 913, 
	0, 0, 0, 0, 472, 171, 67, 0, 
	0, 0, 583, 187, 79, 179, 0, 0, 
	0, 586, 0, 0, 0, 0, 0, 0, 
	850, 199, 0, 0, 0, 478, 0, 0, 
	481, 379, 215, 814, 0, 0, 0, 0, 
	217, 0, 0, 0, 484, 219, 598, 221, 
	604, 0, 0, 916, 853, 856, 195, 0, 
	0, 0, 859, 0, 862, 189, 355, 364, 
	191, 358, 367, 607, 610, 173, 69, 0, 
	0, 334, 0, 331, 223, 0, 0, 0, 
	225, 0, 0, 748, 227, 751, 865, 229, 
	0, 0, 742, 231, 0, 745, 0, 0, 
	0, 754, 868, 275, 0, 0, 757, 487, 
	0, 490, 0, 0, 0, 0, 874, 880, 
	0, 877, 883, 0, 0, 496, 493, 163, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	766, 817, 0, 267, 790, 793, 796, 799, 
	802, 805, 808, 811, 0, 0, 0, 499, 
	886, 313, 0, 0, 337, 307, 628, 0, 
	0, 0, 0, 772, 631, 0, 0, 0, 
	233, 502, 0, 0, 0, 637, 269, 823, 
	0, 640, 271, 829, 0, 235, 832, 646, 
	0, 237, 0, 739, 161, 322, 0, 0, 
	0, 0, 0, 0, 505, 0, 0, 0, 
	0, 0, 778, 775, 159, 0, 239, 769, 
	0, 0, 0, 0, 508, 655, 181, 0, 
	0, 0, 0, 0, 0, 0, 0, 889, 
	658, 0, 241, 664, 667, 243, 0, 0, 
	682, 245, 107, 247, 0, 249, 109, 251, 
	0, 0, 697, 253, 111, 255, 0, 257, 
	113, 700, 0, 0, 0, 0, 406, 0, 
	0, 0, 0, 703, 0, 259, 115, 0, 
	0, 0, 0, 0, 511, 261, 0, 0, 
	781, 0, 892, 712, 718, 715, 835, 721, 
	724, 197, 727, 0, 0, 895, 0, 0, 
	263, 0, 0, 733, 0, 0, 0, 0, 
	898, 0, 0, 0, 784, 0, 273, 0, 
	841, 0, 0, 901, 904, 0, 0, 0, 
	0, 0, 514, 0, 0, 0, 0, 0, 
	0, 517, 0, 520, 730, 415, 0, 523, 
	147, 281, 919, 919, 403, 919, 919, 919, 
	418, 526, 529, 919, 919, 919, 424, 844, 
	532, 919, 919, 301, 388, 919, 919, 919, 
	535, 919, 919, 427, 919, 847, 919, 919, 
	544, 919, 919, 919, 538, 919, 919, 919, 
	907, 919, 910, 541, 547, 553, 559, 550, 
	556, 919, 919, 919, 430, 919, 391, 568, 
	919, 919, 562, 565, 919, 919, 919, 433, 
	436, 919, 919, 445, 448, 451, 919, 457, 
	919, 919, 919, 439, 919, 442, 919, 919, 
	454, 421, 919, 919, 919, 460, 919, 571, 
	574, 919, 919, 577, 385, 919, 463, 919, 
	919, 466, 919, 580, 919, 919, 469, 919, 
	919, 919, 760, 919, 763, 913, 919, 919, 
	919, 919, 472, 919, 394, 919, 583, 919, 
	475, 919, 586, 589, 919, 409, 397, 400, 
	919, 850, 919, 919, 919, 478, 919, 919, 
	481, 379, 814, 592, 595, 601, 919, 919, 
	919, 919, 484, 598, 604, 919, 919, 916, 
	853, 856, 919, 919, 919, 859, 919, 862, 
	355, 364, 358, 367, 607, 610, 613, 919, 
	334, 919, 331, 616, 622, 871, 619, 919, 
	748, 751, 865, 625, 919, 742, 919, 745, 
	919, 919, 919, 754, 868, 919, 919, 757, 
	487, 919, 490, 919, 919, 919, 919, 874, 
	880, 919, 877, 883, 919, 919, 496, 493, 
	919, 919, 919, 919, 919, 919, 919, 919, 
	766, 817, 787, 790, 793, 796, 799, 802, 
	805, 808, 811, 919, 919, 919, 499, 886, 
	313, 919, 919, 337, 307, 628, 919, 919, 
	919, 919, 772, 631, 634, 919, 919, 502, 
	919, 919, 820, 637, 823, 826, 640, 829, 
	643, 832, 646, 649, 919, 739, 322, 919, 
	919, 319, 919, 919, 919, 505, 919, 919, 
	919, 919, 919, 778, 775, 652, 769, 919, 
	919, 919, 919, 508, 655, 919, 919, 670, 
	685, 919, 919, 919, 919, 889, 658, 661, 
	664, 667, 673, 676, 682, 679, 688, 691, 
	697, 694, 700, 919, 919, 919, 919, 406, 
	919, 412, 919, 919, 703, 706, 919, 709, 
	919, 919, 919, 511, 919, 919, 781, 919, 
	892, 712, 718, 715, 835, 721, 724, 727, 
	919, 919, 895, 919, 736, 919, 919, 733, 
	919, 919, 919, 919, 898, 919, 919, 919, 
	784, 838, 919, 841, 919, 919, 901, 904, 
	919, 919, 919, 919, 919, 514, 919, 919, 
	919, 919, 919, 919, 517, 919, 520, 730, 
	415, 919, 523
};
static const short _lexer_to_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0
};
static const short _lexer_from_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 3, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0
};
static const short _lexer_eof_trans[] = {
	0, 1, 1, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	1, 27, 29, 29, 29, 29, 29, 29, 
	29, 29, 29, 29, 29, 29, 29, 49, 
	1, 0, 137, 1, 1, 142, 143, 145, 
	146, 148, 148, 148, 152, 1, 154, 155, 
	156, 160, 162, 165, 167, 1, 175, 175, 
	179, 175, 175, 175, 175, 175, 175, 175, 
	175, 190, 195, 175, 175, 175, 175, 175, 
	175, 204, 175, 175, 213, 175, 175, 175, 
	175, 175, 221, 223, 227, 229, 175, 175, 
	175, 175, 175, 236, 175, 244, 175, 175, 
	175, 175, 175, 175, 175, 175, 175, 175, 
	175, 175, 175, 175, 175, 175, 175, 175, 
	276, 282, 175, 175, 175, 175, 175, 289, 
	175, 175, 175, 295, 175, 175, 301, 175, 
	175, 175, 175, 175, 175, 175, 310, 175, 
	175, 316, 318, 175, 175, 330, 175, 175, 
	175, 175, 175, 175, 339, 345, 175, 175, 
	175, 350, 352, 175, 175, 175, 175, 359, 
	175, 175, 175, 175, 366, 369, 175, 374, 
	381, 385, 389, 175, 392, 396, 175, 175, 
	175, 175, 175, 404, 175, 175, 175, 175, 
	175, 175, 175, 175, 175, 175, 175, 175, 
	424, 175, 175, 175, 175, 175, 175, 436, 
	175, 175, 175, 175, 175, 175, 175, 175, 
	175, 175, 175, 175, 175, 465, 175, 175, 
	471, 175, 475, 175, 478, 482, 175, 485, 
	175, 175, 175, 175, 175, 175, 175, 175, 
	175, 501, 503, 175, 175, 175, 175, 175, 
	511, 175, 175, 175, 175, 175, 523, 526, 
	530, 532, 534, 536, 540, 542, 544, 175, 
	175, 175, 175, 558, 175, 175, 175, 175, 
	175, 566, 175, 175, 175, 175, 175, 578, 
	175, 175, 175, 175, 585, 175, 175, 175, 
	175, 175, 175, 175, 175, 175, 175, 175, 
	599, 175, 175, 175, 175, 175, 175, 175, 
	175, 175, 175, 175, 175, 175, 175, 175, 
	175, 175, 175, 625, 626, 167, 1, 175, 
	175, 179, 175, 175, 175, 175, 175, 175, 
	175, 175, 190, 195, 175, 175, 175, 175, 
	175, 175, 204, 175, 175, 213, 175, 175, 
	175, 175, 175, 221, 223, 227, 229, 175, 
	175, 175, 175, 175, 236, 175, 244, 175, 
	175, 175, 175, 175, 175, 175, 175, 175, 
	175, 175, 175, 175, 175, 175, 175, 175, 
	175, 276, 282, 175, 175, 175, 175, 175, 
	289, 175, 175, 175, 295, 175, 175, 301, 
	175, 175, 175, 175, 175, 175, 175, 310, 
	175, 175, 316, 318, 175, 175, 330, 175, 
	175, 175, 175, 175, 175, 339, 345, 175, 
	175, 175, 350, 352, 175, 175, 175, 175, 
	359, 175, 175, 175, 175, 366, 369, 175, 
	374, 381, 385, 389, 175, 392, 396, 175, 
	175, 175, 175, 175, 404, 175, 175, 175, 
	175, 175, 175, 175, 175, 175, 175, 175, 
	175, 424, 175, 175, 175, 175, 175, 175, 
	436, 175, 175, 175, 175, 175, 175, 175, 
	175, 175, 175, 175, 175, 175, 465, 175, 
	175, 471, 175, 475, 175, 478, 482, 175, 
	485, 175, 175, 175, 175, 175, 175, 175, 
	175, 175, 501, 503, 175, 175, 175, 175, 
	175, 511, 175, 175, 175, 175, 175, 523, 
	526, 530, 532, 534, 536, 540, 542, 544, 
	175, 175, 175, 175, 558, 175, 175, 175, 
	175, 175, 566, 175, 175, 175, 175, 175, 
	578, 175, 175, 175, 175, 585, 175, 175, 
	175, 175, 175, 175, 175, 175, 175, 175, 
	175, 599, 175, 175, 175, 175, 175, 175, 
	175, 175, 175, 175, 175, 175, 175, 175, 
	175, 175, 175, 175
};
static const int lexer_start = 33;
static const int lexer_error = 0;
static const int lexer_en_main = 33;
static void set_scan_buf( char *text, Bool _at_bol )
{
 str_set( input_buf, text );
 p = str_data(input_buf);
 at_bol = _at_bol;
 pe = str_data(input_buf) + str_len(input_buf);
 eof = pe;
	{
	cs = lexer_start;
	ts = 0;
	te = 0;
	act = 0;
	}
}
static tokid_t _scan_get( void )
{
	{
	int _klen;
	unsigned int _trans;
	short _widec;
	const short *_acts;
	unsigned int _nacts;
	const short *_keys;
	if ( p == pe )
		goto _test_eof;
	if ( cs == 0 )
		goto _out;
_resume:
	_acts = _lexer_actions + _lexer_from_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 1:
	{ts = p;}
	break;
		}
	}
	_widec = (*p);
	_klen = _lexer_cond_lengths[cs];
	_keys = _lexer_cond_keys + (_lexer_cond_offsets[cs]*2);
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;
			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				switch ( _lexer_cond_spaces[_lexer_cond_offsets[cs] + ((_mid - _keys)>>1)] ) {
	case 0: {
		_widec = (short)(128 + ((*p) - -128));
		if ( 
 at_bol  ) _widec += 256;
		break;
	}
				}
				break;
			}
		}
	}
	_keys = _lexer_trans_keys + _lexer_key_offsets[cs];
	_trans = _lexer_index_offsets[cs];
	_klen = _lexer_single_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;
			_mid = _lower + ((_upper-_lower) >> 1);
			if ( _widec < *_mid )
				_upper = _mid - 1;
			else if ( _widec > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}
	_klen = _lexer_range_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;
			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}
_match:
	_trans = _lexer_indicies[_trans];
_eof_trans:
	cs = _lexer_trans_targs[_trans];
	if ( _lexer_trans_actions[_trans] == 0 )
		goto _again;
	_acts = _lexer_actions + _lexer_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 2:
	{te = p+1;}
	break;
	case 3:
	{act = 1;}
	break;
	case 4:
	{act = 5;}
	break;
	case 5:
	{act = 37;}
	break;
	case 6:
	{act = 38;}
	break;
	case 7:
	{act = 39;}
	break;
	case 8:
	{act = 40;}
	break;
	case 9:
	{act = 41;}
	break;
	case 10:
	{act = 42;}
	break;
	case 11:
	{act = 43;}
	break;
	case 12:
	{act = 44;}
	break;
	case 13:
	{act = 45;}
	break;
	case 14:
	{act = 46;}
	break;
	case 15:
	{act = 47;}
	break;
	case 16:
	{act = 48;}
	break;
	case 17:
	{act = 49;}
	break;
	case 18:
	{act = 50;}
	break;
	case 19:
	{act = 51;}
	break;
	case 20:
	{act = 52;}
	break;
	case 21:
	{act = 53;}
	break;
	case 22:
	{act = 54;}
	break;
	case 23:
	{act = 55;}
	break;
	case 24:
	{act = 56;}
	break;
	case 25:
	{act = 57;}
	break;
	case 26:
	{act = 58;}
	break;
	case 27:
	{act = 59;}
	break;
	case 28:
	{act = 60;}
	break;
	case 29:
	{act = 61;}
	break;
	case 30:
	{act = 62;}
	break;
	case 31:
	{act = 63;}
	break;
	case 32:
	{act = 64;}
	break;
	case 33:
	{act = 65;}
	break;
	case 34:
	{act = 66;}
	break;
	case 35:
	{act = 67;}
	break;
	case 36:
	{act = 68;}
	break;
	case 37:
	{act = 69;}
	break;
	case 38:
	{act = 70;}
	break;
	case 39:
	{act = 71;}
	break;
	case 40:
	{act = 72;}
	break;
	case 41:
	{act = 73;}
	break;
	case 42:
	{act = 93;}
	break;
	case 43:
	{act = 94;}
	break;
	case 44:
	{act = 95;}
	break;
	case 45:
	{act = 96;}
	break;
	case 46:
	{act = 97;}
	break;
	case 47:
	{act = 98;}
	break;
	case 48:
	{act = 99;}
	break;
	case 49:
	{act = 100;}
	break;
	case 50:
	{act = 101;}
	break;
	case 51:
	{act = 102;}
	break;
	case 52:
	{act = 103;}
	break;
	case 53:
	{act = 104;}
	break;
	case 54:
	{act = 105;}
	break;
	case 55:
	{act = 106;}
	break;
	case 56:
	{act = 107;}
	break;
	case 57:
	{act = 108;}
	break;
	case 58:
	{act = 109;}
	break;
	case 59:
	{act = 110;}
	break;
	case 60:
	{act = 111;}
	break;
	case 61:
	{act = 112;}
	break;
	case 62:
	{act = 113;}
	break;
	case 63:
	{act = 114;}
	break;
	case 64:
	{act = 115;}
	break;
	case 65:
	{act = 116;}
	break;
	case 66:
	{act = 117;}
	break;
	case 67:
	{act = 118;}
	break;
	case 68:
	{act = 119;}
	break;
	case 69:
	{act = 120;}
	break;
	case 70:
	{act = 121;}
	break;
	case 71:
	{act = 122;}
	break;
	case 72:
	{act = 123;}
	break;
	case 73:
	{act = 124;}
	break;
	case 74:
	{act = 125;}
	break;
	case 75:
	{act = 126;}
	break;
	case 76:
	{act = 127;}
	break;
	case 77:
	{act = 128;}
	break;
	case 78:
	{act = 133;}
	break;
	case 79:
	{act = 134;}
	break;
	case 80:
	{act = 135;}
	break;
	case 81:
	{act = 136;}
	break;
	case 82:
	{act = 137;}
	break;
	case 83:
	{act = 138;}
	break;
	case 84:
	{act = 140;}
	break;
	case 85:
	{act = 141;}
	break;
	case 86:
	{act = 142;}
	break;
	case 87:
	{act = 143;}
	break;
	case 88:
	{act = 144;}
	break;
	case 89:
	{act = 145;}
	break;
	case 90:
	{act = 146;}
	break;
	case 91:
	{act = 147;}
	break;
	case 92:
	{act = 148;}
	break;
	case 93:
	{act = 149;}
	break;
	case 94:
	{act = 150;}
	break;
	case 95:
	{act = 151;}
	break;
	case 96:
	{act = 152;}
	break;
	case 97:
	{act = 153;}
	break;
	case 98:
	{act = 154;}
	break;
	case 99:
	{act = 155;}
	break;
	case 100:
	{act = 156;}
	break;
	case 101:
	{act = 157;}
	break;
	case 102:
	{act = 158;}
	break;
	case 103:
	{act = 159;}
	break;
	case 104:
	{act = 160;}
	break;
	case 105:
	{act = 161;}
	break;
	case 106:
	{act = 162;}
	break;
	case 107:
	{act = 163;}
	break;
	case 108:
	{act = 164;}
	break;
	case 109:
	{act = 165;}
	break;
	case 110:
	{act = 166;}
	break;
	case 111:
	{act = 167;}
	break;
	case 112:
	{act = 168;}
	break;
	case 113:
	{act = 169;}
	break;
	case 114:
	{act = 170;}
	break;
	case 115:
	{act = 171;}
	break;
	case 116:
	{act = 172;}
	break;
	case 117:
	{act = 173;}
	break;
	case 118:
	{act = 174;}
	break;
	case 119:
	{act = 175;}
	break;
	case 120:
	{act = 176;}
	break;
	case 121:
	{act = 177;}
	break;
	case 122:
	{act = 178;}
	break;
	case 123:
	{act = 179;}
	break;
	case 124:
	{act = 180;}
	break;
	case 125:
	{act = 181;}
	break;
	case 126:
	{act = 182;}
	break;
	case 127:
	{act = 183;}
	break;
	case 128:
	{act = 185;}
	break;
	case 129:
	{act = 186;}
	break;
	case 130:
	{act = 188;}
	break;
	case 131:
	{act = 189;}
	break;
	case 132:
	{act = 190;}
	break;
	case 133:
	{act = 192;}
	break;
	case 134:
	{act = 193;}
	break;
	case 135:
	{act = 195;}
	break;
	case 136:
	{act = 196;}
	break;
	case 137:
	{act = 197;}
	break;
	case 138:
	{act = 198;}
	break;
	case 139:
	{act = 200;}
	break;
	case 140:
	{act = 201;}
	break;
	case 141:
	{act = 202;}
	break;
	case 142:
	{act = 203;}
	break;
	case 143:
	{act = 204;}
	break;
	case 144:
	{act = 205;}
	break;
	case 145:
	{act = 206;}
	break;
	case 146:
	{act = 207;}
	break;
	case 147:
	{act = 208;}
	break;
	case 148:
	{act = 209;}
	break;
	case 149:
	{act = 210;}
	break;
	case 150:
	{act = 211;}
	break;
	case 151:
	{act = 212;}
	break;
	case 152:
	{act = 213;}
	break;
	case 153:
	{act = 214;}
	break;
	case 154:
	{act = 215;}
	break;
	case 155:
	{act = 216;}
	break;
	case 156:
	{act = 217;}
	break;
	case 157:
	{act = 218;}
	break;
	case 158:
	{act = 219;}
	break;
	case 159:
	{act = 220;}
	break;
	case 160:
	{act = 221;}
	break;
	case 161:
	{act = 222;}
	break;
	case 162:
	{act = 223;}
	break;
	case 163:
	{act = 224;}
	break;
	case 164:
	{act = 225;}
	break;
	case 165:
	{act = 226;}
	break;
	case 166:
	{act = 227;}
	break;
	case 167:
	{act = 228;}
	break;
	case 168:
	{act = 229;}
	break;
	case 169:
	{act = 230;}
	break;
	case 170:
	{act = 231;}
	break;
	case 171:
	{act = 232;}
	break;
	case 172:
	{act = 233;}
	break;
	case 173:
	{act = 234;}
	break;
	case 174:
	{act = 239;}
	break;
	case 175:
	{act = 240;}
	break;
	case 176:
	{act = 241;}
	break;
	case 177:
	{act = 242;}
	break;
	case 178:
	{act = 243;}
	break;
	case 179:
	{act = 244;}
	break;
	case 180:
	{act = 245;}
	break;
	case 181:
	{act = 246;}
	break;
	case 182:
	{act = 247;}
	break;
	case 183:
	{act = 248;}
	break;
	case 184:
	{act = 249;}
	break;
	case 185:
	{act = 250;}
	break;
	case 186:
	{act = 251;}
	break;
	case 187:
	{act = 252;}
	break;
	case 188:
	{act = 253;}
	break;
	case 189:
	{act = 254;}
	break;
	case 190:
	{act = 255;}
	break;
	case 191:
	{act = 256;}
	break;
	case 192:
	{act = 257;}
	break;
	case 193:
	{act = 258;}
	break;
	case 194:
	{act = 259;}
	break;
	case 195:
	{act = 260;}
	break;
	case 196:
	{act = 261;}
	break;
	case 197:
	{act = 262;}
	break;
	case 198:
	{act = 263;}
	break;
	case 199:
	{act = 264;}
	break;
	case 200:
	{act = 265;}
	break;
	case 201:
	{act = 266;}
	break;
	case 202:
	{act = 267;}
	break;
	case 203:
	{act = 268;}
	break;
	case 204:
	{act = 269;}
	break;
	case 205:
	{act = 270;}
	break;
	case 206:
	{act = 271;}
	break;
	case 207:
	{act = 272;}
	break;
	case 208:
	{act = 273;}
	break;
	case 209:
	{act = 276;}
	break;
	case 210:
	{act = 278;}
	break;
	case 211:
	{act = 280;}
	break;
	case 212:
	{act = 282;}
	break;
	case 213:
	{act = 284;}
	break;
	case 214:
	{act = 288;}
	break;
	case 215:
	{te = p+1;{
	sym.tok = TK_NEWLINE;
	;
	{p++; goto _out; }
}}
	break;
	case 216:
	{te = p+1;{
	sym.tok = TK_CONST_EXPR;
	;
	{p++; goto _out; }
}}
	break;
	case 217:
	{te = p+1;{
	sym.tok = TK_LOG_AND;
	;
	{p++; goto _out; }
}}
	break;
	case 218:
	{te = p+1;{
	sym.tok = TK_RPAREN;
	;
	{p++; goto _out; }
}}
	break;
	case 219:
	{te = p+1;{
	sym.tok = TK_PLUS;
	;
	{p++; goto _out; }
}}
	break;
	case 220:
	{te = p+1;{
	sym.tok = TK_COMMA;
	;
	{p++; goto _out; }
}}
	break;
	case 221:
	{te = p+1;{
	sym.tok = TK_MINUS;
	;
	{p++; goto _out; }
}}
	break;
	case 222:
	{te = p+1;{
	sym.tok = TK_DOT;
	;
	{p++; goto _out; }
}}
	break;
	case 223:
	{te = p+1;{
	sym.tok = TK_DIVIDE;
	;
	{p++; goto _out; }
}}
	break;
	case 224:
	{te = p+1;{
	sym.tok = TK_COLON;
	;
	{p++; goto _out; }
}}
	break;
	case 225:
	{te = p+1;{
	sym.tok = TK_LEFT_SHIFT;
	;
	{p++; goto _out; }
}}
	break;
	case 226:
	{te = p+1;{
	sym.tok = TK_LESS_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 227:
	{te = p+1;{
	sym.tok = TK_NOT_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 228:
	{te = p+1;{
	sym.tok = TK_NOT_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 229:
	{te = p+1;{
	sym.tok = TK_EQUAL;
	;
	{p++; goto _out; }
}}
	break;
	case 230:
	{te = p+1;{
	sym.tok = TK_RIGHT_SHIFT;
	;
	{p++; goto _out; }
}}
	break;
	case 231:
	{te = p+1;{
	sym.tok = TK_GREATER_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 232:
	{te = p+1;{
	sym.tok = TK_QUESTION;
	;
	{p++; goto _out; }
}}
	break;
	case 233:
	{te = p+1;{
	sym.tok = TK_LSQUARE;
	;
	{p++; goto _out; }
}}
	break;
	case 234:
	{te = p+1;{
	sym.tok = TK_RSQUARE;
	;
	{p++; goto _out; }
}}
	break;
	case 235:
	{te = p+1;{
	sym.tok = TK_BIN_XOR;
	;
	{p++; goto _out; }
}}
	break;
	case 236:
	{te = p+1;{
	sym.tok = TK_POWER;
	;
	{p++; goto _out; }
}}
	break;
	case 237:
	{te = p+1;{
	sym.tok = TK_LCURLY;
	;
	{p++; goto _out; }
}}
	break;
	case 238:
	{te = p+1;{
	sym.tok = TK_LOG_OR;
	;
	{p++; goto _out; }
}}
	break;
	case 239:
	{te = p+1;{
	sym.tok = TK_RCURLY;
	;
	{p++; goto _out; }
}}
	break;
	case 240:
	{te = p+1;{
	sym.tok = TK_BIN_NOT;
	;
	{p++; goto _out; }
}}
	break;
	case 241:
	{te = p+1;{
	sym.tok = TK_B1;
	;
	{p++; goto _out; }
}}
	break;
	case 242:
	{te = p+1;{
	sym.tok = TK_C1;
	;
	{p++; goto _out; }
}}
	break;
	case 243:
	{te = p+1;{
	sym.tok = TK_D1;
	;
	{p++; goto _out; }
}}
	break;
	case 244:
	{te = p+1;{
	sym.tok = TK_E1;
	;
	{p++; goto _out; }
}}
	break;
	case 245:
	{te = p+1;{
	sym.tok = TK_H1;
	;
	{p++; goto _out; }
}}
	break;
	case 246:
	{te = p+1;{
	sym.tok = TK_L1;
	;
	{p++; goto _out; }
}}
	break;
	case 247:
	{te = p+1;{
	sym.tok = TK_A1;
	;
	{p++; goto _out; }
}}
	break;
	case 248:
	{te = p+1;{
	sym.tok = TK_F1;
	;
	{p++; goto _out; }
}}
	break;
	case 249:
	{te = p+1;{
	sym.tok = TK_BC1;
	;
	{p++; goto _out; }
}}
	break;
	case 250:
	{te = p+1;{
	sym.tok = TK_DE1;
	;
	{p++; goto _out; }
}}
	break;
	case 251:
	{te = p+1;{
	sym.tok = TK_HL1;
	;
	{p++; goto _out; }
}}
	break;
	case 252:
	{te = p+1;{
	sym.tok = TK_AF1;
	;
	{p++; goto _out; }
}}
	break;
	case 253:
	{te = p+1;{
	sym.tok = TK_IND_BC;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 254:
	{te = p+1;{
	sym.tok = TK_IND_DE;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 255:
	{te = p+1;{
	sym.tok = TK_IND_IX;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 256:
	{te = p+1;{
	sym.tok = TK_IND_IY;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 257:
	{te = p+1;{
	sym.tok = TK_IND_HL;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 258:
	{te = p+1;{
	sym.tok = TK_IND_SP;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 259:
	{te = p+1;{
	sym.tok = TK_IND_C;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 260:
	{te = p+1;{
	sym.tok = TK_DS_B;
	;
	{p++; goto _out; }
}}
	break;
	case 261:
	{te = p+1;{
	sym.tok = TK_DS_W;
	;
	{p++; goto _out; }
}}
	break;
	case 262:
	{te = p+1;{
	sym.tok = TK_DS_P;
	;
	{p++; goto _out; }
}}
	break;
	case 263:
	{te = p+1;{
	sym.tok = TK_DS_Q;
	;
	{p++; goto _out; }
}}
	break;
	case 264:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CCF1;
		sym.tok_opcode = TK_CCF1;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CCF1;
	}
	{p++; goto _out; }
}}
	break;
	case 265:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RLA1;
		sym.tok_opcode = TK_RLA1;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLA1;
	}
	{p++; goto _out; }
}}
	break;
	case 266:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RLCA1;
		sym.tok_opcode = TK_RLCA1;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLCA1;
	}
	{p++; goto _out; }
}}
	break;
	case 267:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RRA1;
		sym.tok_opcode = TK_RRA1;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRA1;
	}
	{p++; goto _out; }
}}
	break;
	case 268:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RRCA1;
		sym.tok_opcode = TK_RRCA1;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRCA1;
	}
	{p++; goto _out; }
}}
	break;
	case 269:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_SCF1;
		sym.tok_opcode = TK_SCF1;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SCF1;
	}
	{p++; goto _out; }
}}
	break;
	case 270:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_WAIT;
		sym.tok_opcode = TK_CU_WAIT;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_WAIT;
	}
	{p++; goto _out; }
}}
	break;
	case 271:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_MOVE;
		sym.tok_opcode = TK_CU_MOVE;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_MOVE;
	}
	{p++; goto _out; }
}}
	break;
	case 272:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_STOP;
		sym.tok_opcode = TK_CU_STOP;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_STOP;
	}
	{p++; goto _out; }
}}
	break;
	case 273:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_NOP;
		sym.tok_opcode = TK_CU_NOP;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_NOP;
	}
	{p++; goto _out; }
}}
	break;
	case 274:
	{te = p+1;}
	break;
	case 275:
	{te = p+1;{
  while ( ts[ 0] == '.' || isspace(ts[ 0]) ) ts++;
  while ( te[-1] == ':' || isspace(te[-1]) ) te--;
  sym.tok = TK_LABEL;
  {p++; goto _out; }
 }}
	break;
	case 276:
	{te = p+1;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts - 1, 16 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 277:
	{te = p+1;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 2, te - ts - 3, 2 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 278:
	{te = p+1;{
  sym.tok = TK_NUMBER;
  sym.number = 0;
  if ( get_sym_string() )
  {
   STR_DEFINE(string, STR_SIZE);
   str_set_bytes(string, ts, te-ts);
   str_compress_escapes(string);
   if (str_len(string) == 1)
    sym.number = str_data(string)[0];
   else
    error_invalid_squoted_string();
   STR_DELETE(string);
  }
  else
  {
   error_invalid_squoted_string();
  }
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 279:
	{te = p+1;{
  sym.tok = TK_STRING;
  if ( ! get_sym_string() )
   error_unclosed_string();
  {p++; goto _out; }
 }}
	break;
	case 280:
	{te = p+1;{
  sym.tok = TK_NIL;
  skip_to_newline();
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 281:
	{te = p;p--;{
	sym.tok = TK_LOG_NOT;
	;
	{p++; goto _out; }
}}
	break;
	case 282:
	{te = p;p--;{
	sym.tok = TK_BIN_AND;
	;
	{p++; goto _out; }
}}
	break;
	case 283:
	{te = p;p--;{
	sym.tok = TK_LPAREN;
	;
	{p++; goto _out; }
}}
	break;
	case 284:
	{te = p;p--;{
	sym.tok = TK_MULTIPLY;
	;
	{p++; goto _out; }
}}
	break;
	case 285:
	{te = p;p--;{
	sym.tok = TK_DOT;
	;
	{p++; goto _out; }
}}
	break;
	case 286:
	{te = p;p--;{
	sym.tok = TK_LESS;
	;
	{p++; goto _out; }
}}
	break;
	case 287:
	{te = p;p--;{
	sym.tok = TK_EQUAL;
	;
	{p++; goto _out; }
}}
	break;
	case 288:
	{te = p;p--;{
	sym.tok = TK_GREATER;
	;
	{p++; goto _out; }
}}
	break;
	case 289:
	{te = p;p--;{
	sym.tok = TK_BIN_OR;
	;
	{p++; goto _out; }
}}
	break;
	case 290:
	{te = p;p--;{
	sym.tok = TK_C;
	;
	{p++; goto _out; }
}}
	break;
	case 291:
	{te = p;p--;{
	sym.tok = TK_PO;
	;
	{p++; goto _out; }
}}
	break;
	case 292:
	{te = p;p--;{
	sym.tok = TK_P;
	;
	{p++; goto _out; }
}}
	break;
	case 293:
	{te = p;p--;{
	sym.tok = TK_M;
	;
	{p++; goto _out; }
}}
	break;
	case 294:
	{te = p;p--;{
	sym.tok = TK_B;
	;
	{p++; goto _out; }
}}
	break;
	case 295:
	{te = p;p--;{
	sym.tok = TK_D;
	;
	{p++; goto _out; }
}}
	break;
	case 296:
	{te = p;p--;{
	sym.tok = TK_E;
	;
	{p++; goto _out; }
}}
	break;
	case 297:
	{te = p;p--;{
	sym.tok = TK_H;
	;
	{p++; goto _out; }
}}
	break;
	case 298:
	{te = p;p--;{
	sym.tok = TK_L;
	;
	{p++; goto _out; }
}}
	break;
	case 299:
	{te = p;p--;{
	sym.tok = TK_A;
	;
	{p++; goto _out; }
}}
	break;
	case 300:
	{te = p;p--;{
	sym.tok = TK_F;
	;
	{p++; goto _out; }
}}
	break;
	case 301:
	{te = p;p--;{
	sym.tok = TK_I;
	;
	{p++; goto _out; }
}}
	break;
	case 302:
	{te = p;p--;{
	sym.tok = TK_R;
	;
	{p++; goto _out; }
}}
	break;
	case 303:
	{te = p;p--;{
	sym.tok = TK_BC;
	;
	{p++; goto _out; }
}}
	break;
	case 304:
	{te = p;p--;{
	sym.tok = TK_DE;
	;
	{p++; goto _out; }
}}
	break;
	case 305:
	{te = p;p--;{
	sym.tok = TK_HL;
	;
	{p++; goto _out; }
}}
	break;
	case 306:
	{te = p;p--;{
	sym.tok = TK_IX;
	;
	{p++; goto _out; }
}}
	break;
	case 307:
	{te = p;p--;{
	sym.tok = TK_IY;
	;
	{p++; goto _out; }
}}
	break;
	case 308:
	{te = p;p--;{
	sym.tok = TK_AF;
	;
	{p++; goto _out; }
}}
	break;
	case 309:
	{te = p;p--;{
	sym.tok = TK_IP;
	;
	{p++; goto _out; }
}}
	break;
	case 310:
	{te = p;p--;{
	sym.tok = TK_SU;
	;
	{p++; goto _out; }
}}
	break;
	case 311:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_IF;
		sym.tok_opcode = TK_IF;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IF;
	}
	{p++; goto _out; }
}}
	break;
	case 312:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CALL;
		sym.tok_opcode = TK_CALL;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL;
	}
	{p++; goto _out; }
}}
	break;
	case 313:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CCF;
		sym.tok_opcode = TK_CCF;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CCF;
	}
	{p++; goto _out; }
}}
	break;
	case 314:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CP;
		sym.tok_opcode = TK_CP;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CP;
	}
	{p++; goto _out; }
}}
	break;
	case 315:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CPD;
		sym.tok_opcode = TK_CPD;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPD;
	}
	{p++; goto _out; }
}}
	break;
	case 316:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CPI;
		sym.tok_opcode = TK_CPI;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPI;
	}
	{p++; goto _out; }
}}
	break;
	case 317:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_EI;
		sym.tok_opcode = TK_EI;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EI;
	}
	{p++; goto _out; }
}}
	break;
	case 318:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_EX;
		sym.tok_opcode = TK_EX;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EX;
	}
	{p++; goto _out; }
}}
	break;
	case 319:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_IN;
		sym.tok_opcode = TK_IN;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IN;
	}
	{p++; goto _out; }
}}
	break;
	case 320:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_INC;
		sym.tok_opcode = TK_INC;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INC;
	}
	{p++; goto _out; }
}}
	break;
	case 321:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_IND;
		sym.tok_opcode = TK_IND;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IND;
	}
	{p++; goto _out; }
}}
	break;
	case 322:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_INI;
		sym.tok_opcode = TK_INI;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INI;
	}
	{p++; goto _out; }
}}
	break;
	case 323:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LD;
		sym.tok_opcode = TK_LD;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LD;
	}
	{p++; goto _out; }
}}
	break;
	case 324:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDD;
		sym.tok_opcode = TK_LDD;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDD;
	}
	{p++; goto _out; }
}}
	break;
	case 325:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDDR;
		sym.tok_opcode = TK_LDDR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDR;
	}
	{p++; goto _out; }
}}
	break;
	case 326:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDI;
		sym.tok_opcode = TK_LDI;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDI;
	}
	{p++; goto _out; }
}}
	break;
	case 327:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDIR;
		sym.tok_opcode = TK_LDIR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIR;
	}
	{p++; goto _out; }
}}
	break;
	case 328:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OR;
		sym.tok_opcode = TK_OR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OR;
	}
	{p++; goto _out; }
}}
	break;
	case 329:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OUT;
		sym.tok_opcode = TK_OUT;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUT;
	}
	{p++; goto _out; }
}}
	break;
	case 330:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OUTI;
		sym.tok_opcode = TK_OUTI;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTI;
	}
	{p++; goto _out; }
}}
	break;
	case 331:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_POP;
		sym.tok_opcode = TK_POP;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_POP;
	}
	{p++; goto _out; }
}}
	break;
	case 332:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RET;
		sym.tok_opcode = TK_RET;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RET;
	}
	{p++; goto _out; }
}}
	break;
	case 333:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RL;
		sym.tok_opcode = TK_RL;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RL;
	}
	{p++; goto _out; }
}}
	break;
	case 334:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RLA;
		sym.tok_opcode = TK_RLA;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLA;
	}
	{p++; goto _out; }
}}
	break;
	case 335:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RLC;
		sym.tok_opcode = TK_RLC;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLC;
	}
	{p++; goto _out; }
}}
	break;
	case 336:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RLCA;
		sym.tok_opcode = TK_RLCA;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLCA;
	}
	{p++; goto _out; }
}}
	break;
	case 337:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RR;
		sym.tok_opcode = TK_RR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RR;
	}
	{p++; goto _out; }
}}
	break;
	case 338:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RRA;
		sym.tok_opcode = TK_RRA;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRA;
	}
	{p++; goto _out; }
}}
	break;
	case 339:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RRC;
		sym.tok_opcode = TK_RRC;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRC;
	}
	{p++; goto _out; }
}}
	break;
	case 340:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RRCA;
		sym.tok_opcode = TK_RRCA;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRCA;
	}
	{p++; goto _out; }
}}
	break;
	case 341:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_SCF;
		sym.tok_opcode = TK_SCF;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SCF;
	}
	{p++; goto _out; }
}}
	break;
	case 342:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_SET;
		sym.tok_opcode = TK_SET;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SET;
	}
	{p++; goto _out; }
}}
	break;
	case 343:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_SWAP;
		sym.tok_opcode = TK_SWAP;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SWAP;
	}
	{p++; goto _out; }
}}
	break;
	case 344:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_FILL;
		sym.tok_opcode = TK_FILL;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FILL;
	}
	{p++; goto _out; }
}}
	break;
	case 345:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_MMU;
		sym.tok_opcode = TK_MMU;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU;
	}
	{p++; goto _out; }
}}
	break;
	case 346:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OTDM;
		sym.tok_opcode = TK_OTDM;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDM;
	}
	{p++; goto _out; }
}}
	break;
	case 347:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OTIM;
		sym.tok_opcode = TK_OTIM;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIM;
	}
	{p++; goto _out; }
}}
	break;
	case 348:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_TST;
		sym.tok_opcode = TK_TST;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TST;
	}
	{p++; goto _out; }
}}
	break;
	case 349:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDP;
		sym.tok_opcode = TK_LDP;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDP;
	}
	{p++; goto _out; }
}}
	break;
	case 350:
	{te = p;p--;}
	break;
	case 351:
	{te = p;p--;{
  sym.tok = TK_NAME;
  {p++; goto _out; }
 }}
	break;
	case 352:
	{te = p;p--;{
  while ( ts[ 0] == '.' || isspace(ts[ 0]) ) ts++;
  while ( te[-1] == ':' || isspace(te[-1]) ) te--;
  sym.tok = TK_LABEL;
  {p++; goto _out; }
 }}
	break;
	case 353:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts, 10 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 354:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 2, te - ts - 2, 16 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 355:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts - 1, 2 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 356:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 1, te - ts - 1, 2 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 357:
	{{p = ((te))-1;}{
	sym.tok = TK_LPAREN;
	;
	{p++; goto _out; }
}}
	break;
	case 358:
	{{p = ((te))-1;}{
	sym.tok = TK_DOT;
	;
	{p++; goto _out; }
}}
	break;
	case 359:
	{{p = ((te))-1;}{
  sym.tok = TK_NAME;
  {p++; goto _out; }
 }}
	break;
	case 360:
	{{p = ((te))-1;}{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts, 10 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 361:
	{	switch( act ) {
	case 1:
	{{p = ((te))-1;}
	sym.tok = TK_ASMPC;
	;
	{p++; goto _out; }
}
	break;
	case 5:
	{{p = ((te))-1;}
	sym.tok = TK_MOD;
	;
	{p++; goto _out; }
}
	break;
	case 37:
	{{p = ((te))-1;}
	sym.tok = TK_NZ;
	;
	{p++; goto _out; }
}
	break;
	case 38:
	{{p = ((te))-1;}
	sym.tok = TK_Z;
	;
	{p++; goto _out; }
}
	break;
	case 39:
	{{p = ((te))-1;}
	sym.tok = TK_NC;
	;
	{p++; goto _out; }
}
	break;
	case 40:
	{{p = ((te))-1;}
	sym.tok = TK_C;
	;
	{p++; goto _out; }
}
	break;
	case 41:
	{{p = ((te))-1;}
	sym.tok = TK_PO;
	;
	{p++; goto _out; }
}
	break;
	case 42:
	{{p = ((te))-1;}
	sym.tok = TK_PE;
	;
	{p++; goto _out; }
}
	break;
	case 43:
	{{p = ((te))-1;}
	sym.tok = TK_P;
	;
	{p++; goto _out; }
}
	break;
	case 44:
	{{p = ((te))-1;}
	sym.tok = TK_M;
	;
	{p++; goto _out; }
}
	break;
	case 45:
	{{p = ((te))-1;}
	if ((opts.cpu & CPU_R2K) || (opts.cpu & CPU_R3K)) {
		sym.tok = TK_LZ;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}
	break;
	case 46:
	{{p = ((te))-1;}
	if ((opts.cpu & CPU_R2K) || (opts.cpu & CPU_R3K)) {
		sym.tok = TK_LO;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}
	break;
	case 47:
	{{p = ((te))-1;}
	sym.tok = TK_NV;
	;
	{p++; goto _out; }
}
	break;
	case 48:
	{{p = ((te))-1;}
	sym.tok = TK_V;
	;
	{p++; goto _out; }
}
	break;
	case 49:
	{{p = ((te))-1;}
	sym.tok = TK_B;
	;
	{p++; goto _out; }
}
	break;
	case 50:
	{{p = ((te))-1;}
	sym.tok = TK_D;
	;
	{p++; goto _out; }
}
	break;
	case 51:
	{{p = ((te))-1;}
	sym.tok = TK_E;
	;
	{p++; goto _out; }
}
	break;
	case 52:
	{{p = ((te))-1;}
	sym.tok = TK_H;
	;
	{p++; goto _out; }
}
	break;
	case 53:
	{{p = ((te))-1;}
	sym.tok = TK_IXH;
	;
	{p++; goto _out; }
}
	break;
	case 54:
	{{p = ((te))-1;}
	sym.tok = TK_IYH;
	;
	{p++; goto _out; }
}
	break;
	case 55:
	{{p = ((te))-1;}
	sym.tok = TK_L;
	;
	{p++; goto _out; }
}
	break;
	case 56:
	{{p = ((te))-1;}
	sym.tok = TK_IXL;
	;
	{p++; goto _out; }
}
	break;
	case 57:
	{{p = ((te))-1;}
	sym.tok = TK_IYL;
	;
	{p++; goto _out; }
}
	break;
	case 58:
	{{p = ((te))-1;}
	sym.tok = TK_A;
	;
	{p++; goto _out; }
}
	break;
	case 59:
	{{p = ((te))-1;}
	sym.tok = TK_F;
	;
	{p++; goto _out; }
}
	break;
	case 60:
	{{p = ((te))-1;}
	sym.tok = TK_I;
	;
	{p++; goto _out; }
}
	break;
	case 61:
	{{p = ((te))-1;}
	sym.tok = TK_IIR;
	;
	{p++; goto _out; }
}
	break;
	case 62:
	{{p = ((te))-1;}
	sym.tok = TK_R;
	;
	{p++; goto _out; }
}
	break;
	case 63:
	{{p = ((te))-1;}
	sym.tok = TK_EIR;
	;
	{p++; goto _out; }
}
	break;
	case 64:
	{{p = ((te))-1;}
	sym.tok = TK_BC;
	;
	{p++; goto _out; }
}
	break;
	case 65:
	{{p = ((te))-1;}
	sym.tok = TK_DE;
	;
	{p++; goto _out; }
}
	break;
	case 66:
	{{p = ((te))-1;}
	sym.tok = TK_HL;
	;
	{p++; goto _out; }
}
	break;
	case 67:
	{{p = ((te))-1;}
	sym.tok = TK_IX;
	;
	{p++; goto _out; }
}
	break;
	case 68:
	{{p = ((te))-1;}
	sym.tok = TK_IY;
	;
	{p++; goto _out; }
}
	break;
	case 69:
	{{p = ((te))-1;}
	sym.tok = TK_AF;
	;
	{p++; goto _out; }
}
	break;
	case 70:
	{{p = ((te))-1;}
	sym.tok = TK_SP;
	;
	{p++; goto _out; }
}
	break;
	case 71:
	{{p = ((te))-1;}
	sym.tok = TK_IP;
	;
	{p++; goto _out; }
}
	break;
	case 72:
	{{p = ((te))-1;}
	sym.tok = TK_SU;
	;
	{p++; goto _out; }
}
	break;
	case 73:
	{{p = ((te))-1;}
	sym.tok = TK_XPC;
	;
	{p++; goto _out; }
}
	break;
	case 93:
	{{p = ((te))-1;}
	sym.tok = TK_A32;
	;
	{p++; goto _out; }
}
	break;
	case 94:
	{{p = ((te))-1;}
	sym.tok = TK_DEHL;
	;
	{p++; goto _out; }
}
	break;
	case 95:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ALIGN;
		sym.tok_opcode = TK_ALIGN;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ALIGN;
	}
	{p++; goto _out; }
}
	break;
	case 96:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BINARY;
		sym.tok_opcode = TK_BINARY;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BINARY;
	}
	{p++; goto _out; }
}
	break;
	case 97:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_C_LINE;
		sym.tok_opcode = TK_C_LINE;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_C_LINE;
	}
	{p++; goto _out; }
}
	break;
	case 98:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFB;
		sym.tok_opcode = TK_DEFB;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFB;
	}
	{p++; goto _out; }
}
	break;
	case 99:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFC;
		sym.tok_opcode = TK_DEFC;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFC;
	}
	{p++; goto _out; }
}
	break;
	case 100:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFGROUP;
		sym.tok_opcode = TK_DEFGROUP;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFGROUP;
	}
	{p++; goto _out; }
}
	break;
	case 101:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFINE;
		sym.tok_opcode = TK_DEFINE;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFINE;
	}
	{p++; goto _out; }
}
	break;
	case 102:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFM;
		sym.tok_opcode = TK_DEFM;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFM;
	}
	{p++; goto _out; }
}
	break;
	case 103:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFQ;
		sym.tok_opcode = TK_DEFQ;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFQ;
	}
	{p++; goto _out; }
}
	break;
	case 104:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFS;
		sym.tok_opcode = TK_DEFS;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFS;
	}
	{p++; goto _out; }
}
	break;
	case 105:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFVARS;
		sym.tok_opcode = TK_DEFVARS;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFVARS;
	}
	{p++; goto _out; }
}
	break;
	case 106:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFW;
		sym.tok_opcode = TK_DEFW;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFW;
	}
	{p++; goto _out; }
}
	break;
	case 107:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEPHASE;
		sym.tok_opcode = TK_DEPHASE;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEPHASE;
	}
	{p++; goto _out; }
}
	break;
	case 108:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ELSE;
		sym.tok_opcode = TK_ELSE;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ELSE;
	}
	{p++; goto _out; }
}
	break;
	case 109:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ENDIF;
		sym.tok_opcode = TK_ENDIF;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ENDIF;
	}
	{p++; goto _out; }
}
	break;
	case 110:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EXTERN;
		sym.tok_opcode = TK_EXTERN;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EXTERN;
	}
	{p++; goto _out; }
}
	break;
	case 111:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_GLOBAL;
		sym.tok_opcode = TK_GLOBAL;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_GLOBAL;
	}
	{p++; goto _out; }
}
	break;
	case 112:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IF;
		sym.tok_opcode = TK_IF;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IF;
	}
	{p++; goto _out; }
}
	break;
	case 113:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IFDEF;
		sym.tok_opcode = TK_IFDEF;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IFDEF;
	}
	{p++; goto _out; }
}
	break;
	case 114:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IFNDEF;
		sym.tok_opcode = TK_IFNDEF;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IFNDEF;
	}
	{p++; goto _out; }
}
	break;
	case 115:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INCLUDE;
		sym.tok_opcode = TK_INCLUDE;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INCLUDE;
	}
	{p++; goto _out; }
}
	break;
	case 116:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LIB;
		sym.tok_opcode = TK_LIB;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LIB;
	}
	{p++; goto _out; }
}
	break;
	case 117:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LINE;
		sym.tok_opcode = TK_LINE;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LINE;
	}
	{p++; goto _out; }
}
	break;
	case 118:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSTOFF;
		sym.tok_opcode = TK_LSTOFF;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSTOFF;
	}
	{p++; goto _out; }
}
	break;
	case 119:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSTON;
		sym.tok_opcode = TK_LSTON;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSTON;
	}
	{p++; goto _out; }
}
	break;
	case 120:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MODULE;
		sym.tok_opcode = TK_MODULE;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MODULE;
	}
	{p++; goto _out; }
}
	break;
	case 121:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ORG;
		sym.tok_opcode = TK_ORG;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ORG;
	}
	{p++; goto _out; }
}
	break;
	case 122:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PHASE;
		sym.tok_opcode = TK_PHASE;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PHASE;
	}
	{p++; goto _out; }
}
	break;
	case 123:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PUBLIC;
		sym.tok_opcode = TK_PUBLIC;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PUBLIC;
	}
	{p++; goto _out; }
}
	break;
	case 124:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SECTION;
		sym.tok_opcode = TK_SECTION;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SECTION;
	}
	{p++; goto _out; }
}
	break;
	case 125:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_UNDEFINE;
		sym.tok_opcode = TK_UNDEFINE;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_UNDEFINE;
	}
	{p++; goto _out; }
}
	break;
	case 126:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XDEF;
		sym.tok_opcode = TK_XDEF;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XDEF;
	}
	{p++; goto _out; }
}
	break;
	case 127:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XLIB;
		sym.tok_opcode = TK_XLIB;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XLIB;
	}
	{p++; goto _out; }
}
	break;
	case 128:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XREF;
		sym.tok_opcode = TK_XREF;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XREF;
	}
	{p++; goto _out; }
}
	break;
	case 133:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ADC;
		sym.tok_opcode = TK_ADC;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ADC;
	}
	{p++; goto _out; }
}
	break;
	case 134:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ADD;
		sym.tok_opcode = TK_ADD;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ADD;
	}
	{p++; goto _out; }
}
	break;
	case 135:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_AND;
		sym.tok_opcode = TK_AND;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_AND;
	}
	{p++; goto _out; }
}
	break;
	case 136:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BIT;
		sym.tok_opcode = TK_BIT;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BIT;
	}
	{p++; goto _out; }
}
	break;
	case 137:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CALL;
		sym.tok_opcode = TK_CALL;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL;
	}
	{p++; goto _out; }
}
	break;
	case 138:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CCF;
		sym.tok_opcode = TK_CCF;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CCF;
	}
	{p++; goto _out; }
}
	break;
	case 140:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CP;
		sym.tok_opcode = TK_CP;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CP;
	}
	{p++; goto _out; }
}
	break;
	case 141:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPD;
		sym.tok_opcode = TK_CPD;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPD;
	}
	{p++; goto _out; }
}
	break;
	case 142:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPDR;
		sym.tok_opcode = TK_CPDR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPDR;
	}
	{p++; goto _out; }
}
	break;
	case 143:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPI;
		sym.tok_opcode = TK_CPI;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPI;
	}
	{p++; goto _out; }
}
	break;
	case 144:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPIR;
		sym.tok_opcode = TK_CPIR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPIR;
	}
	{p++; goto _out; }
}
	break;
	case 145:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPL;
		sym.tok_opcode = TK_CPL;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPL;
	}
	{p++; goto _out; }
}
	break;
	case 146:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DAA;
		sym.tok_opcode = TK_DAA;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DAA;
	}
	{p++; goto _out; }
}
	break;
	case 147:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEC;
		sym.tok_opcode = TK_DEC;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEC;
	}
	{p++; goto _out; }
}
	break;
	case 148:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DI;
		sym.tok_opcode = TK_DI;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DI;
	}
	{p++; goto _out; }
}
	break;
	case 149:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DJNZ;
		sym.tok_opcode = TK_DJNZ;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DJNZ;
	}
	{p++; goto _out; }
}
	break;
	case 150:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EI;
		sym.tok_opcode = TK_EI;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EI;
	}
	{p++; goto _out; }
}
	break;
	case 151:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EX;
		sym.tok_opcode = TK_EX;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EX;
	}
	{p++; goto _out; }
}
	break;
	case 152:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EXX;
		sym.tok_opcode = TK_EXX;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EXX;
	}
	{p++; goto _out; }
}
	break;
	case 153:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_HALT;
		sym.tok_opcode = TK_HALT;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_HALT;
	}
	{p++; goto _out; }
}
	break;
	case 154:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IM;
		sym.tok_opcode = TK_IM;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IM;
	}
	{p++; goto _out; }
}
	break;
	case 155:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IN;
		sym.tok_opcode = TK_IN;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IN;
	}
	{p++; goto _out; }
}
	break;
	case 156:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INC;
		sym.tok_opcode = TK_INC;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INC;
	}
	{p++; goto _out; }
}
	break;
	case 157:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IND;
		sym.tok_opcode = TK_IND;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IND;
	}
	{p++; goto _out; }
}
	break;
	case 158:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INDR;
		sym.tok_opcode = TK_INDR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INDR;
	}
	{p++; goto _out; }
}
	break;
	case 159:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INI;
		sym.tok_opcode = TK_INI;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INI;
	}
	{p++; goto _out; }
}
	break;
	case 160:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INIR;
		sym.tok_opcode = TK_INIR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INIR;
	}
	{p++; goto _out; }
}
	break;
	case 161:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JP;
		sym.tok_opcode = TK_JP;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JP;
	}
	{p++; goto _out; }
}
	break;
	case 162:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JR;
		sym.tok_opcode = TK_JR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JR;
	}
	{p++; goto _out; }
}
	break;
	case 163:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LD;
		sym.tok_opcode = TK_LD;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LD;
	}
	{p++; goto _out; }
}
	break;
	case 164:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDD;
		sym.tok_opcode = TK_LDD;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDD;
	}
	{p++; goto _out; }
}
	break;
	case 165:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDR;
		sym.tok_opcode = TK_LDDR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDR;
	}
	{p++; goto _out; }
}
	break;
	case 166:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDI;
		sym.tok_opcode = TK_LDI;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDI;
	}
	{p++; goto _out; }
}
	break;
	case 167:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIR;
		sym.tok_opcode = TK_LDIR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIR;
	}
	{p++; goto _out; }
}
	break;
	case 168:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_NEG;
		sym.tok_opcode = TK_NEG;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_NEG;
	}
	{p++; goto _out; }
}
	break;
	case 169:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_NOP;
		sym.tok_opcode = TK_NOP;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_NOP;
	}
	{p++; goto _out; }
}
	break;
	case 170:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OR;
		sym.tok_opcode = TK_OR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OR;
	}
	{p++; goto _out; }
}
	break;
	case 171:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTDR;
		sym.tok_opcode = TK_OTDR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDR;
	}
	{p++; goto _out; }
}
	break;
	case 172:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTIR;
		sym.tok_opcode = TK_OTIR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIR;
	}
	{p++; goto _out; }
}
	break;
	case 173:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUT;
		sym.tok_opcode = TK_OUT;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUT;
	}
	{p++; goto _out; }
}
	break;
	case 174:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUTD;
		sym.tok_opcode = TK_OUTD;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTD;
	}
	{p++; goto _out; }
}
	break;
	case 175:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUTI;
		sym.tok_opcode = TK_OUTI;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTI;
	}
	{p++; goto _out; }
}
	break;
	case 176:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_POP;
		sym.tok_opcode = TK_POP;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_POP;
	}
	{p++; goto _out; }
}
	break;
	case 177:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PUSH;
		sym.tok_opcode = TK_PUSH;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PUSH;
	}
	{p++; goto _out; }
}
	break;
	case 178:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RES;
		sym.tok_opcode = TK_RES;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RES;
	}
	{p++; goto _out; }
}
	break;
	case 179:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RET;
		sym.tok_opcode = TK_RET;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RET;
	}
	{p++; goto _out; }
}
	break;
	case 180:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RETI;
		sym.tok_opcode = TK_RETI;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RETI;
	}
	{p++; goto _out; }
}
	break;
	case 181:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RETN;
		sym.tok_opcode = TK_RETN;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RETN;
	}
	{p++; goto _out; }
}
	break;
	case 182:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RL;
		sym.tok_opcode = TK_RL;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RL;
	}
	{p++; goto _out; }
}
	break;
	case 183:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLA;
		sym.tok_opcode = TK_RLA;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLA;
	}
	{p++; goto _out; }
}
	break;
	case 185:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLC;
		sym.tok_opcode = TK_RLC;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLC;
	}
	{p++; goto _out; }
}
	break;
	case 186:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLCA;
		sym.tok_opcode = TK_RLCA;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLCA;
	}
	{p++; goto _out; }
}
	break;
	case 188:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLD;
		sym.tok_opcode = TK_RLD;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLD;
	}
	{p++; goto _out; }
}
	break;
	case 189:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RR;
		sym.tok_opcode = TK_RR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RR;
	}
	{p++; goto _out; }
}
	break;
	case 190:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRA;
		sym.tok_opcode = TK_RRA;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRA;
	}
	{p++; goto _out; }
}
	break;
	case 192:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRC;
		sym.tok_opcode = TK_RRC;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRC;
	}
	{p++; goto _out; }
}
	break;
	case 193:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRCA;
		sym.tok_opcode = TK_RRCA;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRCA;
	}
	{p++; goto _out; }
}
	break;
	case 195:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRD;
		sym.tok_opcode = TK_RRD;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRD;
	}
	{p++; goto _out; }
}
	break;
	case 196:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RST;
		sym.tok_opcode = TK_RST;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RST;
	}
	{p++; goto _out; }
}
	break;
	case 197:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SBC;
		sym.tok_opcode = TK_SBC;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SBC;
	}
	{p++; goto _out; }
}
	break;
	case 198:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SCF;
		sym.tok_opcode = TK_SCF;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SCF;
	}
	{p++; goto _out; }
}
	break;
	case 200:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SET;
		sym.tok_opcode = TK_SET;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SET;
	}
	{p++; goto _out; }
}
	break;
	case 201:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLA;
		sym.tok_opcode = TK_SLA;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLA;
	}
	{p++; goto _out; }
}
	break;
	case 202:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLL;
		sym.tok_opcode = TK_SLL;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLL;
	}
	{p++; goto _out; }
}
	break;
	case 203:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLI;
		sym.tok_opcode = TK_SLI;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLI;
	}
	{p++; goto _out; }
}
	break;
	case 204:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SRA;
		sym.tok_opcode = TK_SRA;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SRA;
	}
	{p++; goto _out; }
}
	break;
	case 205:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SRL;
		sym.tok_opcode = TK_SRL;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SRL;
	}
	{p++; goto _out; }
}
	break;
	case 206:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SUB;
		sym.tok_opcode = TK_SUB;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SUB;
	}
	{p++; goto _out; }
}
	break;
	case 207:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XOR;
		sym.tok_opcode = TK_XOR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XOR;
	}
	{p++; goto _out; }
}
	break;
	case 208:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SWAPNIB;
		sym.tok_opcode = TK_SWAPNIB;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SWAPNIB;
	}
	{p++; goto _out; }
}
	break;
	case 209:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SWAP;
		sym.tok_opcode = TK_SWAP;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SWAP;
	}
	{p++; goto _out; }
}
	break;
	case 210:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUTINB;
		sym.tok_opcode = TK_OUTINB;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTINB;
	}
	{p++; goto _out; }
}
	break;
	case 211:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIX;
		sym.tok_opcode = TK_LDIX;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIX;
	}
	{p++; goto _out; }
}
	break;
	case 212:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIRX;
		sym.tok_opcode = TK_LDIRX;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIRX;
	}
	{p++; goto _out; }
}
	break;
	case 213:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDX;
		sym.tok_opcode = TK_LDDX;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDX;
	}
	{p++; goto _out; }
}
	break;
	case 214:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDRX;
		sym.tok_opcode = TK_LDDRX;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDRX;
	}
	{p++; goto _out; }
}
	break;
	case 215:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIRSCALE;
		sym.tok_opcode = TK_LDIRSCALE;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIRSCALE;
	}
	{p++; goto _out; }
}
	break;
	case 216:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDPIRX;
		sym.tok_opcode = TK_LDPIRX;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDPIRX;
	}
	{p++; goto _out; }
}
	break;
	case 217:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_FILL;
		sym.tok_opcode = TK_FILL;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FILL;
	}
	{p++; goto _out; }
}
	break;
	case 218:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_FILLDE;
		sym.tok_opcode = TK_FILLDE;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FILLDE;
	}
	{p++; goto _out; }
}
	break;
	case 219:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MIRROR;
		sym.tok_opcode = TK_MIRROR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MIRROR;
	}
	{p++; goto _out; }
}
	break;
	case 220:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_POPX;
		sym.tok_opcode = TK_POPX;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_POPX;
	}
	{p++; goto _out; }
}
	break;
	case 221:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_NEXTREG;
		sym.tok_opcode = TK_NEXTREG;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_NEXTREG;
	}
	{p++; goto _out; }
}
	break;
	case 222:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PIXELDN;
		sym.tok_opcode = TK_PIXELDN;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PIXELDN;
	}
	{p++; goto _out; }
}
	break;
	case 223:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PIXELAD;
		sym.tok_opcode = TK_PIXELAD;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PIXELAD;
	}
	{p++; goto _out; }
}
	break;
	case 224:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SETAE;
		sym.tok_opcode = TK_SETAE;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SETAE;
	}
	{p++; goto _out; }
}
	break;
	case 225:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_TEST;
		sym.tok_opcode = TK_TEST;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TEST;
	}
	{p++; goto _out; }
}
	break;
	case 226:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU;
		sym.tok_opcode = TK_MMU;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU;
	}
	{p++; goto _out; }
}
	break;
	case 227:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU0;
		sym.tok_opcode = TK_MMU0;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU0;
	}
	{p++; goto _out; }
}
	break;
	case 228:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU1;
		sym.tok_opcode = TK_MMU1;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU1;
	}
	{p++; goto _out; }
}
	break;
	case 229:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU2;
		sym.tok_opcode = TK_MMU2;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU2;
	}
	{p++; goto _out; }
}
	break;
	case 230:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU3;
		sym.tok_opcode = TK_MMU3;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU3;
	}
	{p++; goto _out; }
}
	break;
	case 231:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU4;
		sym.tok_opcode = TK_MMU4;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU4;
	}
	{p++; goto _out; }
}
	break;
	case 232:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU5;
		sym.tok_opcode = TK_MMU5;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU5;
	}
	{p++; goto _out; }
}
	break;
	case 233:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU6;
		sym.tok_opcode = TK_MMU6;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU6;
	}
	{p++; goto _out; }
}
	break;
	case 234:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU7;
		sym.tok_opcode = TK_MMU7;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU7;
	}
	{p++; goto _out; }
}
	break;
	case 239:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IN0;
		sym.tok_opcode = TK_IN0;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IN0;
	}
	{p++; goto _out; }
}
	break;
	case 240:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MLT;
		sym.tok_opcode = TK_MLT;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MLT;
	}
	{p++; goto _out; }
}
	break;
	case 241:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTDM;
		sym.tok_opcode = TK_OTDM;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDM;
	}
	{p++; goto _out; }
}
	break;
	case 242:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTDMR;
		sym.tok_opcode = TK_OTDMR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDMR;
	}
	{p++; goto _out; }
}
	break;
	case 243:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTIM;
		sym.tok_opcode = TK_OTIM;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIM;
	}
	{p++; goto _out; }
}
	break;
	case 244:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTIMR;
		sym.tok_opcode = TK_OTIMR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIMR;
	}
	{p++; goto _out; }
}
	break;
	case 245:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUT0;
		sym.tok_opcode = TK_OUT0;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUT0;
	}
	{p++; goto _out; }
}
	break;
	case 246:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLP;
		sym.tok_opcode = TK_SLP;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLP;
	}
	{p++; goto _out; }
}
	break;
	case 247:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_TST;
		sym.tok_opcode = TK_TST;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TST;
	}
	{p++; goto _out; }
}
	break;
	case 248:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_TSTIO;
		sym.tok_opcode = TK_TSTIO;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TSTIO;
	}
	{p++; goto _out; }
}
	break;
	case 249:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ALTD;
		sym.tok_opcode = TK_ALTD;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ALTD;
	}
	{p++; goto _out; }
}
	break;
	case 250:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BOOL;
		sym.tok_opcode = TK_BOOL;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BOOL;
	}
	{p++; goto _out; }
}
	break;
	case 251:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IDET;
		sym.tok_opcode = TK_IDET;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IDET;
	}
	{p++; goto _out; }
}
	break;
	case 252:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IOE;
		sym.tok_opcode = TK_IOE;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IOE;
	}
	{p++; goto _out; }
}
	break;
	case 253:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IOI;
		sym.tok_opcode = TK_IOI;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IOI;
	}
	{p++; goto _out; }
}
	break;
	case 254:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IPRES;
		sym.tok_opcode = TK_IPRES;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IPRES;
	}
	{p++; goto _out; }
}
	break;
	case 255:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IPSET;
		sym.tok_opcode = TK_IPSET;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IPSET;
	}
	{p++; goto _out; }
}
	break;
	case 256:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDSR;
		sym.tok_opcode = TK_LDDSR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDSR;
	}
	{p++; goto _out; }
}
	break;
	case 257:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDISR;
		sym.tok_opcode = TK_LDISR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDISR;
	}
	{p++; goto _out; }
}
	break;
	case 258:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDP;
		sym.tok_opcode = TK_LDP;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDP;
	}
	{p++; goto _out; }
}
	break;
	case 259:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSDR;
		sym.tok_opcode = TK_LSDR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSDR;
	}
	{p++; goto _out; }
}
	break;
	case 260:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSIR;
		sym.tok_opcode = TK_LSIR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSIR;
	}
	{p++; goto _out; }
}
	break;
	case 261:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSDDR;
		sym.tok_opcode = TK_LSDDR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSDDR;
	}
	{p++; goto _out; }
}
	break;
	case 262:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSIDR;
		sym.tok_opcode = TK_LSIDR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSIDR;
	}
	{p++; goto _out; }
}
	break;
	case 263:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MUL;
		sym.tok_opcode = TK_MUL;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MUL;
	}
	{p++; goto _out; }
}
	break;
	case 264:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RDMODE;
		sym.tok_opcode = TK_RDMODE;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RDMODE;
	}
	{p++; goto _out; }
}
	break;
	case 265:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SETUSR;
		sym.tok_opcode = TK_SETUSR;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SETUSR;
	}
	{p++; goto _out; }
}
	break;
	case 266:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SURES;
		sym.tok_opcode = TK_SURES;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SURES;
	}
	{p++; goto _out; }
}
	break;
	case 267:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SYSCALL;
		sym.tok_opcode = TK_SYSCALL;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SYSCALL;
	}
	{p++; goto _out; }
}
	break;
	case 268:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_UMA;
		sym.tok_opcode = TK_UMA;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_UMA;
	}
	{p++; goto _out; }
}
	break;
	case 269:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_UMS;
		sym.tok_opcode = TK_UMS;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_UMS;
	}
	{p++; goto _out; }
}
	break;
	case 270:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CALL_OZ;
		sym.tok_opcode = TK_CALL_OZ;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL_OZ;
	}
	{p++; goto _out; }
}
	break;
	case 271:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CALL_PKG;
		sym.tok_opcode = TK_CALL_PKG;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL_PKG;
	}
	{p++; goto _out; }
}
	break;
	case 272:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_FPP;
		sym.tok_opcode = TK_FPP;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FPP;
	}
	{p++; goto _out; }
}
	break;
	case 273:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INVOKE;
		sym.tok_opcode = TK_INVOKE;
		expect_opcode = FALSE;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INVOKE;
	}
	{p++; goto _out; }
}
	break;
	case 276:
	{{p = ((te))-1;}
  sym.tok = TK_NAME;
  {p++; goto _out; }
 }
	break;
	case 278:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts, 10 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 280:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 1, te - ts - 1, 16 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 282:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts - 1, 2 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 284:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 2, te - ts - 2, 2 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 288:
	{{p = ((te))-1;}
  sym.tok = TK_NIL;
  skip_to_newline();
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	}
	}
	break;
		}
	}
_again:
	_acts = _lexer_actions + _lexer_to_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 0:
	{ts = 0;}
	break;
		}
	}
	if ( cs == 0 )
		goto _out;
	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	if ( _lexer_eof_trans[cs] > 0 ) {
		_trans = _lexer_eof_trans[cs] - 1;
		goto _eof_trans;
	}
	}
	_out: {}
	}
 return sym.tok;
}
